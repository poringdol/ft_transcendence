{"ast":null,"code":"$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  };\n  App.Models.Guild = Backbone.Model.extend({\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: 'http://localhost:3000/get_guilds',\n    initialize: function initialize() {\n      this.fetch();\n    }\n  });\n  App.Views.Guild = Backbone.View.extend({\n    tagName: 'span',\n    className: 'GuildCard',\n    template: _.template($(\"#GuildTemplate\").html()),\n    initialize: function initialize() {\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #delete_guild': 'delete_guild'\n    },\n    render: function render() {\n      var template = this.template(this.model); // this.$el.css({ 'display': \"inline-block\", 'margin': '10px' });\n\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    delete_guild: function delete_guild() {// var new_titile = prompt('New task title: ');\n      // this.model.destroy();\n    }\n  });\n  App.Views.Guilds = Backbone.View.extend({\n    initialize: function initialize() {\n      this.collection.on('add', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildsTemplate').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      console.log(guild.name);\n      var guildView = new App.Views.Guild({\n        model: guild\n      });\n      this.$el.append(guildView.render().el);\n    }\n  });\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    initialize: function initialize() {\n      this.$el.html(this.template);\n    },\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFromAnagram]').val()\n      };\n      fetch(\"http://localhost:3000/create_new_guild\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(guild)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(function (user) {// new_guild = new App.Models.Guild(user);\n        // this.collection.add(new_user);\n      })[\"catch\"](function () {\n        alert('Error! Unable to create user!');\n      });\n    }\n  });\n  col = new App.Collections.Guild();\n  new App.Views.Guilds({\n    collection: col\n  });\n  form = new App.Views.NewGuild({\n    collection: col\n  });\n  form.render();\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["$","window","App","Models","Views","Collections","Router","Guild","Backbone","Model","extend","initialize","curr_guild","id","name","anagram","score","owner_id","created_at","updated_at","Collection","model","url","fetch","View","tagName","className","template","_","html","on","remove","events","render","$el","append","delete_guild","Guilds","collection","addOne","each","el","guild","console","log","guildView","NewGuild","submit","e","preventDefault","currentTarget","find","val","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","user","alert","col","form"],"mappings":"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","sourcesContent":["$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t}\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\tmodel: App.Models.Guild,\n\turl: 'http://localhost:3000/get_guilds',\n\tinitialize: function () {\n\t\tthis.fetch();\n\t}\n\t});\n\n\tApp.Views.Guild = Backbone.View.extend({\n\t\ttagName: 'span',\n\t\tclassName: 'GuildCard',\n\t\ttemplate: _.template($(\"#GuildTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #delete_guild': 'delete_guild'\n\t\t},\n\t\trender: function () {\n\t\t\tvar template = this.template(this.model);\n\t\t\t// this.$el.css({ 'display': \"inline-block\", 'margin': '10px' });\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tdelete_guild: function () {\n\t\t\t// var new_titile = prompt('New task title: ');\n\t\t\t// this.model.destroy();\n\t\t}\n\t})\n\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildsTemplate').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tconsole.log(guild.name);\n\t\t\tvar guildView = new App.Views.Guild({ model: guild });\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t});\n\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.$el.html(this.template)\n\t\t},\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFromAnagram]').val()\n\t\t\t}\n\t\t\tfetch(\"http://localhost:3000/create_new_guild\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(guild)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(user => {\n\t\t\t\t// new_guild = new App.Models.Guild(user);\n\t\t\t\t// this.collection.add(new_user);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\talert('Error! Unable to create user!')\n\t\t\t})\n\t\t},\n\n\t})\n\n\tcol = new App.Collections.Guild();\n\tnew App.Views.Guilds({ collection: col });\n\tform = new App.Views.NewGuild({ collection: col });\n\tform.render();\n}());"]},"metadata":{},"sourceType":"module"}