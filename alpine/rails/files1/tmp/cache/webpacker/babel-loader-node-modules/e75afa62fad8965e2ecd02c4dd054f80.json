{"ast":null,"code":"document.addEventListener(\"DOMContentLoaded\", function () {\n  debugger;\n  new App.Router(); // new NavBar.Router();\n\n  Backbone.history.start(); // var navbar = new NavBar.Views.Header();\n  // navbar.render();\n  // var main_page = new MainPage.Views.Login();\n  // $('#HeaderBar').html(main_page.el);\n  // let coll = new AppUser.Collections.User();\n  // let usersView = new AppUser.Views.Users({ collection: coll });\n  // var tmp = fetchUsers(usersView);\n  // var tmp = fetchGuilds();\n  // createForm(usersView);\n  // var navbar = new NavBar.Views.Header();\n  // navbar.render();\n  // $('#HeaderBar').html(navbar.el);\n}); // const BASE_URL = \"http://localhost:3000\"\n// function fetchUsers(usersView) {\n// \tusersView.render();\n// \t$('#userDiv').html(usersView.el);\n// }\n// function getUserId()\n// {\n// \tvar tmp;\n// \tjQuery.ajax({\n//         url: 'http://localhost:3000/get_user_id',\n// \t\tsuccess: function (result) {\n// \t\t\ttmp = result;\n//         },\n// \t\tasync: false\n// \t});\n// \treturn tmp;\n// $.get( \"http://localhost:3000/get_user_id\", user_id => {})\n// .done(function(user_id) {\n// \treturn (user_id)\n// })\n// .fail(function() {\n// \talert( \"error\" );\n// })\n// .always(function() {\n// \t;\n// });\n// fetch('http://localhost:3000/get_user_id')\n// .then(resp => resp.json())\n// .then(user_id => {\n// \talert(user_id)\n// })\n// }\n// function createForm(usersView) {\n// \tlet userForm = document.getElementById(\"userForm\");\n// \t$(userForm).html(\n// \t\t'<div class=\"class row\" style=\"margin-left: 20px\">' +\n// \t\t\t'<div class=\"col-3\">' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<label for=\"userFromIntra\" class=\"visually-hidden\">Email</label>' +\n// \t\t\t\t\t'<input placeholder=\"Intra login\" type=\"text\" class=\"form-control col\" id=\"userFromIntra\" value=\"\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<label for=\"userFromNick\" class=\"visually-hidden\">Email</label>' +\n// \t\t\t\t\t'<input placeholder=\"Nickname\" type=\"text\" class=\"form-control col\" id=\"userFromNick\" value=\"\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<label for=\"inputPassword2\" class=\"visually-hidden\">Email</label>' +\n// \t\t\t\t\t'<input placeholder=\"Guild\" type=\"text\" class=\"form-control col\" id=\"userFromGuild\" value=\"\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<input type=\"submit\" class=\"btn btn-outline-dark mb-3 col\" value=\"create\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t'</div>' +\n// \t\t'</div>');\n// \tuserForm.addEventListener(\"submit\", () => {\n// \t\tvar new_user_id = getUserId() + 1;\n// \t\tevent.preventDefault();\n// \t\tlet user = {\n// \t\t\tuser_id: new_user_id,\n// \t\t\tintra: document.getElementById(\"userFromIntra\").value,\n// \t\t\tnick: document.getElementById(\"userFromNick\").value, is_online: true, guild_id: 1, guild_join_time: '2021-01-03', wins: 0, loses: 0, score: 0\n// \t\t}\n// \t\tfetch(\"http://localhost:3000/users\", {\n// \t\t\tmethod: \"POST\",\n// \t\t\theaders: {\n// \t\t\t\t'Accept': 'application/json',\n// \t\t\t\t'Content-Type': 'application/json'\n// \t\t\t},\n// \t\t\tbody: JSON.stringify(user)\n// \t\t})\n// \t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n// \t\t\t.then(user => {\n// \t\t\t\tnew_user = new AppUser.Models.User(user);\n// \t\t\t\tusersView.addOne(new_user);\n// \t\t\t})\n// \t\t\t.catch(() => {\n// \t\t\t\talert('Error! Unable to create user!')\n// \t\t\t})\n// \t})\n// }\n// function deleteUser(id) {\n// \t$.ajax({\n// \t\turl: 'http://localhost:3000/users/' + id,\n// \t\ttype: 'DELETE',\n// \t\tsuccess: function(result) {\n// \t\t\talert (\"done!\")\n// \t\t}\n// \t});\n// }\n// function fetchUsers() {\n// \tfetch('http://localhost:3000/users')\n// \t\t.then(resp => resp.json())\n// \t\t.then(users => {\n// \t\t\tlet coll = new AppUser.Collections.User();\n// \t\t\t// for (const user of users) {\n// \t\t\t// \tlet u = new AppUser.Models.User(user)//user.id, user.user_id, user.intra, user.nick, user.guild_id)\n// \t\t\t// \tcoll.add(u)\n// \t\t\t// }\n// \t\t\t// coll.fetch();\n// \t\t\tconsole.log(coll);\n// \t\t\tlet usersView = new AppUser.Views.Users({ collection: coll });\n// \t\t\tusersView.render();\n// \t\t\t$('#userDiv').html(usersView.el);\n// \t\t})\n// }\n// function checkCollection() {\n// \tlet coll = new AppUser.Collections.User();\n// \tcoll.fetch();\n// \tconsole.log(coll);\n// }\n// let coll = new AppUserUser.Collections.User({});\n// for (const user of users) {\n// \t// console.log(user)\n// \tlet u = new AppUserUser.Models.User(user.id, user.user_id, user.intra, user.nick, user.guild_id)\n// \tcoll.add(u)\n// \t// console.log(\"backbone\", u.nick)\n// \t//console.log(coll);\n// \t// let userView = new AppUserUser.Views.User({ model: u })\n// \t// userView.render()\n// }\n// console.log(coll);\n// let usersView = new AppUserUser.Views.Users({ collection: coll });\n// usersView.render();\n// $('#userDiv').html(usersView.el);\n// function fetchGuilds() {\n// \tfetch('http://localhost:3000/guilds')\n// \t\t.then(resp => resp.json())\n// \t\t.then(guilds => { console.log(guilds) })\n// }","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["document","addEventListener","App","Router","Backbone","history","start"],"mappings":"AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AACnD;AACA,MAAIC,GAAG,CAACC,MAAR,GAFmD,CAGnD;;AACAC,EAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GAJmD,CAKnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBD,E,CAmBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACE;AACF;AACE;AACA;AACC;AACD;AACA;AACC;AACH;AAEA;AACA;AACA;AACA;AACA;AACD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n\tdebugger;\n\tnew App.Router();\n\t// new NavBar.Router();\n\tBackbone.history.start();\n\t// var navbar = new NavBar.Views.Header();\n\t// navbar.render();\n\t// var main_page = new MainPage.Views.Login();\n\t// $('#HeaderBar').html(main_page.el);\n\t// let coll = new AppUser.Collections.User();\n\t// let usersView = new AppUser.Views.Users({ collection: coll });\n\t// var tmp = fetchUsers(usersView);\n\t// var tmp = fetchGuilds();\n\t// createForm(usersView);\n\t// var navbar = new NavBar.Views.Header();\n\t// navbar.render();\n\t// $('#HeaderBar').html(navbar.el);\n});\n\n// const BASE_URL = \"http://localhost:3000\"\n\n// function fetchUsers(usersView) {\n// \tusersView.render();\n// \t$('#userDiv').html(usersView.el);\n// }\n\n// function getUserId()\n// {\n// \tvar tmp;\n// \tjQuery.ajax({\n//         url: 'http://localhost:3000/get_user_id',\n// \t\tsuccess: function (result) {\n// \t\t\ttmp = result;\n//         },\n// \t\tasync: false\n// \t});\n// \treturn tmp;\n\n\t// $.get( \"http://localhost:3000/get_user_id\", user_id => {})\n  \t// .done(function(user_id) {\n\t// \treturn (user_id)\n  \t// })\n  \t// .fail(function() {\n   \t// \talert( \"error\" );\n  \t// })\n  \t// .always(function() {\n    // \t;\n\t// });\n\n\t// fetch('http://localhost:3000/get_user_id')\n\t// .then(resp => resp.json())\n\t// .then(user_id => {\n\t// \talert(user_id)\n\t// })\n// }\n\n// function createForm(usersView) {\n// \tlet userForm = document.getElementById(\"userForm\");\n// \t$(userForm).html(\n// \t\t'<div class=\"class row\" style=\"margin-left: 20px\">' +\n// \t\t\t'<div class=\"col-3\">' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<label for=\"userFromIntra\" class=\"visually-hidden\">Email</label>' +\n// \t\t\t\t\t'<input placeholder=\"Intra login\" type=\"text\" class=\"form-control col\" id=\"userFromIntra\" value=\"\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<label for=\"userFromNick\" class=\"visually-hidden\">Email</label>' +\n// \t\t\t\t\t'<input placeholder=\"Nickname\" type=\"text\" class=\"form-control col\" id=\"userFromNick\" value=\"\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<label for=\"inputPassword2\" class=\"visually-hidden\">Email</label>' +\n// \t\t\t\t\t'<input placeholder=\"Guild\" type=\"text\" class=\"form-control col\" id=\"userFromGuild\" value=\"\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t\t'<form class=\"row\">' +\n// \t\t\t\t\t'<input type=\"submit\" class=\"btn btn-outline-dark mb-3 col\" value=\"create\">' +\n// \t\t\t\t'</form>' +\n// \t\t\t'</div>' +\n// \t\t'</div>');\n\t\n// \tuserForm.addEventListener(\"submit\", () => {\n// \t\tvar new_user_id = getUserId() + 1;\n// \t\tevent.preventDefault();\n// \t\tlet user = {\n// \t\t\tuser_id: new_user_id,\n// \t\t\tintra: document.getElementById(\"userFromIntra\").value,\n// \t\t\tnick: document.getElementById(\"userFromNick\").value, is_online: true, guild_id: 1, guild_join_time: '2021-01-03', wins: 0, loses: 0, score: 0\n// \t\t}\n\n// \t\tfetch(\"http://localhost:3000/users\", {\n// \t\t\tmethod: \"POST\",\n// \t\t\theaders: {\n// \t\t\t\t'Accept': 'application/json',\n// \t\t\t\t'Content-Type': 'application/json'\n// \t\t\t},\n// \t\t\tbody: JSON.stringify(user)\n// \t\t})\n// \t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n// \t\t\t.then(user => {\n// \t\t\t\tnew_user = new AppUser.Models.User(user);\n// \t\t\t\tusersView.addOne(new_user);\n// \t\t\t})\n// \t\t\t.catch(() => {\n// \t\t\t\talert('Error! Unable to create user!')\n// \t\t\t})\n// \t})\n// }\n\n// function deleteUser(id) {\n// \t$.ajax({\n// \t\turl: 'http://localhost:3000/users/' + id,\n// \t\ttype: 'DELETE',\n// \t\tsuccess: function(result) {\n// \t\t\talert (\"done!\")\n// \t\t}\n// \t});\n// }\n\n// function fetchUsers() {\n// \tfetch('http://localhost:3000/users')\n// \t\t.then(resp => resp.json())\n// \t\t.then(users => {\n// \t\t\tlet coll = new AppUser.Collections.User();\n// \t\t\t// for (const user of users) {\n// \t\t\t// \tlet u = new AppUser.Models.User(user)//user.id, user.user_id, user.intra, user.nick, user.guild_id)\n// \t\t\t// \tcoll.add(u)\n// \t\t\t// }\n// \t\t\t// coll.fetch();\n// \t\t\tconsole.log(coll);\n// \t\t\tlet usersView = new AppUser.Views.Users({ collection: coll });\n// \t\t\tusersView.render();\n// \t\t\t$('#userDiv').html(usersView.el);\n// \t\t})\n// }\n\n// function checkCollection() {\n// \tlet coll = new AppUser.Collections.User();\n// \tcoll.fetch();\n// \tconsole.log(coll);\n\n// }\n\n// let coll = new AppUserUser.Collections.User({});\n// for (const user of users) {\n// \t// console.log(user)\n// \tlet u = new AppUserUser.Models.User(user.id, user.user_id, user.intra, user.nick, user.guild_id)\n// \tcoll.add(u)\n// \t// console.log(\"backbone\", u.nick)\n// \t//console.log(coll);\n// \t// let userView = new AppUserUser.Views.User({ model: u })\n// \t// userView.render()\n// }\n// console.log(coll);\n// let usersView = new AppUserUser.Views.Users({ collection: coll });\n// usersView.render();\n// $('#userDiv').html(usersView.el);\n\n\n// function fetchGuilds() {\n// \tfetch('http://localhost:3000/guilds')\n// \t\t.then(resp => resp.json())\n// \t\t.then(guilds => { console.log(guilds) })\n// }\n"]},"metadata":{},"sourceType":"module"}