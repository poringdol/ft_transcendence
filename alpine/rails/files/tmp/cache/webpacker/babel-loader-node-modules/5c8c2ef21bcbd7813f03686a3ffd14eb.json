{"ast":null,"code":"$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  };\n  App.Models.Guild = Backbone.Model.extend({\n    urlRoot: 'http://localhost:3000/guilds',\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: 'http://localhost:3000/guilds',\n    initialize: function initialize() {\n      this.fetch();\n    }\n  });\n  App.Views.GuildList = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildListTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #GuildNameList': 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    showCard: function showCard() {\n      new App.Views.GuildCard({\n        model: this.model,\n        user_id: this.user_id\n      });\n    }\n  });\n  App.Views.GuildCard = Backbone.View.extend({\n    templateCard: _.template($(\"#GuildCardTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n      this.render();\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    render: function render() {\n      var _this = this;\n\n      var promise = fetch(\"http://localhost:3000/get_owner_nickname\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (owner) {\n        return _this.renderCard(owner);\n      }, this));\n      return this;\n    },\n    renderCard: function renderCard(owner) {\n      this.model.owner_nickname = owner.nickname;\n      var template = this.templateCard(this.model);\n      this.$el.html(template);\n      $('#GuildCard').html(this.el);\n      this.renderButtons();\n    },\n    renderButtons: function renderButtons() {\n      if (this.user_id == this.model.owner_id) new App.Views.GuildDelBtn({\n        model: this.model\n      });else $('#GuildCardBtn').html(\"\");\n    }\n  });\n  App.Views.GuildDelBtn = Backbone.View.extend({\n    templateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n    initialize: function initialize() {\n      this.$el.html(this.templateDeleteBtn);\n      $('#GuildCardBtn').html(this.el);\n    },\n    events: {\n      'click #delete_guild': 'delete_guild'\n    },\n    delete_guild: function delete_guild() {\n      alert(\"DELETE\");\n      var promise = this.model.destroy([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n      }, this));\n    }\n  });\n  App.Views.Guilds = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.user_id = data.user_id;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildList').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      var guildView = new App.Views.GuildList({\n        model: guild,\n        user_id: this.user_id\n      });\n      this.$el.append(guildView.render().el);\n    }\n  });\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      this.$el.html(this.template);\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n      };\n      new_guild = new App.Models.Guild(guild);\n      var promise = new_guild.save([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        alert('success');\n        this.collection.fetch();\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n      }, this));\n      $.when(promise).fail(function (resp) {\n        alert(resp.responseText);\n      });\n    }\n  });\n  fetch(\"http://localhost:3000/get_curr_user\").then(function (res) {\n    return res.ok ? res.json() : Promise.reject(res);\n  }).then(function (curr_user) {\n    col = new App.Collections.Guild();\n    form = new App.Views.NewGuild({\n      collection: col\n    });\n    form.render();\n    guilds_view = new App.Views.Guilds({\n      collection: col,\n      user_id: curr_user.id\n    });\n  });\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["$","window","App","Models","Views","Collections","Router","Guild","Backbone","Model","extend","urlRoot","initialize","curr_guild","id","name","anagram","score","owner_id","created_at","updated_at","Collection","model","url","fetch","GuildList","View","tagName","className","templateList","_","template","html","data","user_id","on","remove","events","render","$el","attr","append","showCard","GuildCard","templateCard","promise","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","bind","owner","renderCard","owner_nickname","nickname","el","renderButtons","GuildDelBtn","templateDeleteBtn","delete_guild","alert","destroy","dataType","when","done","css","Guilds","collection","addOne","each","guild","guildView","NewGuild","submit","e","preventDefault","currentTarget","find","val","new_guild","save","fail","resp","responseText","curr_user","col","form","guilds_view"],"mappings":"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","sourcesContent":["$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\turlRoot: 'http://localhost:3000/guilds',\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t}\n\t\t\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\t\tmodel: App.Models.Guild,\n\t\turl: 'http://localhost:3000/guilds',\n\t\tinitialize: function () {\n\t\t\tthis.fetch();\n\t\t}\n\t});\n\t\n\tApp.Views.GuildList = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\t\ttemplateList: _.template($(\"#GuildListTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tshowCard: function () {\n\t\t\tnew App.Views.GuildCard({ model: this.model, user_id: this.user_id })\n\t\t}\n\t})\n\n\tApp.Views.GuildCard = Backbone.View.extend({\n\t\ttemplateCard: _.template($(\"#GuildCardTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model\t = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\trender: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/get_owner_nickname\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(owner => this.renderCard(owner), this))\n\t\t\treturn this;\n\t\t},\n\t\trenderCard: function (owner) {\n\t\t\tthis.model.owner_nickname = owner.nickname;\n\t\t\tvar template = this.templateCard(this.model);\n\t\t\tthis.$el.html(template);\n\t\t\t$('#GuildCard').html(this.el);\n\t\t\tthis.renderButtons();\n\t\t},\n\t\trenderButtons: function () {\n\t\t\tif (this.user_id == this.model.owner_id)\n\t\t\t\tnew App.Views.GuildDelBtn({ model: this.model })\n\t\t\telse\n\t\t\t\t$('#GuildCardBtn').html(\"\");\n\t\t}\n\t})\n\n\tApp.Views.GuildDelBtn = Backbone.View.extend({\n\t\ttemplateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n\n\t\tinitialize: function () {\n\t\t\tthis.$el.html(this.templateDeleteBtn);\n\t\t\t$('#GuildCardBtn').html(this.el);\n\t\t},\n\t\tevents: {\n\t\t\t'click #delete_guild': 'delete_guild',\n\t\t},\n\t\tdelete_guild: function () {\n\t\t\talert(\"DELETE\");\n\t\t\tvar promise = this.model.destroy([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\t\t\t\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" });\n\t\t\t\t}, this)\n\t\t\t);\n\t\t},\n\t})\n\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildList').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tvar guildView = new App.Views.GuildList({ model: guild, user_id: this.user_id });\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t});\n\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template) \n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n\t\t\t}\n\t\t\tnew_guild = new App.Models.Guild(guild);\n\n\t\t\tvar promise = new_guild.save([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n    \t\t\t\talert('success');\n\t\t\t\t\tthis.collection.fetch()\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t}, this)\n\t\t\t);\n\n\t\t\t$.when(promise).fail(function (resp) {\n\t\t\t\talert(resp.responseText);\n\t\t\t});\n\t\t},\n\n\t})\n\tfetch(\"http://localhost:3000/get_curr_user\")\n\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t.then(function(curr_user) {\n\t\tcol = new App.Collections.Guild();\n\t\tform = new App.Views.NewGuild({ collection: col });\n\t\tform.render();\n\t\tguilds_view = new App.Views.Guilds( {collection: col, user_id: curr_user.id} );\n\t})\t\n}());"]},"metadata":{},"sourceType":"module"}