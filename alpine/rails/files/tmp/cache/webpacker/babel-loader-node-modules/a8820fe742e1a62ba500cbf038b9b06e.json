{"ast":null,"code":"import consumer from \"./consumer\";\ndocument.addEventListener('turbolinks:load', function () {\n  var room_element = document.getElementById('room-id');\n  var room_id = room_element != null ? room_element.getAttribute('data-room-id') : -1;\n  console.log(consumer.subscriptions);\n  consumer.subscriptions.subscriptions.forEach(function (subscription) {\n    consumer.subscriptions.remove(subscription);\n  });\n  consumer.subscriptions.create({\n    channel: \"RoomChannel\",\n    room_id: room_id\n  }, {\n    connected: function connected() {\n      // if (room_id < 0)\n      //   console.log(\"Room doesn't exist\");\n      // else\n      console.log(\"connected to \" + room_id); // Called when the subscription is ready for use on the server\n    },\n    disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {\n      var user_element = document.getElementById('user-id');\n      var user_id = Number(user_element.getAttribute('data-user-id'));\n      var html;\n\n      if (user_id === data.message.user_id) {\n        html = data.mine;\n      } else {\n        html = data.theirs;\n      }\n\n      var messageContainer = document.getElementById('messages');\n      messageContainer.innerHTML = messageContainer.innerHTML + html;\n    }\n  });\n});","map":{"version":3,"sources":["/pingpong/app/javascript/channels/room_channel.js"],"names":["consumer","document","addEventListener","room_element","getElementById","room_id","getAttribute","console","log","subscriptions","forEach","subscription","remove","create","channel","connected","disconnected","received","data","user_element","user_id","Number","html","message","mine","theirs","messageContainer","innerHTML"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAM;AACjD,MAAMC,YAAY,GAAGF,QAAQ,CAACG,cAAT,CAAwB,SAAxB,CAArB;AACA,MAAMC,OAAO,GAAIF,YAAY,IAAI,IAAjB,GAAyBA,YAAY,CAACG,YAAb,CAA0B,cAA1B,CAAzB,GAAqE,CAAC,CAAtF;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,aAArB;AAEAT,EAAAA,QAAQ,CAACS,aAAT,CAAuBA,aAAvB,CAAqCC,OAArC,CAA6C,UAACC,YAAD,EAAkB;AAC7DX,IAAAA,QAAQ,CAACS,aAAT,CAAuBG,MAAvB,CAA8BD,YAA9B;AACD,GAFD;AAIAX,EAAAA,QAAQ,CAACS,aAAT,CAAuBI,MAAvB,CAA8B;AAAEC,IAAAA,OAAO,EAAE,aAAX;AAA0BT,IAAAA,OAAO,EAAEA;AAAnC,GAA9B,EAA4E;AAC1EU,IAAAA,SAD0E,uBAC9D;AACV;AACA;AACA;AACER,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,OAA9B,EAJQ,CAKV;AACD,KAPyE;AAS1EW,IAAAA,YAT0E,0BAS3D,CACb;AACD,KAXyE;AAa1EC,IAAAA,QAb0E,oBAajEC,IAbiE,EAa3D;AACb,UAAMC,YAAY,GAAGlB,QAAQ,CAACG,cAAT,CAAwB,SAAxB,CAArB;AACA,UAAMgB,OAAO,GAAGC,MAAM,CAACF,YAAY,CAACb,YAAb,CAA0B,cAA1B,CAAD,CAAtB;AAEA,UAAIgB,IAAJ;;AAEA,UAAIF,OAAO,KAAKF,IAAI,CAACK,OAAL,CAAaH,OAA7B,EAAsC;AACpCE,QAAAA,IAAI,GAAGJ,IAAI,CAACM,IAAZ;AACD,OAFD,MAEO;AACLF,QAAAA,IAAI,GAAGJ,IAAI,CAACO,MAAZ;AACD;;AAED,UAAMC,gBAAgB,GAAGzB,QAAQ,CAACG,cAAT,CAAwB,UAAxB,CAAzB;AACAsB,MAAAA,gBAAgB,CAACC,SAAjB,GAA6BD,gBAAgB,CAACC,SAAjB,GAA6BL,IAA1D;AACD;AA3ByE,GAA5E;AA6BD,CAvCD","sourcesContent":["import consumer from \"./consumer\"\n\ndocument.addEventListener('turbolinks:load', () => {\n  const room_element = document.getElementById('room-id');\n  const room_id = (room_element != null) ? room_element.getAttribute('data-room-id') : -1;\n\n  console.log(consumer.subscriptions)\n\n  consumer.subscriptions.subscriptions.forEach((subscription) => {\n    consumer.subscriptions.remove(subscription)\n  })\n\n  consumer.subscriptions.create({ channel: \"RoomChannel\", room_id: room_id }, {\n    connected() {\n      // if (room_id < 0)\n      //   console.log(\"Room doesn't exist\");\n      // else\n        console.log(\"connected to \" + room_id);\n      // Called when the subscription is ready for use on the server\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n\n    received(data) {\n      const user_element = document.getElementById('user-id');\n      const user_id = Number(user_element.getAttribute('data-user-id'));\n\n      let html;\n\n      if (user_id === data.message.user_id) {\n        html = data.mine\n      } else {\n        html = data.theirs\n      }\n\n      const messageContainer = document.getElementById('messages')\n      messageContainer.innerHTML = messageContainer.innerHTML + html\n    }\n  });\n})\n"]},"metadata":{},"sourceType":"module"}