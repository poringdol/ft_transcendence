{"ast":null,"code":"$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  }; // ------------------------------------\n  // GUILD      MODEL and COLLECTION\n  // ------------------------------------\n\n  App.Models.Guild = Backbone.Model.extend({\n    urlRoot: 'http://localhost:3000/guilds',\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: 'http://localhost:3000/guilds',\n    initialize: function initialize() {\n      this.fetch();\n    }\n  }); // -----------------------------------------\n  // GUILD_USERS     MODEL and COLLECTION\n  // -----------------------------------------\n\n  App.Models.GuildUser = Backbone.Model.extend({\n    urlRoot: 'http://localhost:3000/get_guild_users',\n    initialize: function initialize(user) {\n      this.nickname = user.nickname;\n    }\n  });\n  App.Collections.GuildUsers = Backbone.Collection.extend({\n    model: App.Models.GuildUser,\n    url: 'http://localhost:3000/get_guild_users',\n    initialize: function initialize(data) {\n      this.url += '/' + data.guild;\n      this.fetch();\n    }\n  }); // -----------------------------------------\n  // GUILD_USERS          COLLECTION VIEW\n  // -----------------------------------------\n\n  App.Views.GuildUsers = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize() {\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildContent').html(this.el);\n      return this;\n    },\n    addOne: function addOne(user) {\n      var userView = new App.Views.GuildUser({\n        model: user\n      });\n      this.$el.append(userView.render().el);\n    }\n  }); // -----------------------------------------\n  // GUILD_USERS          MODEL VIEW\n  // -----------------------------------------\n\n  App.Views.GuildUser = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildUserListTemplate\").html()),\n    initialize: function initialize() {\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {// 'click #GuildNameList' : 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    }\n  }); // -----------------------------------------\n  // GUILD          MODEL LIST VIEW\n  // -----------------------------------------\n\n  App.Views.GuildList = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildListTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #GuildNameList': 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    showCard: function showCard() {\n      $('#GuildContent').html(\"\");\n      new App.Views.GuildCard({\n        model: this.model,\n        user_id: this.user_id\n      });\n    }\n  }); // -----------------------------------------\n  // GUILD          MODEL CARD VIEW\n  // -----------------------------------------\n\n  App.Views.GuildCard = Backbone.View.extend({\n    templateCard: _.template($(\"#GuildCardTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n      this.model.on('change', this.render, this);\n      this.render();\n    },\n    events: {\n      'click #GuildCardMembers': 'renderUserList'\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    render: function render() {\n      var _this = this;\n\n      var promise = fetch(\"http://localhost:3000/get_owner_nickname\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (owner) {\n        return _this.renderCard(owner);\n      }, this));\n      return this;\n    },\n    renderCard: function renderCard(owner) {\n      this.model.owner_nickname = owner.nickname;\n      var template = this.templateCard(this.model);\n      this.$el.html(template);\n      $('#GuildCard').html(this.el);\n      this.renderButtons();\n    },\n    renderButtons: function renderButtons() {\n      new App.Views.GuildCardBtn({\n        model: this.model,\n        view: this\n      });\n    },\n    renderUserList: function renderUserList() {\n      col = new App.Collections.GuildUsers({\n        guild: this.model.id\n      });\n      new App.Views.GuildUsers({\n        collection: col\n      });\n    }\n  }); // -----------------------------------------\n  // GUILD          MODEL CARD BUTTON VIEW\n  // -----------------------------------------\n\n  App.Views.GuildCardBtn = Backbone.View.extend({\n    templateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n    templateJoinBtn: _.template($(\"#GuildJoinBtnTemplate\").html()),\n    templateLeaveBtn: _.template($(\"#GuildLeaveBtnTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.view = data.view;\n      this.render();\n    },\n    render: function render() {\n      if (curr_user.id == this.model.owner_id) {\n        this.$el.html(this.templateDeleteBtn);\n        this.$el.append(this.templateLeaveBtn);\n      } else if (curr_user.guild_id == 0) this.$el.html(this.templateJoinBtn);else if (curr_user.guild_id == this.model.id) this.$el.html(this.templateLeaveBtn);else this.$el.html(\"\");\n\n      $('#GuildCardBtn').html(this.el);\n    },\n    events: {\n      'click #DelGuildBtn': 'deleteGuild',\n      'click #JoinGuildBtn': 'joinGuild',\n      'click #LeaveGuildBtn': 'leaveGuild'\n    },\n    deleteGuild: function deleteGuild() {\n      alert(\"DELETE\");\n      var promise = this.model.destroy([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function () {\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n        $('#GuildContent').html(\"\");\n      }, this));\n      curr_user.guild_id = 0;\n    },\n    joinGuild: function joinGuild() {\n      var _this2 = this;\n\n      var promise = fetch(\"http://localhost:3000/guilds/join\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function () {\n        alert('You joined guild ' + _this2.model.name + '!');\n        curr_user.guild_id = _this2.model.id;\n\n        _this2.render();\n\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n        $('#GuildContent').html(\"\");\n      }, this));\n      return this;\n    },\n    leaveGuild: function leaveGuild() {\n      var _this3 = this;\n\n      var promise = fetch(\"http://localhost:3000/guilds/exit\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (response) {\n        alert('You left guild ' + _this3.model.name + '!');\n        curr_user.guild_id = 0;\n        if (response == 0) _this3.model.destroy();else _this3.model.owner_id = response.owner_id;\n\n        _this3.render();\n\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n        $('#GuildContent').html(\"\");\n        $('#GuildCardOwner').html(\"Hello\");\n      }, this));\n      return this;\n    }\n  }); // -----------------------------------------\n  // GUILD          COLLECTION VIEW\n  // -----------------------------------------\n\n  App.Views.Guilds = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.user_id = data.user_id;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildList').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      var guildView = new App.Views.GuildList({\n        model: guild,\n        user_id: this.user_id\n      });\n      this.$el.append(guildView.render().el);\n    }\n  }); // -----------------------------------------\n  // FORM         CREATING GUILD FORM VIEW\n  // -----------------------------------------\n\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      this.$el.html(this.template);\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n      };\n      new_guild = new App.Models.Guild(guild);\n      var promise = new_guild.save([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        alert('success');\n        this.collection.fetch();\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n        $('#GuildCard').html(\"\");\n        $('#GuildContent').html(\"\");\n        curr_user.guild_id = new_guild.id;\n      }, this));\n      $.when(promise).fail(function (resp) {\n        alert(resp.responseText);\n      });\n    }\n  }); // -----------------------------------------\n  // MAIN\n  // -----------------------------------------\n\n  fetch(\"http://localhost:3000/get_curr_user\").then(function (res) {\n    return res.ok ? res.json() : Promise.reject(res);\n  }).then(function (curr_user) {\n    window.curr_user = curr_user;\n    col = new App.Collections.Guild();\n    form = new App.Views.NewGuild({\n      collection: col\n    });\n    form.render();\n    guilds_view = new App.Views.Guilds({\n      collection: col,\n      user_id: curr_user.id\n    });\n  });\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["$","window","App","Models","Views","Collections","Router","Guild","Backbone","Model","extend","urlRoot","initialize","curr_guild","id","name","anagram","score","owner_id","created_at","updated_at","Collection","model","url","fetch","GuildUser","user","nickname","GuildUsers","data","guild","View","className","collection","on","addOne","render","each","html","el","userView","$el","append","tagName","templateList","_","template","remove","events","attr","GuildList","user_id","showCard","GuildCard","templateCard","promise","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","bind","owner","renderCard","owner_nickname","renderButtons","GuildCardBtn","view","renderUserList","col","templateDeleteBtn","templateJoinBtn","templateLeaveBtn","curr_user","guild_id","deleteGuild","alert","destroy","dataType","when","done","css","joinGuild","leaveGuild","response","Guilds","guildView","NewGuild","submit","e","preventDefault","currentTarget","find","val","new_guild","save","fail","resp","responseText","form","guilds_view"],"mappings":"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","sourcesContent":["$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\t// ------------------------------------\n\t// GUILD      MODEL and COLLECTION\n\t// ------------------------------------\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\turlRoot: 'http://localhost:3000/guilds',\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t}\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\t\tmodel: App.Models.Guild,\n\t\turl: 'http://localhost:3000/guilds',\n\t\tinitialize: function () {\n\t\t\tthis.fetch();\n\t\t}\n\t});\n\n\n\t// -----------------------------------------\n\t// GUILD_USERS     MODEL and COLLECTION\n\t// -----------------------------------------\n\tApp.Models.GuildUser = Backbone.Model.extend({\n\t\turlRoot: 'http://localhost:3000/get_guild_users',\n\t\tinitialize: function (user) {\n\t\t\tthis.nickname = user.nickname;\n\t\t}\n\t})\n\n\tApp.Collections.GuildUsers = Backbone.Collection.extend({\n\t\tmodel: App.Models.GuildUser,\n\t\turl: 'http://localhost:3000/get_guild_users',\n\t\tinitialize: function (data) {\n\t\t\tthis.url += ('/' + data.guild)\n\t\t\tthis.fetch();\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD_USERS          COLLECTION VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildUsers = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildContent').html(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (user) {\n\t\t\tvar userView = new App.Views.GuildUser({ model: user});\n\t\t\tthis.$el.append(userView.render().el);\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD_USERS          MODEL VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildUser = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\t\ttemplateList: _.template($(\"#GuildUserListTemplate\").html()),\n\n\t\tinitialize: function () {\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t// 'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          MODEL LIST VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildList = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\t\ttemplateList: _.template($(\"#GuildListTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tshowCard: function () {\n\t\t\t$('#GuildContent').html(\"\");\n\t\t\tnew App.Views.GuildCard({ model: this.model, user_id: this.user_id })\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          MODEL CARD VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildCard = Backbone.View.extend({\n\t\ttemplateCard: _.template($(\"#GuildCardTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model\t = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t\tthis.model.on('change', this.render, this);\n\t\t\tthis.render();\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildCardMembers':  'renderUserList',\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\trender: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/get_owner_nickname\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(owner => this.renderCard(owner), this))\n\t\t\treturn this;\n\t\t},\n\t\trenderCard: function (owner) {\n\t\t\tthis.model.owner_nickname = owner.nickname;\n\t\t\tvar template = this.templateCard(this.model);\n\t\t\tthis.$el.html(template);\n\t\t\t$('#GuildCard').html(this.el);\n\t\t\tthis.renderButtons();\n\t\t},\n\t\trenderButtons: function () {\n\t\t\tnew App.Views.GuildCardBtn({ model: this.model, view: this})\n\t\t},\n\t\trenderUserList: function () {\n\t\t\tcol = new App.Collections.GuildUsers({ guild: this.model.id })\n\t\t\tnew App.Views.GuildUsers({ collection: col })\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          MODEL CARD BUTTON VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildCardBtn = Backbone.View.extend({\n\t\ttemplateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n\t\ttemplateJoinBtn:   _.template($(\"#GuildJoinBtnTemplate\").html()),\n\t\ttemplateLeaveBtn:  _.template($(\"#GuildLeaveBtnTemplate\").html()),\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model\n\t\t\tthis.view = data.view\n\t\t\tthis.render()\n\t\t},\n\t\trender: function () {\n\t\t\tif (curr_user.id == this.model.owner_id) {\n\t\t\t\tthis.$el.html(this.templateDeleteBtn)\n\t\t\t\tthis.$el.append(this.templateLeaveBtn)\n\t\t\t}\n\t\t\telse if (curr_user.guild_id == 0)\n\t\t\t\tthis.$el.html(this.templateJoinBtn)\n\t\t\telse if (curr_user.guild_id == this.model.id)\n\t\t\t\tthis.$el.html(this.templateLeaveBtn)\n\t\t\telse\n\t\t\t\tthis.$el.html(\"\")\n\t\t\t$('#GuildCardBtn').html(this.el);\n\t\t},\n\t\tevents: {\n\t\t\t'click #DelGuildBtn':   'deleteGuild',\n\t\t\t'click #JoinGuildBtn':  'joinGuild',\n\t\t\t'click #LeaveGuildBtn': 'leaveGuild',\n\t\t},\n\t\tdeleteGuild: function () {\n\t\t\talert(\"DELETE\");\n\t\t\tvar promise = this.model.destroy([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function () {\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" })\n\t\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\t}, this)\n\t\t\t);\n\t\t\tcurr_user.guild_id = 0\n\t\t},\n\t\tjoinGuild: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/guilds/join\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(() => {\n\t\t\t\talert('You joined guild ' + this.model.name + '!');\n\t\t\t\tcurr_user.guild_id = this.model.id;\n\t\t\t\tthis.render();\n\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t}, this))\n\t\t\treturn this;\n\t\t},\n\t\tleaveGuild: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/guilds/exit\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind((response) => {\n\t\t\t\talert('You left guild ' + this.model.name + '!');\n\t\t\t\tcurr_user.guild_id = 0;\n\t\t\t\tif (response == 0)\n\t\t\t\t\tthis.model.destroy();\n\t\t\t\telse\n\t\t\t\t\tthis.model.owner_id = response.owner_id;\n\t\t\t\tthis.render();\n\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" });\n\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\t$('#GuildCardOwner').html(\"Hello\");\n\t\t\t}, this))\n\t\t\treturn this;\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          COLLECTION VIEW\n\t// -----------------------------------------\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildList').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tvar guildView = new App.Views.GuildList({ model: guild, user_id: this.user_id });\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t});\n\n\n\t// -----------------------------------------\n\t// FORM         CREATING GUILD FORM VIEW\n\t// -----------------------------------------\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template) \n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n\t\t\t}\n\t\t\tnew_guild = new App.Models.Guild(guild);\n\n\t\t\tvar promise = new_guild.save([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n    \t\t\t\talert('success');\n\t\t\t\t\tthis.collection.fetch()\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t\t$('#GuildCard').html(\"\");\n\t\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\t\tcurr_user.guild_id = new_guild.id\n\t\t\t\t}, this)\n\t\t\t);\n\n\t\t\t$.when(promise).fail(function (resp) {\n\t\t\t\talert(resp.responseText);\n\t\t\t});\n\t\t},\n\n\t})\n\n\n\t// -----------------------------------------\n\t// MAIN\n\t// -----------------------------------------\n\tfetch(\"http://localhost:3000/get_curr_user\")\n\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t.then(function(curr_user) {\n\t\twindow.curr_user = curr_user;\n\t\tcol = new App.Collections.Guild();\n\t\tform = new App.Views.NewGuild({ collection: col });\n\t\tform.render();\n\t\tguilds_view = new App.Views.Guilds( {collection: col, user_id: curr_user.id} );\n\t})\t\n}());"]},"metadata":{},"sourceType":"module"}