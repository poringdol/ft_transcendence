{"ast":null,"code":"$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  };\n  App.Models.Guild = Backbone.Model.extend({\n    urlRoot: 'http://localhost:3000/guilds',\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n      fetch(\"http://localhost:3000/get_owner_nickname\", this).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(function (owner) {\n        this.owner_nickname = owner.nickname;\n        console.log(this.owner_nickname);\n      });\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: 'http://localhost:3000/guilds',\n    initialize: function initialize() {\n      this.fetch();\n    }\n  });\n  App.Views.GuildList = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildListTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #GuildNameList': 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    showCard: function showCard() {\n      new App.Views.GuildCard({\n        model: this.model,\n        user_id: this.user_id\n      });\n    }\n  });\n  App.Views.GuildCard = Backbone.View.extend({\n    templateCard: _.template($(\"#GuildCardTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n      this.showCard();\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    showCard: function showCard() {\n      var template = this.templateCard(this.model);\n      this.$el.html(template);\n      $('#GuildCard').html(this.el);\n\n      if (this.user_id == this.model.owner_id) {\n        new App.Views.GuildDelBtn({\n          model: this.model\n        });\n      } else $('#GuildDeleteBtn').html(\"\");\n\n      return this;\n    }\n  });\n  App.Views.GuildDelBtn = Backbone.View.extend({\n    templateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n    events: {\n      'click #delete_guild': 'delete_guild'\n    },\n    initialize: function initialize() {\n      this.$el.html(this.templateDeleteBtn);\n      $('#GuildDeleteBtn').html(this.el);\n    },\n    delete_guild: function delete_guild() {\n      alert(\"DELETE\");\n      var promise = this.model.destroy([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n      }, this));\n    }\n  });\n  App.Views.Guilds = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.user_id = data.user_id;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildList').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      var guildView = new App.Views.GuildList({\n        model: guild,\n        user_id: this.user_id\n      });\n      this.$el.append(guildView.render().el);\n    }\n  });\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    // initialize: function () {\n    // \tthis.$el.html(this.template)\n    // },\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      this.$el.html(this.template);\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n      };\n      new_guild = new App.Models.Guild(guild);\n      var promise = new_guild.save([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        alert('success');\n        this.collection.fetch();\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n      }, this));\n      $.when(promise).fail(function (resp) {\n        alert(resp.responseText);\n      });\n    }\n  });\n  fetch(\"http://localhost:3000/get_curr_user\").then(function (res) {\n    return res.ok ? res.json() : Promise.reject(res);\n  }).then(function (curr_user_id) {\n    col = new App.Collections.Guild();\n    form = new App.Views.NewGuild({\n      collection: col\n    });\n    form.render();\n    guilds_view = new App.Views.Guilds({\n      collection: col,\n      user_id: curr_user_id\n    });\n  });\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["$","window","App","Models","Views","Collections","Router","Guild","Backbone","Model","extend","urlRoot","initialize","curr_guild","id","name","anagram","score","owner_id","created_at","updated_at","fetch","then","res","ok","json","Promise","reject","owner","owner_nickname","nickname","console","log","Collection","model","url","GuildList","View","tagName","className","templateList","_","template","html","data","user_id","on","remove","events","render","$el","attr","append","showCard","GuildCard","templateCard","el","GuildDelBtn","templateDeleteBtn","delete_guild","alert","promise","destroy","dataType","when","done","bind","css","Guilds","collection","addOne","each","guild","guildView","NewGuild","submit","e","preventDefault","currentTarget","find","val","new_guild","save","fail","resp","responseText","curr_user_id","col","form","guilds_view"],"mappings":"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","sourcesContent":["$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\turlRoot: 'http://localhost:3000/guilds',\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t\tfetch(\"http://localhost:3000/get_owner_nickname\", this)\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(function(owner) {\n\t\t\t\tthis.owner_nickname = owner.nickname\n\t\t\t\tconsole.log(this.owner_nickname)\n\t\t\t})\t\n\t\t}\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\t\tmodel: App.Models.Guild,\n\t\turl: 'http://localhost:3000/guilds',\n\t\tinitialize: function () {\n\t\t\tthis.fetch();\n\t\t}\n\t});\n\t\n\tApp.Views.GuildList = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\n\t\ttemplateList: _.template($(\"#GuildListTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tshowCard: function () {\n\t\t\tnew App.Views.GuildCard({\n\t\t\t\tmodel: this.model,\n\t\t\t\tuser_id: this.user_id\n\t\t\t})\n\t\t}\n\t})\n\n\tApp.Views.GuildCard = Backbone.View.extend({\n\t\t\n\t\ttemplateCard: _.template($(\"#GuildCardTemplate\").html()),\n\t\t\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.user_id = data.user_id;\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t\tthis.showCard();\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tshowCard: function () {\n\t\t\tvar template = this.templateCard(this.model);\n\t\t\tthis.$el.html(template);\n\t\t\t$('#GuildCard').html(this.el);\n\t\t\tif (this.user_id == this.model.owner_id)\n\t\t\t{\n\t\t\t\tnew App.Views.GuildDelBtn({\n\t\t\t\t\tmodel: this.model\n\t\t\t\t})\n\t\t\t}\n\t\t\telse\n\t\t\t\t$('#GuildDeleteBtn').html(\"\");\n\t\t\t\n\t\t\treturn this;\n\t\t}\n\t})\n\n\tApp.Views.GuildDelBtn = Backbone.View.extend({\n\n\t\ttemplateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n\n\t\tevents: {\n\t\t\t'click #delete_guild': 'delete_guild',\n\t\t},\n\n\t\tinitialize: function () {\n\t\t\tthis.$el.html(this.templateDeleteBtn);\n\t\t\t$('#GuildDeleteBtn').html(this.el);\n\t\t},\n\n\t\tdelete_guild: function () {\n\t\t\talert(\"DELETE\");\n\t\t\tvar promise = this.model.destroy([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\t\t\t\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" });\n\t\t\t\t}, this)\n\t\t\t);\n\t\t},\n\t})\n\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildList').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tvar guildView = new App.Views.GuildList({ model: guild, user_id: this.user_id });\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t});\n\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\t// initialize: function () {\n\t\t// \tthis.$el.html(this.template)\n\t\t// },\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template) \n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n\t\t\t}\n\t\t\tnew_guild = new App.Models.Guild(guild);\n\n\t\t\tvar promise = new_guild.save([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n    \t\t\t\talert('success');\n\t\t\t\t\tthis.collection.fetch()\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t}, this)\n\t\t\t);\n\n\t\t\t$.when(promise).fail(function (resp) {\n\t\t\t\talert(resp.responseText);\n\t\t\t});\n\t\t},\n\n\t})\n\tfetch(\"http://localhost:3000/get_curr_user\")\n\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t.then(function(curr_user_id) {\n\t\tcol = new App.Collections.Guild();\n\t\tform = new App.Views.NewGuild({ collection: col });\n\t\tform.render();\n\t\tguilds_view = new App.Views.Guilds( {collection: col, user_id: curr_user_id} );\n\t})\t\n}());"]},"metadata":{},"sourceType":"module"}