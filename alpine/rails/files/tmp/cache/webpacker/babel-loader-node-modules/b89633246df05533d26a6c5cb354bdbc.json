{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nwindow.AppUser = {\n  Models: {},\n  Views: {},\n  Collections: {},\n  Router: {}\n};\n/*\n** MODEL of a user from DB\n*/\n\nAppUser.Models.User = Backbone.Model.extend({\n  initialize: function initialize(curr_user) {\n    this.user_id = curr_user.user_id;\n    this.intra = curr_user.intra;\n    this.nick = curr_user.nick;\n    this.guild_id = curr_user.guild_id;\n    this.guild_join_time = curr_user.guild_join_time;\n  }\n});\n/*\n** COLLECTION of users (of models)\n** collection automaticly fills with the DB users (by fetch request)\n*/\n\nAppUser.Collections.User = Backbone.Collection.extend({\n  model: AppUser.Models.User,\n  url: 'http://localhost:3000/users',\n  initialize: function initialize() {\n    this.fetch();\n  }\n});\n/*\n** VIEW of a user (view of a single user (string with buttons))\n*/\n\nAppUser.Views.User = Backbone.View.extend({\n  tagName: 'li',\n  template: _.template($(\"#UserTemplate\").html()),\n  initialize: function initialize() {\n    this.model.on('destroy', this.remove, this);\n  },\n  render: function render() {\n    var template = this.template(this.model);\n    this.$el.append(template);\n    return this;\n  },\n  events: {\n    'click #delete_user': 'delete_user'\n  },\n  remove: function remove() {\n    this.$el.remove();\n  },\n  delete_user: function delete_user() {\n    this.model.destroy();\n  }\n});\n/*\n** VIEW of a list of users\n*/\n\nAppUser.Views.Users = Backbone.View.extend({\n  tagName: 'ul',\n  initialize: function initialize() {\n    this.collection.on('add', this.addOne, this);\n    this.render();\n  },\n  render: function render() {\n    this.collection.each(this.addOne, this);\n    return this;\n  },\n  addOne: function addOne(task) {\n    var task_view = new AppUser.Views.User({\n      model: task\n    });\n    this.$el.append(task_view.render().el);\n  },\n  draw: function draw() {\n    $('#userDiv').append(this.el);\n  }\n});\n/*\n** VIEW of user creation form\n*/\n\nAppUser.Views.AddUser = Backbone.View.extend({\n  template: '<div class=\"class row\" style=\"margin-left: 20px\">' + '<div class=\"col-3\">' + '<form class=\"row\">' + '<label for=\"userFromIntra\" class=\"visually-hidden\">Email</label>' + '<input placeholder=\"Intra login\" type=\"text\" class=\"form-control col\" id=\"userFromIntra\" value=\"\">' + '</form>' + '<form class=\"row\">' + '<label for=\"userFromNick\" class=\"visually-hidden\">Email</label>' + '<input placeholder=\"Nickname\" type=\"text\" class=\"form-control col\" id=\"userFromNick\" value=\"\">' + '</form>' + '<form class=\"row\">' + '<label for=\"inputPassword2\" class=\"visually-hidden\">Email</label>' + '<input placeholder=\"Guild\" type=\"text\" class=\"form-control col\" id=\"userFromGuild\" value=\"\">' + '</form>' + '<form class=\"row\">' + '<input type=\"submit\" class=\"btn btn-outline-dark mb-3 col\" value=\"create\">' + '</form>' + '</div>' + '</div>',\n  initialize: function initialize() {\n    this.$el.html(this.template);\n  },\n  draw: function draw() {\n    $('#userForm').html(this.el);\n  },\n  events: {\n    'submit': 'submit'\n  },\n  submit: function submit(e) {\n    var _this = this;\n\n    e.preventDefault();\n    this.getUserId().then(function (resp) {\n      resp.json().then(function (id) {\n        _this.createUser(id + 1, e);\n      });\n    });\n  },\n  getUserId: function () {\n    var _getUserId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", fetch('http://localhost:3000/get_user_id'));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getUserId() {\n      return _getUserId.apply(this, arguments);\n    }\n\n    return getUserId;\n  }(),\n  createUser: function createUser(newUserId, e) {\n    var _this2 = this;\n\n    var user = {\n      user_id: newUserId,\n      intra: $(e.currentTarget).find('input[id=userFromIntra]').val(),\n      nick: $(e.currentTarget).find('input[id=userFromNick]').val(),\n      is_online: true,\n      guild_id: 1,\n      guild_join_time: Date(),\n      wins: 0,\n      loses: 0,\n      score: 0\n    };\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(function (res) {\n      return res.ok ? res.json() : Promise.reject(res);\n    }).then(function (user) {\n      new_user = new AppUser.Models.User(user);\n\n      _this2.collection.add(new_user);\n    })[\"catch\"](function () {\n      alert('Error! Unable to create user!');\n    });\n  }\n});\n/*\n** VIEW of a whole users page\n*/\n\nAppUser.Views.UserPage = Backbone.View.extend({\n  initialize: function initialize() {\n    var coll = new AppUser.Collections.User();\n    var usersView = new AppUser.Views.Users({\n      collection: coll\n    });\n    usersView.draw();\n    var usersForm = new AppUser.Views.AddUser({\n      collection: coll\n    });\n    usersForm.draw();\n  }\n});","map":{"version":3,"sources":["/pingpong/app/javascript/user.js"],"names":["window","AppUser","Models","Views","Collections","Router","User","Backbone","Model","extend","initialize","curr_user","user_id","intra","nick","guild_id","guild_join_time","Collection","model","url","fetch","View","tagName","template","_","$","html","on","remove","render","$el","append","events","delete_user","destroy","Users","collection","addOne","each","task","task_view","el","draw","AddUser","submit","e","preventDefault","getUserId","then","resp","json","id","createUser","newUserId","user","currentTarget","find","val","is_online","Date","wins","loses","score","method","headers","body","JSON","stringify","res","ok","Promise","reject","new_user","add","alert","UserPage","coll","usersView","usersForm"],"mappings":";;;;;;AAAAA,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,MAAM,EAAE,EADQ;AAEhBC,EAAAA,KAAK,EAAE,EAFS;AAGhBC,EAAAA,WAAW,EAAE,EAHG;AAIhBC,EAAAA,MAAM,EAAE;AAJQ,CAAjB;AAQA;AACA;AACA;;AACAJ,OAAO,CAACC,MAAR,CAAeI,IAAf,GAAsBC,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;AAC3CC,EAAAA,UAAU,EAAE,oBAAUC,SAAV,EAAqB;AAChC,SAAKC,OAAL,GAAeD,SAAS,CAACC,OAAzB;AACA,SAAKC,KAAL,GAAaF,SAAS,CAACE,KAAvB;AACA,SAAKC,IAAL,GAAYH,SAAS,CAACG,IAAtB;AACA,SAAKC,QAAL,GAAgBJ,SAAS,CAACI,QAA1B;AACA,SAAKC,eAAL,GAAuBL,SAAS,CAACK,eAAjC;AACA;AAP0C,CAAtB,CAAtB;AAUA;AACA;AACA;AACA;;AACAf,OAAO,CAACG,WAAR,CAAoBE,IAApB,GAA2BC,QAAQ,CAACU,UAAT,CAAoBR,MAApB,CAA2B;AACrDS,EAAAA,KAAK,EAAEjB,OAAO,CAACC,MAAR,CAAeI,IAD+B;AAErDa,EAAAA,GAAG,EAAE,6BAFgD;AAGrDT,EAAAA,UAAU,EAAE,sBAAY;AACvB,SAAKU,KAAL;AACA;AALoD,CAA3B,CAA3B;AAQA;AACA;AACA;;AACAnB,OAAO,CAACE,KAAR,CAAcG,IAAd,GAAqBC,QAAQ,CAACc,IAAT,CAAcZ,MAAd,CAAqB;AACzCa,EAAAA,OAAO,EAAE,IADgC;AAEzCC,EAAAA,QAAQ,EAAEC,CAAC,CAACD,QAAF,CAAWE,CAAC,CAAC,eAAD,CAAD,CAAmBC,IAAnB,EAAX,CAF+B;AAGzChB,EAAAA,UAAU,EAAE,sBAAY;AACvB,SAAKQ,KAAL,CAAWS,EAAX,CAAc,SAAd,EAAyB,KAAKC,MAA9B,EAAsC,IAAtC;AACA,GALwC;AAMzCC,EAAAA,MAAM,EAAE,kBAAY;AACnB,QAAIN,QAAQ,GAAG,KAAKA,QAAL,CAAc,KAAKL,KAAnB,CAAf;AACA,SAAKY,GAAL,CAASC,MAAT,CAAgBR,QAAhB;AACA,WAAO,IAAP;AACA,GAVwC;AAWzCS,EAAAA,MAAM,EAAE;AACP,0BAAsB;AADf,GAXiC;AAczCJ,EAAAA,MAAM,EAAE,kBAAY;AACnB,SAAKE,GAAL,CAASF,MAAT;AACA,GAhBwC;AAiBzCK,EAAAA,WAAW,EAAE,uBAAY;AACxB,SAAKf,KAAL,CAAWgB,OAAX;AACA;AAnBwC,CAArB,CAArB;AAsBA;AACA;AACA;;AACAjC,OAAO,CAACE,KAAR,CAAcgC,KAAd,GAAsB5B,QAAQ,CAACc,IAAT,CAAcZ,MAAd,CAAqB;AAC1Ca,EAAAA,OAAO,EAAE,IADiC;AAE1CZ,EAAAA,UAAU,EAAE,sBAAY;AACvB,SAAK0B,UAAL,CAAgBT,EAAhB,CAAmB,KAAnB,EAA0B,KAAKU,MAA/B,EAAuC,IAAvC;AACA,SAAKR,MAAL;AACA,GALyC;AAM1CA,EAAAA,MAAM,EAAE,kBAAY;AACnB,SAAKO,UAAL,CAAgBE,IAAhB,CAAqB,KAAKD,MAA1B,EAAkC,IAAlC;AACA,WAAO,IAAP;AACA,GATyC;AAU1CA,EAAAA,MAAM,EAAE,gBAAUE,IAAV,EAAgB;AACvB,QAAIC,SAAS,GAAG,IAAIvC,OAAO,CAACE,KAAR,CAAcG,IAAlB,CAAuB;AAAEY,MAAAA,KAAK,EAAEqB;AAAT,KAAvB,CAAhB;AACA,SAAKT,GAAL,CAASC,MAAT,CAAgBS,SAAS,CAACX,MAAV,GAAmBY,EAAnC;AACA,GAbyC;AAc1CC,EAAAA,IAAI,EAAE,gBAAY;AACjBjB,IAAAA,CAAC,CAAC,UAAD,CAAD,CAAcM,MAAd,CAAqB,KAAKU,EAA1B;AACA;AAhByC,CAArB,CAAtB;AAmBA;AACA;AACA;;AACAxC,OAAO,CAACE,KAAR,CAAcwC,OAAd,GAAwBpC,QAAQ,CAACc,IAAT,CAAcZ,MAAd,CAAqB;AAC5Cc,EAAAA,QAAQ,EAAE,sDACN,qBADM,GAEL,oBAFK,GAGJ,kEAHI,GAIJ,oGAJI,GAKL,SALK,GAML,oBANK,GAOJ,iEAPI,GAQJ,gGARI,GASL,SATK,GAUL,oBAVK,GAWJ,mEAXI,GAYJ,8FAZI,GAaL,SAbK,GAcL,oBAdK,GAeJ,4EAfI,GAgBL,SAhBK,GAiBN,QAjBM,GAkBP,QAnByC;AAoB5Cb,EAAAA,UAAU,EAAE,sBAAY;AACvB,SAAKoB,GAAL,CAASJ,IAAT,CAAc,KAAKH,QAAnB;AACA,GAtB2C;AAuB5CmB,EAAAA,IAAI,EAAE,gBAAY;AACjBjB,IAAAA,CAAC,CAAC,WAAD,CAAD,CAAeC,IAAf,CAAoB,KAAKe,EAAzB;AACA,GAzB2C;AA0B5CT,EAAAA,MAAM,EAAE;AACP,cAAU;AADH,GA1BoC;AA6B5CY,EAAAA,MAAM,EAAE,gBAAUC,CAAV,EAAa;AAAA;;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKC,SAAL,GAAiBC,IAAjB,CAAsB,UAAAC,IAAI,EAAI;AAC7BA,MAAAA,IAAI,CAACC,IAAL,GAAYF,IAAZ,CAAiB,UAAAG,EAAE,EAAI;AACtB,QAAA,KAAI,CAACC,UAAL,CAAgBD,EAAE,GAAG,CAArB,EAAwBN,CAAxB;AACA,OAFD;AAGA,KAJD;AAKA,GApC2C;AAqC5CE,EAAAA,SAAS;AAAA,8EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CACH3B,KAAK,CAAC,mCAAD,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArCmC;AAwC5CgC,EAAAA,UAAU,EAAE,oBAAUC,SAAV,EAAqBR,CAArB,EAAwB;AAAA;;AACnC,QAAIS,IAAI,GAAG;AACV1C,MAAAA,OAAO,EAAEyC,SADC;AAEVxC,MAAAA,KAAK,EAAGY,CAAC,CAACoB,CAAC,CAACU,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,yBAAxB,EAAmDC,GAAnD,EAFE;AAGV3C,MAAAA,IAAI,EAAEW,CAAC,CAACoB,CAAC,CAACU,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,wBAAxB,EAAkDC,GAAlD,EAHI;AAIVC,MAAAA,SAAS,EAAE,IAJD;AAKV3C,MAAAA,QAAQ,EAAE,CALA;AAMVC,MAAAA,eAAe,EAAE2C,IAAI,EANX;AAOVC,MAAAA,IAAI,EAAE,CAPI;AAQVC,MAAAA,KAAK,EAAE,CARG;AASVC,MAAAA,KAAK,EAAE;AATG,KAAX;AAWA1C,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACpC2C,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACR,kBAAU,kBADF;AAER,wBAAgB;AAFR,OAF2B;AAMpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAN8B,KAAhC,CAAL,CAQCN,IARD,CAQM,UAAAoB,GAAG;AAAA,aAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAAClB,IAAJ,EAAT,GAAsBoB,OAAO,CAACC,MAAR,CAAeH,GAAf,CAA1B;AAAA,KART,EASCpB,IATD,CASM,UAAAM,IAAI,EAAI;AACbkB,MAAAA,QAAQ,GAAG,IAAIvE,OAAO,CAACC,MAAR,CAAeI,IAAnB,CAAwBgD,IAAxB,CAAX;;AACA,MAAA,MAAI,CAAClB,UAAL,CAAgBqC,GAAhB,CAAoBD,QAApB;AACA,KAZD,WAaO,YAAM;AACZE,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACA,KAfD;AAgBA;AApE2C,CAArB,CAAxB;AAwEA;AACA;AACA;;AACAzE,OAAO,CAACE,KAAR,CAAcwE,QAAd,GAAyBpE,QAAQ,CAACc,IAAT,CAAcZ,MAAd,CAAqB;AAC7CC,EAAAA,UAAU,EAAE,sBAAY;AACvB,QAAIkE,IAAI,GAAG,IAAI3E,OAAO,CAACG,WAAR,CAAoBE,IAAxB,EAAX;AACA,QAAIuE,SAAS,GAAG,IAAI5E,OAAO,CAACE,KAAR,CAAcgC,KAAlB,CAAwB;AAAEC,MAAAA,UAAU,EAAEwC;AAAd,KAAxB,CAAhB;AACAC,IAAAA,SAAS,CAACnC,IAAV;AACA,QAAIoC,SAAS,GAAG,IAAI7E,OAAO,CAACE,KAAR,CAAcwC,OAAlB,CAA0B;AAAEP,MAAAA,UAAU,EAAEwC;AAAd,KAA1B,CAAhB;AACAE,IAAAA,SAAS,CAACpC,IAAV;AACA;AAP4C,CAArB,CAAzB","sourcesContent":["window.AppUser = {\n\tModels: {},\n\tViews: {},\n\tCollections: {},\n\tRouter: {}\n}\n\n\n/*\n** MODEL of a user from DB\n*/\nAppUser.Models.User = Backbone.Model.extend({\n\tinitialize: function (curr_user) {\n\t\tthis.user_id = curr_user.user_id;\n\t\tthis.intra = curr_user.intra;\n\t\tthis.nick = curr_user.nick;\n\t\tthis.guild_id = curr_user.guild_id;\n\t\tthis.guild_join_time = curr_user.guild_join_time;\n\t},\n});\n\n/*\n** COLLECTION of users (of models)\n** collection automaticly fills with the DB users (by fetch request)\n*/\nAppUser.Collections.User = Backbone.Collection.extend({\n\tmodel: AppUser.Models.User,\n\turl: 'http://localhost:3000/users',\n\tinitialize: function () {\n\t\tthis.fetch();\n\t}\n});\n\n/*\n** VIEW of a user (view of a single user (string with buttons))\n*/\nAppUser.Views.User = Backbone.View.extend({\n\ttagName: 'li',\n\ttemplate: _.template($(\"#UserTemplate\").html()),\n\tinitialize: function () {\n\t\tthis.model.on('destroy', this.remove, this);\n\t},\n\trender: function () {\n\t\tvar template = this.template(this.model);\n\t\tthis.$el.append(template);\n\t\treturn this;\n\t},\n\tevents: {\n\t\t'click #delete_user': 'delete_user'\n\t},\n\tremove: function () {\n\t\tthis.$el.remove();\n\t},\n\tdelete_user: function () {\n\t\tthis.model.destroy();\n\t}\n});\n\n/*\n** VIEW of a list of users\n*/\nAppUser.Views.Users = Backbone.View.extend({\n\ttagName: 'ul',\n\tinitialize: function () {\n\t\tthis.collection.on('add', this.addOne, this);\n\t\tthis.render();\n\t},\n\trender: function () {\n\t\tthis.collection.each(this.addOne, this);\n\t\treturn this;\n\t},\n\taddOne: function (task) {\n\t\tvar task_view = new AppUser.Views.User({ model: task });\n\t\tthis.$el.append(task_view.render().el);\n\t},\n\tdraw: function () {\n\t\t$('#userDiv').append(this.el);\n\t}\n});\n\n/*\n** VIEW of user creation form\n*/\nAppUser.Views.AddUser = Backbone.View.extend({\n\ttemplate:\t'<div class=\"class row\" style=\"margin-left: 20px\">' +\n\t\t\t\t\t'<div class=\"col-3\">' +\n\t\t\t\t\t\t'<form class=\"row\">' +\n\t\t\t\t\t\t\t'<label for=\"userFromIntra\" class=\"visually-hidden\">Email</label>' +\n\t\t\t\t\t\t\t'<input placeholder=\"Intra login\" type=\"text\" class=\"form-control col\" id=\"userFromIntra\" value=\"\">' +\n\t\t\t\t\t\t'</form>' +\n\t\t\t\t\t\t'<form class=\"row\">' +\n\t\t\t\t\t\t\t'<label for=\"userFromNick\" class=\"visually-hidden\">Email</label>' +\n\t\t\t\t\t\t\t'<input placeholder=\"Nickname\" type=\"text\" class=\"form-control col\" id=\"userFromNick\" value=\"\">' +\n\t\t\t\t\t\t'</form>' +\n\t\t\t\t\t\t'<form class=\"row\">' +\n\t\t\t\t\t\t\t'<label for=\"inputPassword2\" class=\"visually-hidden\">Email</label>' +\n\t\t\t\t\t\t\t'<input placeholder=\"Guild\" type=\"text\" class=\"form-control col\" id=\"userFromGuild\" value=\"\">' +\n\t\t\t\t\t\t'</form>' +\n\t\t\t\t\t\t'<form class=\"row\">' +\n\t\t\t\t\t\t\t'<input type=\"submit\" class=\"btn btn-outline-dark mb-3 col\" value=\"create\">' +\n\t\t\t\t\t\t'</form>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>',\n\tinitialize: function () {\n\t\tthis.$el.html(this.template);\n\t},\n\tdraw: function () {\n\t\t$('#userForm').html(this.el);\n\t},\n\tevents: {\n\t\t'submit': 'submit'\n\t},\n\tsubmit: function (e) {\n\t\te.preventDefault();\n\t\tthis.getUserId().then(resp => {\n\t\t\tresp.json().then(id => {\n\t\t\t\tthis.createUser(id + 1, e);\n\t\t\t})\n\t\t})\n\t},\n\tgetUserId: async () => {\n\t\treturn fetch('http://localhost:3000/get_user_id')\n\t},\n\tcreateUser: function (newUserId, e) {\n\t\tlet user = {\n\t\t\tuser_id: newUserId,\n\t\t\tintra:  $(e.currentTarget).find('input[id=userFromIntra]').val(),\n\t\t\tnick: $(e.currentTarget).find('input[id=userFromNick]').val(),\n\t\t\tis_online: true,\n\t\t\tguild_id: 1,\n\t\t\tguild_join_time: Date(),\n\t\t\twins: 0,\n\t\t\tloses: 0,\n\t\t\tscore: 0\n\t\t}\n\t\tfetch(\"http://localhost:3000/users\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(user)\n\t\t})\n\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t.then(user => {\n\t\t\tnew_user = new AppUser.Models.User(user);\n\t\t\tthis.collection.add(new_user);\n\t\t})\n\t\t.catch(() => {\n\t\t\talert('Error! Unable to create user!')\n\t\t})\n\t}\n});\n\n\n/*\n** VIEW of a whole users page\n*/\nAppUser.Views.UserPage = Backbone.View.extend({\n\tinitialize: function () {\n\t\tvar coll = new AppUser.Collections.User();\n\t\tvar usersView = new AppUser.Views.Users({ collection: coll });\n\t\tusersView.draw();\n\t\tvar usersForm = new AppUser.Views.AddUser({ collection: coll });\n\t\tusersForm.draw();\n\t}\n})\n"]},"metadata":{},"sourceType":"module"}