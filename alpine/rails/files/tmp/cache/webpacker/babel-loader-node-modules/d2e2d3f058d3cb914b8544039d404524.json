{"ast":null,"code":"$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  };\n  App.Models.Guild = Backbone.Model.extend({\n    urlRoot: 'http://localhost:3000/guilds',\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: 'http://localhost:3000/guilds',\n    initialize: function initialize() {\n      this.fetch();\n    }\n  });\n  App.Views.GuildUsers = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.user_id = data.user_id;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildList').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      var guildView = new App.Views.GuildList({\n        model: guild\n      });\n      this.$el.append(guildView.render().el);\n    }\n  });\n  App.Views.GuildUser = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildListTemplate\").html()),\n    initialize: function initialize() {\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {// 'click #GuildNameList' : 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    }\n  });\n  App.Views.GuildList = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildListTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #GuildNameList': 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    showCard: function showCard() {\n      new App.Views.GuildCard({\n        model: this.model,\n        user_id: this.user_id\n      });\n    }\n  });\n  App.Views.GuildCard = Backbone.View.extend({\n    templateCard: _.template($(\"#GuildCardTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.user_id = data.user_id;\n      this.model.on('destroy', this.remove, this);\n      this.render();\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    render: function render() {\n      var _this = this;\n\n      var promise = fetch(\"http://localhost:3000/get_owner_nickname\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (owner) {\n        return _this.renderCard(owner);\n      }, this));\n      return this;\n    },\n    renderCard: function renderCard(owner) {\n      this.model.owner_nickname = owner.nickname;\n      var template = this.templateCard(this.model);\n      this.$el.html(template);\n      $('#GuildCard').html(this.el);\n      this.renderButtons();\n    },\n    renderButtons: function renderButtons() {\n      new App.Views.GuildCardBtn({\n        model: this.model\n      });\n    }\n  });\n  App.Views.GuildCardBtn = Backbone.View.extend({\n    templateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n    templateJoinBtn: _.template($(\"#GuildJoinBtnTemplate\").html()),\n    templateLeaveBtn: _.template($(\"#GuildLeaveBtnTemplate\").html()),\n    initialize: function initialize() {\n      this.render();\n      console.log('here' + curr_user.guild_id);\n    },\n    render: function render() {\n      if (curr_user.id == this.model.owner_id) {\n        this.$el.html(this.templateDeleteBtn);\n        this.$el.append(this.templateLeaveBtn);\n      } else if (curr_user.guild_id == 0) this.$el.html(this.templateJoinBtn);else if (curr_user.guild_id == this.model.id) this.$el.html(this.templateLeaveBtn);else this.$el.html(\"\");\n\n      $('#GuildCardBtn').html(this.el);\n    },\n    events: {\n      'click #DelGuildBtn': 'deleteGuild',\n      'click #JoinGuildBtn': 'joinGuild',\n      'click #LeaveGuildBtn': 'leaveGuild'\n    },\n    deleteGuild: function deleteGuild() {\n      alert(\"DELETE\");\n      var promise = this.model.destroy([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function () {\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n      }, this));\n      curr_user.guild_id = 0;\n    },\n    joinGuild: function joinGuild() {\n      var _this2 = this;\n\n      var promise = fetch(\"http://localhost:3000/guilds/join\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function () {\n        alert('You joined guild ' + _this2.model.name + '!');\n        curr_user.guild_id = _this2.model.id;\n\n        _this2.render();\n\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n      }, this));\n      return this;\n    },\n    leaveGuild: function leaveGuild() {\n      var _this3 = this;\n\n      var promise = fetch(\"http://localhost:3000/guilds/exit\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (response) {\n        alert('You left guild ' + _this3.model.name + '!');\n        curr_user.guild_id = 0;\n        if (response == 0) _this3.model.destroy();\n\n        _this3.render();\n\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n      }, this));\n      return this;\n    }\n  });\n  App.Views.Guilds = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.user_id = data.user_id;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildList').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      var guildView = new App.Views.GuildList({\n        model: guild,\n        user_id: this.user_id\n      });\n      this.$el.append(guildView.render().el);\n    }\n  });\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      this.$el.html(this.template);\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n      };\n      new_guild = new App.Models.Guild(guild);\n      var promise = new_guild.save([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        alert('success');\n        this.collection.fetch();\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n        $('#GuildCard').html(\"\");\n        $('#GuildContent').html(\"\");\n        curr_user.guild_id = new_guild.id;\n      }, this));\n      $.when(promise).fail(function (resp) {\n        alert(resp.responseText);\n      });\n    }\n  });\n  fetch(\"http://localhost:3000/get_curr_user\").then(function (res) {\n    return res.ok ? res.json() : Promise.reject(res);\n  }).then(function (curr_user) {\n    window.curr_user = curr_user;\n    col = new App.Collections.Guild();\n    form = new App.Views.NewGuild({\n      collection: col\n    });\n    form.render();\n    guilds_view = new App.Views.Guilds({\n      collection: col,\n      user_id: curr_user.id\n    });\n  });\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["$","window","App","Models","Views","Collections","Router","Guild","Backbone","Model","extend","urlRoot","initialize","curr_guild","id","name","anagram","score","owner_id","created_at","updated_at","Collection","model","url","fetch","GuildUsers","View","className","data","collection","user_id","on","addOne","render","each","append","el","guild","guildView","GuildList","$el","GuildUser","tagName","templateList","_","template","html","remove","events","attr","showCard","GuildCard","templateCard","promise","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","bind","owner","renderCard","owner_nickname","nickname","renderButtons","GuildCardBtn","templateDeleteBtn","templateJoinBtn","templateLeaveBtn","console","log","curr_user","guild_id","deleteGuild","alert","destroy","dataType","when","done","css","joinGuild","leaveGuild","response","Guilds","NewGuild","submit","e","preventDefault","currentTarget","find","val","new_guild","save","fail","resp","responseText","col","form","guilds_view"],"mappings":"AAAAA,CAAC,CAAC,YAAY;AACbC,EAAAA,MAAM,CAACC,GAAP,GAAa;AACZC,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,KAAK,EAAE,EAFK;AAGZC,IAAAA,WAAW,EAAE,EAHD;AAIZC,IAAAA,MAAM,EAAE;AAJI,GAAb;AAOAJ,EAAAA,GAAG,CAACC,MAAJ,CAAWI,KAAX,GAAmBC,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;AACxCC,IAAAA,OAAO,EAAE,8BAD+B;AAExCC,IAAAA,UAAU,EAAE,oBAAUC,UAAV,EAAsB;AACjC,WAAKC,EAAL,GAAUD,UAAU,CAACC,EAArB;AACA,WAAKC,IAAL,GAAYF,UAAU,CAACE,IAAvB;AACA,WAAKC,OAAL,GAAeH,UAAU,CAACG,OAA1B;AACA,WAAKC,KAAL,GAAaJ,UAAU,CAACI,KAAxB;AACA,WAAKC,QAAL,GAAgBL,UAAU,CAACK,QAA3B;AACA,WAAKC,UAAL,GAAkBN,UAAU,CAACM,UAA7B;AACA,WAAKC,UAAL,GAAkBP,UAAU,CAACO,UAA7B;AACA;AAVuC,GAAtB,CAAnB;AAcAlB,EAAAA,GAAG,CAACG,WAAJ,CAAgBE,KAAhB,GAAwBC,QAAQ,CAACa,UAAT,CAAoBX,MAApB,CAA2B;AAClDY,IAAAA,KAAK,EAAEpB,GAAG,CAACC,MAAJ,CAAWI,KADgC;AAElDgB,IAAAA,GAAG,EAAE,8BAF6C;AAGlDX,IAAAA,UAAU,EAAE,sBAAY;AACvB,WAAKY,KAAL;AACA;AALiD,GAA3B,CAAxB;AAQAtB,EAAAA,GAAG,CAACE,KAAJ,CAAUqB,UAAV,GAAuBjB,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AAC3CiB,IAAAA,SAAS,EAAE,YADgC;AAE3Cf,IAAAA,UAAU,EAAE,oBAAUgB,IAAV,EAAgB;AAC3B,WAAKC,UAAL,GAAkBD,IAAI,CAACC,UAAvB;AACA,WAAKC,OAAL,GAAeF,IAAI,CAACE,OAApB;AAEA,WAAKD,UAAL,CAAgBE,EAAhB,CAAmB,KAAnB,EAA0B,KAAKC,MAA/B,EAAuC,IAAvC;AACA,WAAKH,UAAL,CAAgBE,EAAhB,CAAmB,QAAnB,EAA6B,KAAKC,MAAlC,EAA0C,IAA1C;AACA,WAAKC,MAAL;AACA,KAT0C;AAU3CA,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKJ,UAAL,CAAgBK,IAAhB,CAAqB,KAAKF,MAA1B,EAAkC,IAAlC;AACAhC,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBmC,MAAhB,CAAuB,KAAKC,EAA5B;AACA,aAAO,IAAP;AACA,KAd0C;AAe3CJ,IAAAA,MAAM,EAAE,gBAAUK,KAAV,EAAiB;AACxB,UAAIC,SAAS,GAAG,IAAIpC,GAAG,CAACE,KAAJ,CAAUmC,SAAd,CAAwB;AAAEjB,QAAAA,KAAK,EAAEe;AAAT,OAAxB,CAAhB;AACA,WAAKG,GAAL,CAASL,MAAT,CAAgBG,SAAS,CAACL,MAAV,GAAmBG,EAAnC;AACA;AAlB0C,GAArB,CAAvB;AAqBAlC,EAAAA,GAAG,CAACE,KAAJ,CAAUqC,SAAV,GAAsBjC,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AAC1CgC,IAAAA,OAAO,EAAE,GADiC;AAE1Cf,IAAAA,SAAS,EAAE,wCAF+B;AAG1CgB,IAAAA,YAAY,EAAEC,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,oBAAD,CAAD,CAAwB8C,IAAxB,EAAX,CAH4B;AAK1ClC,IAAAA,UAAU,EAAE,sBAAY;AACvB,WAAKU,KAAL,CAAWS,EAAX,CAAc,SAAd,EAAyB,KAAKgB,MAA9B,EAAsC,IAAtC;AACA,KAPyC;AAQ1CC,IAAAA,MAAM,EAAE,CACP;AADO,KARkC;AAW1Cf,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKO,GAAL,CAASS,IAAT,CAAc;AAAC,0BAAkB;AAAnB,OAAd;AACA,UAAIJ,QAAQ,GAAG,KAAKF,YAAL,CAAkB,KAAKrB,KAAvB,CAAf;AACA,WAAKkB,GAAL,CAASL,MAAT,CAAgBU,QAAhB;AACA,aAAO,IAAP;AACA,KAhByC;AAiB1CE,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKP,GAAL,CAASO,MAAT;AACA;AAnByC,GAArB,CAAtB;AAsBA7C,EAAAA,GAAG,CAACE,KAAJ,CAAUmC,SAAV,GAAsB/B,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AAC1CgC,IAAAA,OAAO,EAAE,GADiC;AAE1Cf,IAAAA,SAAS,EAAE,wCAF+B;AAG1CgB,IAAAA,YAAY,EAAEC,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,oBAAD,CAAD,CAAwB8C,IAAxB,EAAX,CAH4B;AAK1ClC,IAAAA,UAAU,EAAE,oBAAUgB,IAAV,EAAgB;AAC3B,WAAKN,KAAL,GAAaM,IAAI,CAACN,KAAlB;AACA,WAAKQ,OAAL,GAAeF,IAAI,CAACE,OAApB;AAEA,WAAKR,KAAL,CAAWS,EAAX,CAAc,SAAd,EAAyB,KAAKgB,MAA9B,EAAsC,IAAtC;AACA,KAVyC;AAW1CC,IAAAA,MAAM,EAAE;AACP,8BAAyB;AADlB,KAXkC;AAc1Cf,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKO,GAAL,CAASS,IAAT,CAAc;AAAC,0BAAkB;AAAnB,OAAd;AACA,UAAIJ,QAAQ,GAAG,KAAKF,YAAL,CAAkB,KAAKrB,KAAvB,CAAf;AACA,WAAKkB,GAAL,CAASL,MAAT,CAAgBU,QAAhB;AACA,aAAO,IAAP;AACA,KAnByC;AAoB1CE,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKP,GAAL,CAASO,MAAT;AACA,KAtByC;AAuB1CG,IAAAA,QAAQ,EAAE,oBAAY;AACrB,UAAIhD,GAAG,CAACE,KAAJ,CAAU+C,SAAd,CAAwB;AAAE7B,QAAAA,KAAK,EAAE,KAAKA,KAAd;AAAqBQ,QAAAA,OAAO,EAAE,KAAKA;AAAnC,OAAxB;AACA;AAzByC,GAArB,CAAtB;AA4BA5B,EAAAA,GAAG,CAACE,KAAJ,CAAU+C,SAAV,GAAsB3C,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AAC1C0C,IAAAA,YAAY,EAAER,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,oBAAD,CAAD,CAAwB8C,IAAxB,EAAX,CAD4B;AAG1ClC,IAAAA,UAAU,EAAE,oBAAUgB,IAAV,EAAgB;AAC3B,WAAKN,KAAL,GAAcM,IAAI,CAACN,KAAnB;AACA,WAAKQ,OAAL,GAAeF,IAAI,CAACE,OAApB;AAEA,WAAKR,KAAL,CAAWS,EAAX,CAAc,SAAd,EAAyB,KAAKgB,MAA9B,EAAsC,IAAtC;AAEA,WAAKd,MAAL;AACA,KAVyC;AAW1Cc,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKP,GAAL,CAASO,MAAT;AACA,KAbyC;AAc1Cd,IAAAA,MAAM,EAAE,kBAAY;AAAA;;AACnB,UAAIoB,OAAO,GAAG7B,KAAK,CAAC,0CAAD,EAA6C;AAC/D8B,QAAAA,MAAM,EAAE,MADuD;AAE/DC,QAAAA,OAAO,EAAE;AACR,oBAAU,kBADF;AAER,0BAAgB;AAFR,SAFsD;AAM/DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKpC,KAApB;AANyD,OAA7C,CAAL,CAQbqC,IARa,CAQR,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAA1B;AAAA,OARK,EASbD,IATa,CASRf,CAAC,CAACqB,IAAF,CAAO,UAAAC,KAAK;AAAA,eAAI,KAAI,CAACC,UAAL,CAAgBD,KAAhB,CAAJ;AAAA,OAAZ,EAAwC,IAAxC,CATQ,CAAd;AAUA,aAAO,IAAP;AACA,KA1ByC;AA2B1CC,IAAAA,UAAU,EAAE,oBAAUD,KAAV,EAAiB;AAC5B,WAAK5C,KAAL,CAAW8C,cAAX,GAA4BF,KAAK,CAACG,QAAlC;AACA,UAAIxB,QAAQ,GAAG,KAAKO,YAAL,CAAkB,KAAK9B,KAAvB,CAAf;AACA,WAAKkB,GAAL,CAASM,IAAT,CAAcD,QAAd;AACA7C,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgB8C,IAAhB,CAAqB,KAAKV,EAA1B;AACA,WAAKkC,aAAL;AACA,KAjCyC;AAkC1CA,IAAAA,aAAa,EAAE,yBAAY;AAC1B,UAAIpE,GAAG,CAACE,KAAJ,CAAUmE,YAAd,CAA2B;AAAEjD,QAAAA,KAAK,EAAE,KAAKA;AAAd,OAA3B;AACA;AApCyC,GAArB,CAAtB;AAuCApB,EAAAA,GAAG,CAACE,KAAJ,CAAUmE,YAAV,GAAyB/D,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AAC7C8D,IAAAA,iBAAiB,EAAE5B,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,sBAAD,CAAD,CAA0B8C,IAA1B,EAAX,CAD0B;AAE7C2B,IAAAA,eAAe,EAAI7B,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,uBAAD,CAAD,CAA2B8C,IAA3B,EAAX,CAF0B;AAG7C4B,IAAAA,gBAAgB,EAAG9B,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,wBAAD,CAAD,CAA4B8C,IAA5B,EAAX,CAH0B;AAI7ClC,IAAAA,UAAU,EAAE,sBAAY;AACvB,WAAKqB,MAAL;AACA0C,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASC,SAAS,CAACC,QAA/B;AACA,KAP4C;AAQ7C7C,IAAAA,MAAM,EAAE,kBAAY;AACnB,UAAI4C,SAAS,CAAC/D,EAAV,IAAgB,KAAKQ,KAAL,CAAWJ,QAA/B,EAAyC;AACxC,aAAKsB,GAAL,CAASM,IAAT,CAAc,KAAK0B,iBAAnB;AACA,aAAKhC,GAAL,CAASL,MAAT,CAAgB,KAAKuC,gBAArB;AACA,OAHD,MAIK,IAAIG,SAAS,CAACC,QAAV,IAAsB,CAA1B,EACJ,KAAKtC,GAAL,CAASM,IAAT,CAAc,KAAK2B,eAAnB,EADI,KAEA,IAAII,SAAS,CAACC,QAAV,IAAsB,KAAKxD,KAAL,CAAWR,EAArC,EACJ,KAAK0B,GAAL,CAASM,IAAT,CAAc,KAAK4B,gBAAnB,EADI,KAGJ,KAAKlC,GAAL,CAASM,IAAT,CAAc,EAAd;;AACD9C,MAAAA,CAAC,CAAC,eAAD,CAAD,CAAmB8C,IAAnB,CAAwB,KAAKV,EAA7B;AACA,KApB4C;AAqB7CY,IAAAA,MAAM,EAAE;AACP,4BAAuB,aADhB;AAEP,6BAAuB,WAFhB;AAGP,8BAAwB;AAHjB,KArBqC;AA0B7C+B,IAAAA,WAAW,EAAE,uBAAY;AACxBC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACA,UAAI3B,OAAO,GAAG,KAAK/B,KAAL,CAAW2D,OAAX,CAAmB,EAAnB,EAAuB;AACpCC,QAAAA,QAAQ,EAAE;AAD0B,OAAvB,CAAd;AAGAlF,MAAAA,CAAC,CAACmF,IAAF,CAAO9B,OAAP,EAAgB+B,IAAhB,CACCxC,CAAC,CAACqB,IAAF,CAAO,YAAY;AAClBjE,QAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBqF,GAAhB,CAAoB;AAAE,qBAAW;AAAb,SAApB;AACA,OAFD,EAEG,IAFH,CADD;AAKAR,MAAAA,SAAS,CAACC,QAAV,GAAqB,CAArB;AACA,KArC4C;AAsC7CQ,IAAAA,SAAS,EAAE,qBAAY;AAAA;;AACtB,UAAIjC,OAAO,GAAG7B,KAAK,CAAC,mCAAD,EAAsC;AACxD8B,QAAAA,MAAM,EAAE,MADgD;AAExDC,QAAAA,OAAO,EAAE;AACR,oBAAU,kBADF;AAER,0BAAgB;AAFR,SAF+C;AAMxDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKpC,KAApB;AANkD,OAAtC,CAAL,CAQbqC,IARa,CAQR,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAA1B;AAAA,OARK,EASbD,IATa,CASRf,CAAC,CAACqB,IAAF,CAAO,YAAM;AAClBe,QAAAA,KAAK,CAAC,sBAAsB,MAAI,CAAC1D,KAAL,CAAWP,IAAjC,GAAwC,GAAzC,CAAL;AACA8D,QAAAA,SAAS,CAACC,QAAV,GAAqB,MAAI,CAACxD,KAAL,CAAWR,EAAhC;;AACA,QAAA,MAAI,CAACmB,MAAL;;AACAjC,QAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBqF,GAAhB,CAAoB;AAAE,qBAAW;AAAb,SAApB;AACA,OALK,EAKH,IALG,CATQ,CAAd;AAeA,aAAO,IAAP;AACA,KAvD4C;AAwD7CE,IAAAA,UAAU,EAAE,sBAAY;AAAA;;AACvB,UAAIlC,OAAO,GAAG7B,KAAK,CAAC,mCAAD,EAAsC;AACxD8B,QAAAA,MAAM,EAAE,MADgD;AAExDC,QAAAA,OAAO,EAAE;AACR,oBAAU,kBADF;AAER,0BAAgB;AAFR,SAF+C;AAMxDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKpC,KAApB;AANkD,OAAtC,CAAL,CAQbqC,IARa,CAQR,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAA1B;AAAA,OARK,EASbD,IATa,CASRf,CAAC,CAACqB,IAAF,CAAO,UAACuB,QAAD,EAAc;AAC1BR,QAAAA,KAAK,CAAC,oBAAoB,MAAI,CAAC1D,KAAL,CAAWP,IAA/B,GAAsC,GAAvC,CAAL;AACA8D,QAAAA,SAAS,CAACC,QAAV,GAAqB,CAArB;AACA,YAAIU,QAAQ,IAAI,CAAhB,EACC,MAAI,CAAClE,KAAL,CAAW2D,OAAX;;AACD,QAAA,MAAI,CAAChD,MAAL;;AACAjC,QAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBqF,GAAhB,CAAoB;AAAE,qBAAW;AAAb,SAApB;AACA,OAPK,EAOH,IAPG,CATQ,CAAd;AAiBA,aAAO,IAAP;AACA;AA3E4C,GAArB,CAAzB;AA8EAnF,EAAAA,GAAG,CAACE,KAAJ,CAAUqF,MAAV,GAAmBjF,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AACvCiB,IAAAA,SAAS,EAAE,YAD4B;AAEvCf,IAAAA,UAAU,EAAE,oBAAUgB,IAAV,EAAgB;AAC3B,WAAKC,UAAL,GAAkBD,IAAI,CAACC,UAAvB;AACA,WAAKC,OAAL,GAAeF,IAAI,CAACE,OAApB;AAEA,WAAKD,UAAL,CAAgBE,EAAhB,CAAmB,KAAnB,EAA0B,KAAKC,MAA/B,EAAuC,IAAvC;AACA,WAAKH,UAAL,CAAgBE,EAAhB,CAAmB,QAAnB,EAA6B,KAAKC,MAAlC,EAA0C,IAA1C;AACA,WAAKC,MAAL;AACA,KATsC;AAUvCA,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKJ,UAAL,CAAgBK,IAAhB,CAAqB,KAAKF,MAA1B,EAAkC,IAAlC;AACAhC,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBmC,MAAhB,CAAuB,KAAKC,EAA5B;AACA,aAAO,IAAP;AACA,KAdsC;AAevCJ,IAAAA,MAAM,EAAE,gBAAUK,KAAV,EAAiB;AACxB,UAAIC,SAAS,GAAG,IAAIpC,GAAG,CAACE,KAAJ,CAAUmC,SAAd,CAAwB;AAAEjB,QAAAA,KAAK,EAAEe,KAAT;AAAgBP,QAAAA,OAAO,EAAE,KAAKA;AAA9B,OAAxB,CAAhB;AACA,WAAKU,GAAL,CAASL,MAAT,CAAgBG,SAAS,CAACL,MAAV,GAAmBG,EAAnC;AACA;AAlBsC,GAArB,CAAnB;AAqBAlC,EAAAA,GAAG,CAACE,KAAJ,CAAUsF,QAAV,GAAqBlF,QAAQ,CAACkB,IAAT,CAAchB,MAAd,CAAqB;AACzCmC,IAAAA,QAAQ,EAAED,CAAC,CAACC,QAAF,CAAW7C,CAAC,CAAC,oBAAD,CAAD,CAAwB8C,IAAxB,EAAX,CAD+B;AAEzCE,IAAAA,MAAM,EAAE;AACP,gBAAU;AADH,KAFiC;AAKzCf,IAAAA,MAAM,EAAE,kBAAY;AACnB,WAAKO,GAAL,CAASM,IAAT,CAAc,KAAKD,QAAnB;AACA7C,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgB8C,IAAhB,CAAqB,KAAKV,EAA1B;AACA,KARwC;AASzCuD,IAAAA,MAAM,EAAE,gBAAUC,CAAV,EAAa;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIxD,KAAK,GAAG;AACXtB,QAAAA,IAAI,EAAEf,CAAC,CAAC4F,CAAC,CAACE,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,yBAAxB,EAAmDC,GAAnD,EADK;AAEXhF,QAAAA,OAAO,EAAEhB,CAAC,CAAC4F,CAAC,CAACE,aAAH,CAAD,CAAmBC,IAAnB,CAAwB,4BAAxB,EAAsDC,GAAtD;AAFE,OAAZ;AAIAC,MAAAA,SAAS,GAAG,IAAI/F,GAAG,CAACC,MAAJ,CAAWI,KAAf,CAAqB8B,KAArB,CAAZ;AAEA,UAAIgB,OAAO,GAAG4C,SAAS,CAACC,IAAV,CAAe,EAAf,EAAmB;AAChChB,QAAAA,QAAQ,EAAE;AADsB,OAAnB,CAAd;AAIAlF,MAAAA,CAAC,CAACmF,IAAF,CAAO9B,OAAP,EAAgB+B,IAAhB,CACCxC,CAAC,CAACqB,IAAF,CAAO,UAAUrC,IAAV,EAAgB;AACnBoD,QAAAA,KAAK,CAAC,SAAD,CAAL;AACH,aAAKnD,UAAL,CAAgBL,KAAhB;AACAxB,QAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBqF,GAAhB,CAAoB;AAAE,qBAAW;AAAb,SAApB;AACArF,QAAAA,CAAC,CAAC,YAAD,CAAD,CAAgB8C,IAAhB,CAAqB,EAArB;AACA9C,QAAAA,CAAC,CAAC,eAAD,CAAD,CAAmB8C,IAAnB,CAAwB,EAAxB;AACA+B,QAAAA,SAAS,CAACC,QAAV,GAAqBmB,SAAS,CAACnF,EAA/B;AACA,OAPD,EAOG,IAPH,CADD;AAWAd,MAAAA,CAAC,CAACmF,IAAF,CAAO9B,OAAP,EAAgB8C,IAAhB,CAAqB,UAAUC,IAAV,EAAgB;AACpCpB,QAAAA,KAAK,CAACoB,IAAI,CAACC,YAAN,CAAL;AACA,OAFD;AAGA;AAnCwC,GAArB,CAArB;AAsCA7E,EAAAA,KAAK,CAAC,qCAAD,CAAL,CACCmC,IADD,CACM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAA1B;AAAA,GADT,EAECD,IAFD,CAEM,UAASkB,SAAT,EAAoB;AACzB5E,IAAAA,MAAM,CAAC4E,SAAP,GAAmBA,SAAnB;AACAyB,IAAAA,GAAG,GAAG,IAAIpG,GAAG,CAACG,WAAJ,CAAgBE,KAApB,EAAN;AACAgG,IAAAA,IAAI,GAAG,IAAIrG,GAAG,CAACE,KAAJ,CAAUsF,QAAd,CAAuB;AAAE7D,MAAAA,UAAU,EAAEyE;AAAd,KAAvB,CAAP;AACAC,IAAAA,IAAI,CAACtE,MAAL;AACAuE,IAAAA,WAAW,GAAG,IAAItG,GAAG,CAACE,KAAJ,CAAUqF,MAAd,CAAsB;AAAC5D,MAAAA,UAAU,EAAEyE,GAAb;AAAkBxE,MAAAA,OAAO,EAAE+C,SAAS,CAAC/D;AAArC,KAAtB,CAAd;AACA,GARD;AASA,CA9RC,EAAD,CAAD","sourcesContent":["$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\turlRoot: 'http://localhost:3000/guilds',\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t}\n\t\t\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\t\tmodel: App.Models.Guild,\n\t\turl: 'http://localhost:3000/guilds',\n\t\tinitialize: function () {\n\t\t\tthis.fetch();\n\t\t}\n\t});\n\n\tApp.Views.GuildUsers = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildList').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tvar guildView = new App.Views.GuildList({ model: guild});\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t})\n\n\tApp.Views.GuildUser = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\t\ttemplateList: _.template($(\"#GuildListTemplate\").html()),\n\n\t\tinitialize: function () {\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t// 'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t}\n\t})\n\n\tApp.Views.GuildList = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\t\ttemplateList: _.template($(\"#GuildListTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tshowCard: function () {\n\t\t\tnew App.Views.GuildCard({ model: this.model, user_id: this.user_id })\n\t\t}\n\t})\n\n\tApp.Views.GuildCard = Backbone.View.extend({\n\t\ttemplateCard: _.template($(\"#GuildCardTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model\t = data.model;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\trender: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/get_owner_nickname\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(owner => this.renderCard(owner), this))\n\t\t\treturn this;\n\t\t},\n\t\trenderCard: function (owner) {\n\t\t\tthis.model.owner_nickname = owner.nickname;\n\t\t\tvar template = this.templateCard(this.model);\n\t\t\tthis.$el.html(template);\n\t\t\t$('#GuildCard').html(this.el);\n\t\t\tthis.renderButtons();\n\t\t},\n\t\trenderButtons: function () {\n\t\t\tnew App.Views.GuildCardBtn({ model: this.model })\n\t\t}\n\t})\n\n\tApp.Views.GuildCardBtn = Backbone.View.extend({\n\t\ttemplateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n\t\ttemplateJoinBtn:   _.template($(\"#GuildJoinBtnTemplate\").html()),\n\t\ttemplateLeaveBtn:  _.template($(\"#GuildLeaveBtnTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.render()\n\t\t\tconsole.log('here' + curr_user.guild_id)\n\t\t},\n\t\trender: function () {\n\t\t\tif (curr_user.id == this.model.owner_id) {\n\t\t\t\tthis.$el.html(this.templateDeleteBtn)\n\t\t\t\tthis.$el.append(this.templateLeaveBtn)\n\t\t\t}\n\t\t\telse if (curr_user.guild_id == 0)\n\t\t\t\tthis.$el.html(this.templateJoinBtn)\n\t\t\telse if (curr_user.guild_id == this.model.id)\n\t\t\t\tthis.$el.html(this.templateLeaveBtn)\n\t\t\telse\n\t\t\t\tthis.$el.html(\"\")\n\t\t\t$('#GuildCardBtn').html(this.el);\n\t\t},\n\t\tevents: {\n\t\t\t'click #DelGuildBtn':  'deleteGuild',\n\t\t\t'click #JoinGuildBtn': 'joinGuild',\n\t\t\t'click #LeaveGuildBtn': 'leaveGuild',\n\t\t},\n\t\tdeleteGuild: function () {\n\t\t\talert(\"DELETE\");\n\t\t\tvar promise = this.model.destroy([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function () {\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" })\n\t\t\t\t}, this)\n\t\t\t);\n\t\t\tcurr_user.guild_id = 0\n\t\t},\n\t\tjoinGuild: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/guilds/join\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(() => {\n\t\t\t\talert('You joined guild ' + this.model.name + '!');\n\t\t\t\tcurr_user.guild_id = this.model.id;\n\t\t\t\tthis.render();\n\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t}, this))\n\t\t\treturn this;\n\t\t},\n\t\tleaveGuild: function () {\n\t\t\tvar promise = fetch(\"http://localhost:3000/guilds/exit\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind((response) => {\n\t\t\t\talert('You left guild ' + this.model.name + '!');\n\t\t\t\tcurr_user.guild_id = 0;\n\t\t\t\tif (response == 0)\n\t\t\t\t\tthis.model.destroy();\n\t\t\t\tthis.render();\n\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" });\n\t\t\t}, this))\n\t\t\treturn this;\n\t\t}\n\t})\n\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.user_id = data.user_id;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildList').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tvar guildView = new App.Views.GuildList({ model: guild, user_id: this.user_id });\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t});\n\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template) \n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n\t\t\t}\n\t\t\tnew_guild = new App.Models.Guild(guild);\n\n\t\t\tvar promise = new_guild.save([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n    \t\t\t\talert('success');\n\t\t\t\t\tthis.collection.fetch()\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t\t$('#GuildCard').html(\"\");\n\t\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\t\tcurr_user.guild_id = new_guild.id\n\t\t\t\t}, this)\n\t\t\t);\n\n\t\t\t$.when(promise).fail(function (resp) {\n\t\t\t\talert(resp.responseText);\n\t\t\t});\n\t\t},\n\n\t})\n\tfetch(\"http://localhost:3000/get_curr_user\")\n\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t.then(function(curr_user) {\n\t\twindow.curr_user = curr_user;\n\t\tcol = new App.Collections.Guild();\n\t\tform = new App.Views.NewGuild({ collection: col });\n\t\tform.render();\n\t\tguilds_view = new App.Views.Guilds( {collection: col, user_id: curr_user.id} );\n\t})\t\n}());"]},"metadata":{},"sourceType":"module"}