{"ast":null,"code":"$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  };\n  App.Models.Guild = Backbone.Model.extend({\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: 'http://localhost:3000/guilds',\n    initialize: function initialize() {\n      this.fetch().then(function (col) {\n        console.log(\"here\");\n        console.log(col);\n        console.log(\"here\");\n      });\n    }\n  });\n  App.Views.Guild = Backbone.View.extend({\n    tagName: 'span',\n    className: 'GuildCard',\n    template: _.template($(\"#GuildTemplate\").html()),\n    initialize: function initialize() {\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #delete_guild': 'delete_guild'\n    },\n    render: function render() {\n      var template = this.template(this.model); // this.$el.css({ 'display': \"inline-block\", 'margin': '10px' });\n\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    delete_guild: function delete_guild() {\n      // var new_titile = prompt('New task title: ');\n      this.model.destroy();\n    }\n  });\n  App.Views.Guilds = Backbone.View.extend({\n    initialize: function initialize() {\n      this.collection.on('add', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildsTemplate').append(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      console.log(guild.name);\n      var guildView = new App.Views.Guild({\n        model: guild\n      });\n      this.$el.append(guildView.render().el);\n    }\n  });\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    initialize: function initialize() {\n      this.$el.html(this.template);\n    },\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n      };\n      fetch(\"http://localhost:3000/create_new_guild\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(guild)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(function (user) {// new_guild = new App.Models.Guild(user);\n        // this.collection.add(new_user);\n      })[\"catch\"](function () {\n        alert('Error! Unable to create guild!');\n      });\n    }\n  });\n  col = new App.Collections.Guild();\n  console.log('dddd');\n  console.log(col);\n  new App.Views.Guilds({\n    collection: col\n  });\n  form = new App.Views.NewGuild({\n    collection: col\n  });\n  form.render();\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/index.js"],"names":["$","window","App","Models","Views","Collections","Router","Guild","Backbone","Model","extend","initialize","curr_guild","id","name","anagram","score","owner_id","created_at","updated_at","Collection","model","url","fetch","then","col","console","log","View","tagName","className","template","_","html","on","remove","events","render","$el","append","delete_guild","destroy","Guilds","collection","addOne","each","el","guild","guildView","NewGuild","submit","e","preventDefault","currentTarget","find","val","method","headers","body","JSON","stringify","res","ok","json","Promise","reject","user","alert","form"],"mappings":"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","sourcesContent":["$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t}\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\t\tmodel: App.Models.Guild,\n\t\turl: 'http://localhost:3000/guilds',\n\t\tinitialize: function () {\n\t\t\tthis.fetch()\n\t\t\t\t.then(col => {\n\t\t\t\tconsole.log(\"here\")\n\t\t\t\tconsole.log(col)\n\t\t\t\tconsole.log(\"here\")\n\t\t\t})\n\t\t}\n\t});\n\n\tApp.Views.Guild = Backbone.View.extend({\n\t\ttagName: 'span',\n\t\tclassName: 'GuildCard',\n\t\ttemplate: _.template($(\"#GuildTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #delete_guild': 'delete_guild'\n\t\t},\n\t\trender: function () {\n\t\t\tvar template = this.template(this.model);\n\t\t\t// this.$el.css({ 'display': \"inline-block\", 'margin': '10px' });\n\t\t\tthis.$el.append(template);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tdelete_guild: function () {\n\t\t\t// var new_titile = prompt('New task title: ');\n\t\t\tthis.model.destroy();\n\t\t}\n\t})\n\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildsTemplate').append(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tconsole.log(guild.name);\n\t\t\tvar guildView = new App.Views.Guild({ model: guild });\n\t\t\tthis.$el.append(guildView.render().el);\n\t\t}\n\t});\n\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.$el.html(this.template)\n\t\t},\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n\t\t\t}\n\t\t\tfetch(\"http://localhost:3000/create_new_guild\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(guild)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(user => {\n\t\t\t\t// new_guild = new App.Models.Guild(user);\n\t\t\t\t// this.collection.add(new_user);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\talert('Error! Unable to create guild!')\n\t\t\t})\n\t\t},\n\n\t})\n\n\tcol = new App.Collections.Guild();\n\tconsole.log('dddd');\n\tconsole.log(col);\n\tnew App.Views.Guilds({ collection: col });\n\tform = new App.Views.NewGuild({ collection: col });\n\tform.render();\n}());"]},"metadata":{},"sourceType":"module"}