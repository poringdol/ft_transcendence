{"ast":null,"code":"var _require = require(\"underscore\"),\n    result = _require.result;\n\n$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {}\n  }; // -----------------------------------------\n  //  TOURNAMENTS       MODEL\n  // -----------------------------------------\n\n  App.Models.Tournament = Backbone.Model.extend({\n    url: \"/tournaments/\",\n    initialize: function initialize() {\n      this.url += tournament_id + '.json';\n      this.fetch();\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                                TOURNAMENT   INFO\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  App.Views.TournamentTitle = Backbone.View.extend({\n    template: _.template($(\"#TournamentTitleTemplate\").html()),\n    initialize: function initialize() {\n      $(\"#TournamentTitle\").html(this.template());\n    }\n  });\n  App.Views.TournamentCard = Backbone.View.extend({\n    template: _.template($(\"#TournamentCardTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.members = data.members;\n      this.model.on('sync', this.render, this);\n    },\n    events: {\n      'click #LeaveTournamentBtn': 'leave',\n      'click #JoinTournamentBtn': 'join'\n    },\n    render: function render() {\n      this.model.attributes.start_date = new Date(this.model.attributes.start);\n      this.model.attributes.end_date = new Date(this.model.attributes.end);\n      this.model.attributes.addon_type = '';\n      if (this.model.attributes.addons.addon3 == true) this.model.attributes.addon_type = 'boost ';\n      if (this.model.attributes.addons.addon1 == true) this.model.attributes.addon_type += 'disco';else if (this.model.attributes.addons.addon2 == true) this.model.attributes.addon_type += 'epilepsy';\n      if (this.model.attributes.addon_type == '') this.model.attributes.addon_type = 'none';\n      if (this.model.attributes.is_end == true) this.model.attributes.status = 'finished';else if (this.model.attributes.is_inprogress == true) this.model.attributes.status = 'in progress';else this.model.attributes.status = 'not started';\n      this.$el.html(this.template(this.model.attributes));\n      $(\"#TournamentCard\").html(this.el);\n\n      if (this.model.attributes.status == 'not started') {\n        fetch('/tournaments/curr_user_is_in_tournament/' + tournament_id).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res == 1) $(\"#LeaveTournamentLi\").css({\n            'display': 'block'\n          });else $(\"#JoinTournamentLi\").css({\n            'display': 'block'\n          });\n        });\n      }\n    },\n    join: function join() {\n      var _this = this;\n\n      var tournament_user = {\n        tournament_id: tournament_id\n      };\n      fetch(\"/tournaments/join\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(tournament_user)\n      }).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else {\n          alert('You successfully joined a tournament!');\n\n          _this.members.fetch();\n\n          _this.model.attributes.members.count += 1;\n\n          _this.render();\n        }\n      }, this));\n    },\n    leave: function leave() {\n      var _this2 = this;\n\n      fetch(\"/tournaments/leave/\" + tournament_id).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else {\n          _this2.members.fetch();\n\n          _this2.model.attributes.members.count -= 1;\n\n          _this2.render();\n        }\n      }, this));\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                             TOURNAMENT    MEMBERS\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  App.Models.Members = Backbone.Model.extend({\n    urlRoot: \"/tournaments/members/\",\n    initialize: function initialize() {}\n  });\n  App.Collections.Members = Backbone.Collection.extend({\n    model: App.Models.Members,\n    url: \"/tournaments/members/\",\n    initialize: function initialize() {\n      this.url += tournament_id;\n      this.fetch();\n    }\n  });\n  App.Views.MembersTable = Backbone.View.extend({\n    template: _.template($(\"#TournamentsMembersTableTemplate\").html()),\n    initialize: function initialize() {\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      this.$el.html(this.template());\n      $(\"#TournamentMembers\").html(this.el);\n      members = new App.Views.Members({\n        collection: this.collection\n      });\n      members.render();\n    }\n  });\n  App.Views.Members = Backbone.View.extend({\n    tagName: 'tbody',\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $(\"#TournamentMembersTable\").append(this.el);\n      return this;\n    },\n    addOne: function addOne(member) {\n      var row = new App.Views.Member({\n        model: member\n      });\n      this.$el.append(row.render().el);\n    }\n  });\n  App.Views.Member = Backbone.View.extend({\n    template: _.template($(\"#MembersRowTemplate\").html()),\n    tagName: 'tr',\n    render: function render() {\n      this.$el.html(this.template(this.model.attributes));\n      return this;\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                             TOURNAMENT  MATCHES\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  App.Models.Matches = Backbone.Model.extend({\n    urlRoot: \"/tournaments/matches/\",\n    initialize: function initialize() {}\n  });\n  App.Collections.Matches = Backbone.Collection.extend({\n    model: App.Models.Matches,\n    url: \"/tournaments/matches/\",\n    initialize: function initialize() {\n      this.url += tournament_id;\n      this.fetch();\n    }\n  });\n  App.Views.CardMatches = Backbone.View.extend({\n    template: _.template($(\"#MatchesCardTemplate\").html()),\n    initialize: function initialize() {\n      $(\"#TournamentMatches\").html(this.template());\n    }\n  });\n  App.Views.TableMatches = Backbone.View.extend({\n    template: _.template($(\"#MatchesTableTemplate\").html()),\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.type = data.type;\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      this.$el.html(this.template({\n        type: this.type\n      }));\n      $(\"#\" + this.type + \"Matches\").html(this.el);\n      matches = new App.Views.Matches({\n        collection: this.collection,\n        type: this.type\n      });\n      matches.render();\n      return this;\n    }\n  });\n  App.Views.Matches = Backbone.View.extend({\n    tagName: 'tbody',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.type = data.type;\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $(\"#\" + this.type + \"MatchesTable\").append(this.el);\n      return this;\n    },\n    addOne: function addOne(match) {\n      match = match.attributes.match;\n\n      if (this.type == 'History') {\n        if (match.is_end == true) {\n          var row = new App.Views.Match({\n            model: match\n          });\n          this.$el.append(row.render().el);\n        }\n      } else if (this.type == 'Current') {\n        if (match.is_inprogress == true && match.is_end == false) {\n          var row = new App.Views.Match({\n            model: match\n          });\n          this.$el.append(row.render().el);\n        }\n      } else if (this.type == 'Planned') {\n        if (match.is_inprogress == false && match.is_end == false) {\n          var row = new App.Views.Match({\n            model: match\n          });\n          this.$el.append(row.render().el);\n        }\n      }\n    }\n  });\n  App.Views.Match = Backbone.View.extend({\n    template: _.template($(\"#MatchesRowTemplate\").html()),\n    tagName: 'tr',\n    render: function render() {\n      this.model.addon_type = '';\n      if (this.model.addons.addon3 == true) this.model.addon_type = 'boost ';\n      if (this.model.addons.addon1 == true) this.model.addon_type += 'disco';else if (this.model.addons.addon2 == true) this.model.addon_type += 'epilepsy';\n      if (this.model.addon_type == '') this.model.addon_type = 'none';\n      this.$el.html(this.template(this.model));\n      return this;\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                             TOURNAMENT  WINNER\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  App.Views.TournamentWinner = Backbone.View.extend({\n    template: _.template($(\"#TournamentWinnerTemplate\").html()),\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.tournament = data.tournament;\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      if (this.tournament.attributes.is_end == true) $(\"#TournamentWinner\").html(this.template(this.collection.models[0].attributes));\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                            MAIN\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  var urlArray = window.jQuery.ajaxSettings.url.split('/');\n  window.tournament_id = urlArray[urlArray.length - 1];\n  var tournament = new App.Models.Tournament();\n  var members = new App.Collections.Members();\n  var matches = new App.Collections.Matches();\n  tournamentWinner = new App.Views.TournamentWinner({\n    collection: members,\n    tournament: tournament\n  });\n  tournamentTitle = new App.Views.TournamentTitle();\n  tournamentCard = new App.Views.TournamentCard({\n    model: tournament,\n    members: members\n  });\n  tournamentMembers = new App.Views.MembersTable({\n    collection: members\n  });\n  MatchesCard = new App.Views.CardMatches({});\n  currentMatchesTable = new App.Views.TableMatches({\n    collection: matches,\n    type: 'Current'\n  });\n  plannedMatchesTable = new App.Views.TableMatches({\n    collection: matches,\n    type: 'Planned'\n  });\n  historyMatchesTable = new App.Views.TableMatches({\n    collection: matches,\n    type: 'History'\n  });\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/tournament.js"],"names":["require","result","$","window","App","Models","Views","Collections","Tournament","Backbone","Model","extend","url","initialize","tournament_id","fetch","TournamentTitle","View","template","_","html","TournamentCard","data","model","members","on","render","events","attributes","start_date","Date","start","end_date","end","addon_type","addons","addon3","addon1","addon2","is_end","status","is_inprogress","$el","el","then","res","json","css","join","tournament_user","method","headers","body","JSON","stringify","bind","error","alert","count","leave","Members","urlRoot","Collection","MembersTable","collection","tagName","each","addOne","append","member","row","Member","Matches","CardMatches","TableMatches","type","matches","match","Match","TournamentWinner","tournament","models","urlArray","jQuery","ajaxSettings","split","length","tournamentWinner","tournamentTitle","tournamentCard","tournamentMembers","MatchesCard","currentMatchesTable","plannedMatchesTable","historyMatchesTable"],"mappings":"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","sourcesContent":["const { result } = require(\"underscore\");\n\n$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {}\n\t};\n\n\n// -----------------------------------------\n//  TOURNAMENTS       MODEL\n// -----------------------------------------\n\tApp.Models.Tournament = Backbone.Model.extend({\n\t\turl: \"/tournaments/\",\n\t\tinitialize: function () {\n\t\t\tthis.url += tournament_id + '.json'\n\t\t\tthis.fetch()\n\t\t}\n\t});\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                                TOURNAMENT   INFO\n// ---------------------------------------------------------------------------------------------------------------------------\n\tApp.Views.TournamentTitle = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#TournamentTitleTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\t$(\"#TournamentTitle\").html(this.template())\n\t\t}\n\t})\n\n\tApp.Views.TournamentCard = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#TournamentCardTemplate\").html()),\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model\n\t\t\tthis.members = data.members\n\n\t\t\tthis.model.on('sync', this.render, this)\n\t\t},\n\t\tevents: {\n\t\t\t'click #LeaveTournamentBtn': 'leave',\n\t\t\t'click #JoinTournamentBtn':\t 'join',\n\t\t},\n\t\trender: function () {\n\t\t\tthis.model.attributes.start_date = new Date(this.model.attributes.start)\n\t\t\tthis.model.attributes.end_date = new Date(this.model.attributes.end)\n\t\t\tthis.model.attributes.addon_type = ''\n\t\t\tif (this.model.attributes.addons.addon3 == true)\n\t\t\t\tthis.model.attributes.addon_type = 'boost '\n\t\t\tif (this.model.attributes.addons.addon1 == true)\n\t\t\t\tthis.model.attributes.addon_type += 'disco'\n\t\t\telse if (this.model.attributes.addons.addon2 == true)\n\t\t\t\tthis.model.attributes.addon_type += 'epilepsy'\n\t\t\tif (this.model.attributes.addon_type == '')\n\t\t\t\tthis.model.attributes.addon_type = 'none'\n\t\t\tif (this.model.attributes.is_end == true)\n\t\t\t\tthis.model.attributes.status = 'finished'\n\t\t\telse if (this.model.attributes.is_inprogress == true)\n\t\t\t\tthis.model.attributes.status = 'in progress'\n\t\t\telse\n\t\t\t\tthis.model.attributes.status = 'not started'\n\t\t\tthis.$el.html(this.template(this.model.attributes))\n\t\t\t$(\"#TournamentCard\").html(this.el)\n\t\t\tif (this.model.attributes.status == 'not started') {\n\t\t\t\tfetch('/tournaments/curr_user_is_in_tournament/' + tournament_id)\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tif (res == 1)\n\t\t\t\t\t\t\t$(\"#LeaveTournamentLi\").css({ 'display': 'block' })\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$(\"#JoinTournamentLi\").css({ 'display': 'block' })\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tjoin: function () {\n\t\t\tlet tournament_user = {\n\t\t\t\ttournament_id: tournament_id\n\t\t\t}\n\t\t\tfetch(\"/tournaments/join\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(tournament_user)\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(_.bind((res) => {\n\t\t\t\t\tif (res.error)\n\t\t\t\t\t\talert(res.error)\n\t\t\t\t\telse {\n\t\t\t\t\t\talert('You successfully joined a tournament!')\n\t\t\t\t\t\tthis.members.fetch()\n\t\t\t\t\t\tthis.model.attributes.members.count += 1\n\t\t\t\t\t\tthis.render()\n\t\t\t\t\t}\n\t\t\t\t}, this))\n\t\t},\n\t\tleave: function () {\n\t\t\tfetch(\"/tournaments/leave/\" + tournament_id)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(_.bind((res) => {\n\t\t\t\t\tif (res.error)\n\t\t\t\t\t\talert(res.error)\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.members.fetch()\n\t\t\t\t\t\tthis.model.attributes.members.count -= 1\n\t\t\t\t\t\tthis.render()\n\t\t\t\t\t}\n\t\t\t\t}, this))\n\t\t}\n\t})\n\t\n\n\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                             TOURNAMENT    MEMBERS\n// ---------------------------------------------------------------------------------------------------------------------------\n\t\n\tApp.Models.Members = Backbone.Model.extend({\n\t\turlRoot: \"/tournaments/members/\",\n\t\tinitialize: function () {\n\t\t}\n\t});\n\n\tApp.Collections.Members = Backbone.Collection.extend({\n\t\tmodel: App.Models.Members,\n\t\turl: \"/tournaments/members/\",\n\t\tinitialize: function () {\n\t\t\tthis.url += tournament_id\n\t\t\tthis.fetch()\n\t\t}\n\t});\n\t\n\tApp.Views.MembersTable = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#TournamentsMembersTableTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('sync', this.render, this)\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template())\n\t\t\t$(\"#TournamentMembers\").html(this.el)\n\t\t\tmembers = new App.Views.Members({ collection: this.collection })\n\t\t\tmembers.render()\n\t\t}\n\t});\n\n\tApp.Views.Members = Backbone.View.extend({\n\t\ttagName: 'tbody',\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this)\n\t\t\t$(\"#TournamentMembersTable\").append(this.el)\n\t\t\treturn this\n\t\t},\n\t\taddOne: function (member) {\n\t\t\tvar row = new App.Views.Member({ model: member });\n\t\t\tthis.$el.append(row.render().el);\n\t\t}\n\t});\n\n\tApp.Views.Member = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#MembersRowTemplate\").html()),\n\t\ttagName: 'tr',\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template(this.model.attributes))\n\t\t\treturn this\n\t\t}\n\t});\n\n\n\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                             TOURNAMENT  MATCHES\n// ---------------------------------------------------------------------------------------------------------------------------\n\t\t\n\tApp.Models.Matches = Backbone.Model.extend({\n\t\turlRoot: \"/tournaments/matches/\",\n\t\tinitialize: function () {\n\t\t}\n\t});\n\n\tApp.Collections.Matches = Backbone.Collection.extend({\n\t\tmodel: App.Models.Matches,\n\t\turl: \"/tournaments/matches/\",\n\t\tinitialize: function () {\n\t\t\tthis.url += tournament_id\n\t\t\tthis.fetch()\n\t\t}\n\t});\n\t\n\tApp.Views.CardMatches = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#MatchesCardTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\t$(\"#TournamentMatches\").html(this.template())\n\t\t}\n\t})\n\t\n\tApp.Views.TableMatches = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#MatchesTableTemplate\").html()),\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection\n\t\t\tthis.type = data.type\n\n\t\t\tthis.collection.on('sync', this.render, this)\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template({ type: this.type }))\n\t\t\t$(\"#\" + this.type + \"Matches\").html(this.el)\n\t\t\tmatches = new App.Views.Matches({ collection: this.collection, type: this.type })\n\t\t\tmatches.render()\n\t\t\treturn this\n\t\t},\n\t})\n\t\n\tApp.Views.Matches = Backbone.View.extend({\n\t\ttagName: 'tbody',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection\n\t\t\tthis.type = data.type\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this)\n\t\t\t$(\"#\" + this.type + \"MatchesTable\").append(this.el)\n\t\t\treturn this\n\t\t},\n\t\taddOne: function (match) {\n\t\t\tmatch = match.attributes.match\n\t\t\tif (this.type == 'History') {\n\t\t\t\tif (match.is_end == true) {\n\t\t\t\t\tvar row = new App.Views.Match({ model: match });\n\t\t\t\t\tthis.$el.append(row.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.type == 'Current') {\n\t\t\t\tif (match.is_inprogress == true && match.is_end  == false) {\n\t\t\t\t\tvar row = new App.Views.Match({ model: match });\n\t\t\t\t\tthis.$el.append(row.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.type == 'Planned') {\n\t\t\t\tif (match.is_inprogress == false && match.is_end  == false) {\n\t\t\t\t\tvar row = new App.Views.Match({ model: match });\n\t\t\t\t\tthis.$el.append(row.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tApp.Views.Match = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#MatchesRowTemplate\").html()),\n\t\ttagName: 'tr',\n\t\trender: function () {\n\t\t\tthis.model.addon_type = ''\n\t\t\tif (this.model.addons.addon3 == true)\n\t\t\t\tthis.model.addon_type = 'boost '\n\t\t\tif (this.model.addons.addon1 == true)\n\t\t\t\tthis.model.addon_type += 'disco'\n\t\t\telse if (this.model.addons.addon2 == true)\n\t\t\t\tthis.model.addon_type += 'epilepsy'\n\t\t\tif (this.model.addon_type == '')\n\t\t\t\tthis.model.addon_type = 'none'\n\t\t\tthis.$el.html(this.template(this.model))\n\t\t\treturn this;\n\t\t}\n\t});\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                             TOURNAMENT  WINNER\n// ---------------------------------------------------------------------------------------------------------------------------\n\t\n\tApp.Views.TournamentWinner = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#TournamentWinnerTemplate\").html()),\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection\n\t\t\tthis.tournament = data.tournament\n\t\t\tthis.collection.on('sync', this.render, this)\n\t\t},\n\t\trender: function () {\n\t\t\tif (this.tournament.attributes.is_end == true)\n\t\t\t\t$(\"#TournamentWinner\").html(this.template(this.collection.models[0].attributes))\n\t\t}\n\t})\n\t\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                            MAIN\n// ---------------------------------------------------------------------------------------------------------------------------\n\n\tconst urlArray \t\t = window.jQuery.ajaxSettings.url.split('/')\n\twindow.tournament_id = urlArray[urlArray.length - 1]\n\n\tvar tournament\t\t = new App.Models.Tournament()\n\tvar members\t\t\t = new App.Collections.Members()\n\tvar matches\t\t\t = new App.Collections.Matches()\n\n\ttournamentWinner\t = new App.Views.TournamentWinner({ collection: members, tournament: tournament})\n\ttournamentTitle \t = new App.Views.TournamentTitle()\n\ttournamentCard\t\t = new App.Views.TournamentCard({ model: tournament, members: members })\n\ttournamentMembers \t = new App.Views.MembersTable({ collection: members })\n\t\n\tMatchesCard\t\t\t = new App.Views.CardMatches({})\n\tcurrentMatchesTable\t = new App.Views.TableMatches({ collection: matches, type: 'Current' })\n\tplannedMatchesTable  = new App.Views.TableMatches({ collection: matches, type: 'Planned' })\n\thistoryMatchesTable\t = new App.Views.TableMatches({ collection: matches, type: 'History' })\n\n}());\n"]},"metadata":{},"sourceType":"module"}