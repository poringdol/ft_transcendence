{"ast":null,"code":"/*\n** -------------------------------------------------------\n** VIEWS of all guilds: (App.Views.)\n**   - Guilds\n**\n** VIEWS of a single guild: (App.Views.)\n**   - AllGuildViews:\n**        - GuildListEl\n**        - GuildCard\n**        - GuildCardBtn\n**        - GuildMemberList\n// ** -------------------------------------------------------\n*/\n// const TOKEN = document.querySelector('meta[name=\"csrf-token\"]').content;\n$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {},\n    Router: {}\n  };\n  App.Views.AllGuildViews = Backbone.View.extend({\n    initialize: function initialize(data) {\n      this.newGuildListEl(data);\n      this.newGuildCard(data);\n      this.guild_id = data.model.id;\n      this.guild = data.model;\n    },\n    newGuildListEl: function newGuildListEl(data) {\n      this.GuildListEl = new App.Views.GuildListEl({\n        model: data.model,\n        view: this\n      });\n    },\n    newGuildCard: function newGuildCard(data) {\n      this.GuildCard = new App.Views.GuildCard({\n        model: data.model,\n        view: this\n      });\n    },\n    newGuildCardBtn: function newGuildCardBtn(data) {\n      this.GuildCardBtn = new App.Views.GuildCardBtn({\n        model: data.model,\n        view: this\n      });\n    },\n    newGuildMemberList: function newGuildMemberList(data) {\n      if (!this.MemberCol) this.MemberCol = new App.Collections.GuildMember({\n        guild: data.model.id\n      });\n      this.GuildMemberList = new App.Views.GuildMembers({\n        collection: this.MemberCol,\n        view: this\n      });\n    },\n    newGuildOfficerList: function newGuildOfficerList(data) {\n      if (!this.MemberCol) this.MemberCol = new App.Collections.GuildMember({\n        guild: data.model.id\n      });\n      this.GuildOfficerList = new App.Views.GuildOfficers({\n        collection: this.MemberCol,\n        view: this\n      });\n    },\n    newGuildWarList: function newGuildWarList(data) {\n      this.WarCol = new App.Collections.GuildWar({\n        guild: data.model.id\n      });\n      this.GuildWarList = new App.Views.GuildWars({\n        collection: this.WarCol,\n        view: this,\n        guild: data.model.id\n      });\n    }\n  }); // ------------------------------------\n  // WAR      MODEL and COLLECTION\n  // ------------------------------------\n\n  App.Models.GuildWar = Backbone.Model.extend({\n    urlRoot: \"/wars/guild_wars/\"\n  });\n  App.Collections.GuildWar = Backbone.Collection.extend({\n    model: App.Models.GuildWar,\n    url: \"/wars/guild_wars/\",\n    initialize: function initialize(data) {\n      this.url += data.guild;\n      this.fetch();\n    }\n  }); // ------------------------------------\n  // GUILD      MODEL and COLLECTION\n  // ------------------------------------\n\n  App.Models.Guild = Backbone.Model.extend({\n    urlRoot: \"/guilds\",\n    initialize: function initialize(curr_guild) {\n      this.id = curr_guild.id;\n      this.name = curr_guild.name;\n      this.logo = curr_guild.logo;\n      this.anagram = curr_guild.anagram;\n      this.score = curr_guild.score;\n      this.owner_id = curr_guild.owner_id;\n      this.created_at = curr_guild.created_at;\n      this.updated_at = curr_guild.updated_at;\n      this.rating = curr_guild.rating;\n    }\n  });\n  App.Collections.Guild = Backbone.Collection.extend({\n    model: App.Models.Guild,\n    url: \"/guilds\",\n    initialize: function initialize() {\n      this.fetch();\n    }\n  }); // -----------------------------------------\n  // GUILD_MEMBERS     MODEL and COLLECTION\n  // -----------------------------------------\n\n  App.Models.GuildMember = Backbone.Model.extend({\n    urlRoot: \"/get_guild_users\",\n    initialize: function initialize(user) {\n      this.nickname = user.nickname;\n      this.avatar = user.avatar;\n      this.is_officer = user.is_officer;\n    }\n  });\n  App.Collections.GuildMember = Backbone.Collection.extend({\n    model: App.Models.GuildMember,\n    url: \"/get_guild_users\",\n    initialize: function initialize(data) {\n      this.url += '/' + data.guild;\n      this.fetch();\n    }\n  }); // -----------------------------------------\n  // GUILD_MEMBERS          COLLECTION VIEW\n  // -----------------------------------------\n\n  App.Views.GuildMembers = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.view = data.view;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('sync', this.render, this);\n      this.collection.on('change', this.addOne, this);\n    },\n    render: function render() {\n      this.$el.html(\"\");\n      this.collection.each(this.addOne, this);\n      $('#GuildContent').html(this.el);\n      return this;\n    },\n    addOne: function addOne(user) {\n      if (user.nickname) {\n        var userView = new App.Views.GuildMember({\n          model: user\n        });\n        this.$el.append(userView.render().el);\n\n        if (curr_user.attributes.is_admin == true || curr_user.attributes.is_moderator == true || curr_user.attributes.is_officer && this.view.guild_id == curr_user.attributes.guild_id || curr_user.attributes.id == this.view.guild.owner_id) {\n          var userViewBtn = new App.Views.GuildMemberBtn({\n            model: user,\n            view: this.view,\n            parent: this\n          });\n          this.$el.append(userViewBtn.render().el);\n        }\n      }\n    }\n  }); // -----------------------------------------\n  // GUILD_WARS         COLLECTION VIEW\n  // -----------------------------------------\n\n  App.Views.GuildWars = Backbone.View.extend({\n    template: _.template($(\"#GuildWarListHeaderTemplate\").html()),\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.view = data.view;\n      this.guild_id = data.guild;\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      this.$el.html(this.template());\n      this.collection.each(this.addOne, this);\n      $('#GuildContent').html(this.el);\n      return this;\n    },\n    addOne: function addOne(war) {\n      // Обычному члену гильдии показываются только принятые войны\n      if (war.attributes.is_accepted == true || curr_user.attributes.id == this.view.guild.owner_id || curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id) {\n        var warView = new App.Views.GuildWar({\n          model: war.attributes,\n          guild_id: this.guild_id\n        });\n        this.$el.append(warView.render().el);\n\n        if (war.attributes.is_accepted == false && (curr_user.attributes.id == this.view.guild.owner_id || curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id)) {\n          var warViewBtn = new App.Views.GuildWarBtn({\n            model: war,\n            view: this.view,\n            parent: this,\n            warView: warView\n          });\n          this.$el.append(warViewBtn.render().el);\n        }\n      }\n    }\n  }); // -----------------------------------------\n  // GUILD_WARS          MODEL VIEW\n  // -----------------------------------------\n\n  App.Views.GuildWar = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item',\n    templateList: _.template($(\"#GuildWarListTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.guild_id = data.guild_id;\n    },\n    render: function render() {\n      // this.model.start_date = new Date(this.model.start).toUTCString()\n      this.model.start_date = new Date(this.model.start);\n      this.model.end_date = new Date(this.model.end);\n      this.model.addon_type = '';\n      if (this.model.addons.addon3 == true) this.model.addon_type = 'boost ';\n      if (this.model.addons.addon1 == true) this.model.addon_type += 'disco';else if (this.model.addons.addon2 == true) this.model.addon_type += 'epilepsy';\n      if (this.model.addon_type == '') this.model.addon_type = 'none'; // console.log(this.model.start_date.day)\n\n      if (this.model.guild1.id != this.guild_id) this.model.enemy = this.model.guild1;else this.model.enemy = this.model.guild2;\n      this.$el.attr({\n        'href': \"/wars/\" + this.model.id\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    }\n  });\n  App.Views.GuildWarBtn = Backbone.View.extend({\n    tagName: 'div',\n    className: 'list-group-item',\n    template_accept: _.template($(\"#AcceptWarBtnTemplate\").html()),\n    template_decline: _.template($(\"#DeclineWarBtnTemplate\").html()),\n    template_vaiting: _.template($(\"#VaitingWarBtnTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.view = data.view;\n      this.parent = data.parent;\n      this.warView = data.warView;\n      this.model.on('destroy', this.remove, this);\n      this.model.on('sync', this.render, this);\n    },\n    events: {\n      'click #AcceptWarBtn': 'acceptWar',\n      'click #DeclineWarBtn': 'declineWar'\n    },\n    render: function render() {\n      this.$el.html(\"\");\n      this.$el.attr({\n        'style': 'text-align: center;'\n      });\n      if (curr_user.attributes.id == this.view.guild.owner_id) var role = 'owner';else if (curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id) var role = 'officer';\n\n      if (role == 'owner' || role == 'officer') {\n        if (this.model.attributes.is_accepted == false && this.model.attributes.guild1.id == this.view.guild_id) this.$el.append(this.template_vaiting);else {\n          this.$el.append(this.template_accept);\n          this.$el.append(this.template_decline);\n        } // this.$el.append(this.template_accept);\n        // this.$el.append(this.template_decline);\n      }\n\n      return this;\n    },\n    declineWar: function declineWar() {\n      var _this = this;\n\n      fetch(\"/wars/decline/\" + this.model.id).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else {\n          alert('You successfully declined a war!');\n\n          _this.$el.remove();\n\n          _this.warView.$el.remove();\n        }\n      }, this));\n    },\n    acceptWar: function acceptWar() {\n      var _this2 = this;\n\n      fetch(\"/wars/accept/\" + this.model.id).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else {\n          alert('You successfully accepted a war!');\n\n          _this2.$el.remove(); // this.parent.render()\n\n        }\n      }, this));\n    },\n    remove: function remove() {\n      this.$el.remove();\n    }\n  }); // -----------------------------------------\n  // GUILD_OFFICERS         COLLECTION VIEW\n  // -----------------------------------------\n\n  App.Views.GuildOfficers = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.view = data.view;\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      this.$el.html(\"\");\n      this.collection.each(this.addOne, this);\n      $('#GuildContent').html(this.el);\n      return this;\n    },\n    addOne: function addOne(user) {\n      if (user.nickname && user.is_officer) {\n        var userView = new App.Views.GuildMember({\n          model: user\n        });\n        this.$el.append(userView.render().el);\n\n        if (curr_user.attributes.is_admin == true || curr_user.attributes.is_moderator == true || curr_user.attributes.id == this.view.guild.owner_id) {\n          var userViewBtn = new App.Views.GuildMemberBtn({\n            model: user,\n            view: this.view,\n            parent: this\n          });\n          this.$el.append(userViewBtn.render().el);\n        }\n      }\n    }\n  }); // -----------------------------------------\n  // GUILD_MEMBERS          MODEL VIEW\n  // -----------------------------------------\n\n  App.Views.GuildMember = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item',\n    templateList: _.template($(\"#GuildMemberListTemplate\").html()),\n    initialize: function initialize() {\n      this.model.on('destroy', this.remove, this);\n    },\n    render: function render() {\n      this.$el.attr({\n        'href': \"/profile/\" + this.model.id\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    }\n  });\n  App.Views.GuildMemberBtn = Backbone.View.extend({\n    tagName: 'div',\n    className: 'list-group-item',\n    template_exit: _.template($(\"#AdminExitMemberBtnTemplate\").html()),\n    template_officer: _.template($(\"#AdminDoOfficerBtnTemplate\").html()),\n    template_unofficer: _.template($(\"#AdminUndoOfficerBtnTemplate\").html()),\n    template_owner: _.template($(\"#AdminDoOwnerBtnTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.view = data.view;\n      this.parent = data.parent;\n      this.model.on('destroy', this.remove, this);\n      this.model.on('sync', this.render, this);\n    },\n    events: {\n      'click #AdminExitMember': 'exitMember',\n      'click #AdminDoOfficer': 'doOfficer',\n      'click #AdminUndoOfficer': 'undoOfficer',\n      'click #AdminDoOwner': 'doOwner'\n    },\n    render: function render() {\n      this.$el.html(\"\");\n      this.$el.attr({\n        'style': 'text-align: center;'\n      });\n      if (curr_user.attributes.is_admin == true || curr_user.attributes.is_moderator == true || curr_user.attributes.id == this.view.guild.owner_id) var role = 'owner-admin';else if (curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id) var role = 'officer';\n\n      if ((role == 'owner-admin' || role == 'officer' && this.model.is_officer == false && this.model.id != this.model.attributes.guild.owner_id) && this.model.id != curr_user.attributes.id) {\n        var template_exit = this.template_exit(this.model);\n        this.$el.append(template_exit);\n      }\n\n      if (this.model.is_officer != true) {\n        var template_officer = this.template_officer(this.model);\n        this.$el.append(template_officer);\n      } else if (role == 'owner-admin' || role == 'officer' && this.model.id == curr_user.attributes.id) {\n        var template_unofficer = this.template_unofficer(this.model);\n        this.$el.append(template_unofficer);\n      }\n\n      if (this.model.id != this.model.attributes.guild.owner_id && role == 'owner-admin') {\n        var template_owner = this.template_owner(this.model);\n        this.$el.append(template_owner);\n      }\n\n      return this;\n    },\n    exitMember: function exitMember() {\n      var _this3 = this;\n\n      fetch(\"/guilds/exit_user/\" + this.model.id).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (res) {\n        alert('Success! User ' + _this3.model.nickname + ' removed from guild!');\n\n        if (res != 0) {\n          _this3.view.GuildCard.render();\n\n          _this3.parent.collection.fetch();\n        } else {\n          $(_this3.parent.el).html(\"\");\n\n          _this3.view.GuildCard.model.destroy();\n        }\n      }, this))[\"catch\"](function () {\n        return alert(\"You are not able to do that\");\n      });\n    },\n    undoOfficer: function undoOfficer() {\n      var _this4 = this;\n\n      fetch(\"/guilds/undo_officer/\" + this.model.id).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (res) {\n        alert('Success! User ' + _this4.model.nickname + ' is not an officer anymore!');\n        curr_user.fetch();\n        _this4.model.is_officer = false;\n\n        _this4.model.save(); // this.view.GuildCard.render()\n\n\n        _this4.render(); // window.location.reload()\n\n      }, this))[\"catch\"](function () {\n        return alert(\"You are not able to do that\");\n      });\n    },\n    doOfficer: function doOfficer() {\n      var _this5 = this;\n\n      fetch(\"/guilds/do_officer/\" + this.model.id).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (res) {\n        alert('Success! User ' + _this5.model.nickname + ' became an officer!');\n        curr_user.fetch();\n        _this5.model.is_officer = true;\n\n        _this5.model.save(); // this.view.GuildCard.render()\n\n\n        _this5.render(); // window.location.reload()\n\n      }, this))[\"catch\"](function () {\n        return alert(\"You are not able to do that\");\n      });\n    },\n    doOwner: function doOwner() {\n      var _this6 = this;\n\n      fetch(\"/guilds/do_owner/\" + this.model.id).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (res) {\n        alert('Success! User ' + _this6.model.nickname + ' became an owner!');\n        curr_user.fetch();\n        _this6.model.attributes.guild.owner_id = _this6.model.id;\n        _this6.view.guild.owner_id = _this6.model.id;\n\n        _this6.model.save();\n\n        _this6.view.GuildCard.render();\n\n        _this6.parent.collection.fetch(); // this.view.MemberCol.fetch()\n\n\n        _this6.render(); // window.location.reload()\n\n      }, this))[\"catch\"](function () {\n        return alert(\"You are not able to do that\");\n      });\n    },\n    remove: function remove() {\n      this.$el.remove();\n    }\n  }); // -----------------------------------------\n  // GUILD          MODEL LIST VIEW\n  // -----------------------------------------\n\n  App.Views.GuildListEl = Backbone.View.extend({\n    tagName: 'a',\n    className: 'list-group-item list-group-item-action',\n    templateList: _.template($(\"#GuildListElTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.view = data.view;\n      this.model.on('destroy', this.remove, this);\n    },\n    events: {\n      'click #GuildNameList': 'showCard'\n    },\n    render: function render() {\n      this.$el.attr({\n        'data-bs-toggle': \"list\"\n      });\n      this.$el.css({\n        \"padding\": \"0px\"\n      });\n      if (curr_user.attributes.guild_id == this.model.id) this.$el.attr({\n        'id': \"usersguild\"\n      });\n      var template = this.templateList(this.model);\n      this.$el.append(template);\n      return this;\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    showCard: function showCard() {\n      $('#GuildContent').html(\"\");\n      this.view.GuildCard.render();\n    }\n  }); // -----------------------------------------\n  // GUILD          MODEL CARD VIEW\n  // -----------------------------------------\n\n  App.Views.GuildCard = Backbone.View.extend({\n    templateCard: _.template($(\"#GuildCardTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.view = data.view;\n      this.model.on('destroy', this.remove, this);\n      this.model.on('change', this.render, this);\n    },\n    events: {\n      'click #GuildCardMembers': 'renderMemberList',\n      'click #GuildCardOfficers': 'renderOfficerList',\n      'click #GuildCardWars': 'renderWarList'\n    },\n    remove: function remove() {\n      this.$el.remove();\n    },\n    render: function render() {\n      var _this7 = this;\n\n      fetch(\"/get_owner_nick/\" + this.model.id).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (owner) {\n        return _this7.renderCard(owner);\n      }, this));\n      return this;\n    },\n    renderCard: function renderCard(owner) {\n      window.current_guild_id = this.model.id;\n      this.model.owner_nickname = owner.nickname;\n      var template = this.templateCard(this.model);\n      this.$el.html(template);\n      $('#GuildCard').html(this.el);\n      this.renderButtons();\n    },\n    renderButtons: function renderButtons() {\n      this.view.newGuildCardBtn({\n        model: this.model\n      });\n      this.view.GuildCardBtn.render();\n    },\n    renderMemberList: function renderMemberList() {\n      var _this8 = this;\n\n      if (!this.view.GuildMemberList) {\n        this.view.newGuildMemberList({\n          model: this.model\n        });\n        this.view.GuildMemberList.collection.fetch().then(function () {\n          return _this8.view.GuildMemberList.render();\n        });\n      } else {\n        this.view.GuildMemberList.collection.fetch().then(function () {\n          return _this8.view.GuildMemberList.render();\n        });\n      }\n    },\n    renderOfficerList: function renderOfficerList() {\n      var _this9 = this;\n\n      if (!this.view.GuildOfficerList) {\n        this.view.newGuildOfficerList({\n          model: this.model\n        });\n        this.view.GuildOfficerList.collection.fetch().then(function () {\n          return _this9.view.GuildOfficerList.render();\n        });\n      } else {\n        this.view.GuildOfficerList.collection.fetch().then(function () {\n          return _this9.view.GuildOfficerList.render();\n        });\n      }\n    },\n    renderWarList: function renderWarList() {\n      var _this10 = this;\n\n      if (!this.view.GuildWarList) this.view.newGuildWarList({\n        model: this.model\n      });else this.view.GuildWarList.collection.fetch().then(function () {\n        return _this10.view.GuildWarList.render();\n      });\n    }\n  }); // -----------------------------------------\n  // GUILD          MODEL CARD BUTTON VIEW\n  // -----------------------------------------\n\n  App.Views.GuildCardBtn = Backbone.View.extend({\n    templateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n    templateJoinBtn: _.template($(\"#GuildJoinBtnTemplate\").html()),\n    templateLeaveBtn: _.template($(\"#GuildLeaveBtnTemplate\").html()),\n    templateEditeBtn: _.template($(\"#GuildEditBtnTemplate\").html()),\n    templateEdite: _.template($(\"#GuildEditTemplate\").html()),\n    templateWarBtn: _.template($(\"#GuildWarBtnTemplate\").html()),\n    initialize: function initialize(data) {\n      this.model = data.model;\n      this.view = data.view;\n    },\n    render: function render() {\n      if (curr_user.attributes.id == this.model.owner_id) {\n        this.$el.html(this.templateEditeBtn);\n        this.$el.append(this.templateLeaveBtn);\n        this.$el.append(this.templateDeleteBtn);\n      } else if (!curr_user.attributes.guild_id && (curr_user.is_admin || curr_user.is_moderator)) this.$el.html(this.templateJoinBtn);else if (curr_user.attributes.guild_id == this.model.id) this.$el.html(this.templateLeaveBtn);else if (curr_user.attributes.guild_id != this.model.id && (curr_user.attributes.is_officer || curr_user.attributes.guild && curr_user.attributes.guild.owner_id == curr_user.attributes.id)) this.$el.html(this.templateWarBtn);else this.$el.html(\"\");\n\n      $('#GuildCardBtn').html(this.el);\n    },\n    events: {\n      'click #DelGuildBtn': 'deleteGuild',\n      'click #JoinGuildBtn': 'joinGuild',\n      'click #LeaveGuildBtn': 'leaveGuild',\n      'click #EditGuildBtn': 'editGuild',\n      'click #WarGuildBtn': 'warGuild'\n    },\n    deleteGuild: function deleteGuild() {\n      // alert(\"DELETE\");\n      if (confirm('Are you sure you want to DELETE the guild?') == false) return;\n      var promise = this.model.destroy([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function () {\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n        $('#GuildContent').html(\"\");\n      }, this));\n      curr_user.fetch(); // curr_user.attributes.guild_id = null\n    },\n    joinGuild: function joinGuild() {\n      var _this11 = this;\n\n      fetch(\"/guilds/join\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }) // .then(res => res.error ? Promise.reject(res) : res.json())\n      .then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function () {\n        alert('You joined guild ' + _this11.model.name + '!');\n        curr_user.attributes.guild_id = _this11.model.id;\n\n        _this11.render();\n\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n        $('#GuildContent').html(\"\");\n\n        _this11.view.GuildListEl.$el.attr({\n          'id': \"usersguild\"\n        });\n\n        curr_user.fetch();\n      }, this));\n      return this;\n    },\n    leaveGuild: function leaveGuild() {\n      var _this12 = this;\n\n      fetch(\"/guilds/exit\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.model)\n      }).then(function (res) {\n        return res.ok ? res.json() : Promise.reject(res);\n      }).then(_.bind(function (response) {\n        alert('You left guild ' + _this12.model.name + '!');\n        curr_user.attributes.guild_id = null;\n        if (response == 0) _this12.model.destroy();else {\n          _this12.model.owner_id = response.id;\n\n          _this12.render();\n\n          _this12.view.GuildCard.render();\n\n          _this12.view.GuildListEl.$el.attr({\n            'id': \"\"\n          });\n        }\n        $('#GuildForm').css({\n          \"display\": \"block\"\n        });\n        $('#GuildContent').html(\"\");\n        curr_user.fetch();\n      }, this));\n      return this;\n    },\n    editGuild: function editGuild() {\n      this.$el.html(this.templateEdite);\n      $('#GuildContent').html(this.el);\n    },\n    warGuild: function warGuild() {\n      warView = new App.Views.FormWar({\n        guild2: this.model.name\n      });\n      warView.render();\n    }\n  });\n  App.Views.FormWar = Backbone.View.extend({\n    template: _.template($(\"#WarCreateTemplate\").html()),\n    initialize: function initialize(data) {\n      this.guild2 = data.guild2;\n      this.$el.html(this.template());\n      $(\"#GuildContent\").html(this.el);\n    },\n    events: {\n      'submit': 'submit'\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var war = {\n        guild2: this.guild2,\n        date_start: $(e.currentTarget).find('input[id=formWarDateStart]').val(),\n        time_start: $(e.currentTarget).find('input[id=formWarTimeStart]').val(),\n        date_end: $(e.currentTarget).find('input[id=formWarDateEnd]').val(),\n        time_end: $(e.currentTarget).find('input[id=formWarTimeEnd]').val(),\n        color: $(e.currentTarget).find('input[name=\"radioColor\"]:checked').val(),\n        boost: $('#AddonBoost').is(':checked') ? $('#AddonBoost').val() : '',\n        prize: $(e.currentTarget).find('input[id=formPrize]').val()\n      };\n      if (war.prize == '') war.prize = 0;\n      fetch(\"/wars\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(war)\n      }).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else alert('You successfully sent an invitation to a war!');\n      }, this));\n    }\n  }); // -----------------------------------------\n  // GUILD          COLLECTION VIEW\n  // -----------------------------------------\n\n  App.Views.Guilds = Backbone.View.extend({\n    className: 'list-group',\n    initialize: function initialize() {\n      this.collection.on('add', this.addOne, this);\n      this.collection.on('change', this.addOne, this);\n      this.render();\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $('#GuildList').html(this.el);\n      return this;\n    },\n    addOne: function addOne(guild) {\n      var guildView = new App.Views.AllGuildViews({\n        model: guild\n      });\n      this.$el.append(guildView.GuildListEl.render().el);\n    }\n  }); // -----------------------------------------\n  // FORM         CREATING GUILD FORM VIEW\n  // -----------------------------------------\n\n  App.Views.NewGuild = Backbone.View.extend({\n    template: _.template($(\"#GuildFormTemplate\").html()),\n    events: {\n      'submit': 'submit'\n    },\n    render: function render() {\n      this.$el.html(this.template);\n      $('#GuildForm').html(this.el);\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      var guild = {\n        name: $(e.currentTarget).find('input[id=guildFormName]').val(),\n        anagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n      };\n      new_guild = new App.Models.Guild(guild);\n      var promise = new_guild.save([], {\n        dataType: \"text\"\n      });\n      $.when(promise).done(_.bind(function (data) {\n        alert('success');\n        this.collection.fetch();\n        $('#GuildForm').css({\n          \"display\": \"none\"\n        });\n        $('#GuildCard').html(\"\");\n        $('#GuildContent').html(\"\");\n        curr_user.attributes.guild_id = new_guild.id;\n      }, this));\n      $.when(promise).fail(function (resp) {\n        alert(resp.responseText);\n      });\n    }\n  });\n  App.Models.CurrentUser = Backbone.Model.extend({\n    url: \"/get_curr_user\",\n    initialize: function initialize() {\n      this.fetch();\n    }\n  });\n  App.Views.Page = Backbone.View.extend({\n    initialize: function initialize(data) {\n      this.curr_user = data.curr_user;\n      this.curr_user.on('sync', this.render(), this);\n    },\n    render: function render() {\n      window.curr_user = this.curr_user;\n\n      if (!this.curr_user.get(\"is_banned\")) {\n        col = new App.Collections.Guild();\n        form = new App.Views.NewGuild({\n          collection: col\n        });\n        form.render();\n        guilds_view = new App.Views.Guilds({\n          collection: col\n        });\n      } else $(\".content\").html(\"<h3>You account was blocked by administrator</h3>\");\n    }\n  }); // -----------------------------------------\n  // MAIN\n  // -----------------------------------------\n\n  curr_user = new App.Models.CurrentUser();\n  page = new App.Views.Page({\n    curr_user: curr_user\n  });\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/guilds.js"],"names":["$","window","App","Models","Views","Collections","Router","AllGuildViews","Backbone","View","extend","initialize","data","newGuildListEl","newGuildCard","guild_id","model","id","guild","GuildListEl","view","GuildCard","newGuildCardBtn","GuildCardBtn","newGuildMemberList","MemberCol","GuildMember","GuildMemberList","GuildMembers","collection","newGuildOfficerList","GuildOfficerList","GuildOfficers","newGuildWarList","WarCol","GuildWar","GuildWarList","GuildWars","Model","urlRoot","Collection","url","fetch","Guild","curr_guild","name","logo","anagram","score","owner_id","created_at","updated_at","rating","user","nickname","avatar","is_officer","className","on","addOne","render","$el","html","each","el","userView","append","curr_user","attributes","is_admin","is_moderator","userViewBtn","GuildMemberBtn","parent","template","_","war","is_accepted","warView","warViewBtn","GuildWarBtn","tagName","templateList","start_date","Date","start","end_date","end","addon_type","addons","addon3","addon1","addon2","guild1","enemy","guild2","attr","template_accept","template_decline","template_vaiting","remove","events","role","declineWar","then","res","json","bind","error","alert","acceptWar","template_exit","template_officer","template_unofficer","template_owner","exitMember","ok","Promise","reject","destroy","undoOfficer","save","doOfficer","doOwner","css","showCard","templateCard","owner","renderCard","current_guild_id","owner_nickname","renderButtons","renderMemberList","renderOfficerList","renderWarList","templateDeleteBtn","templateJoinBtn","templateLeaveBtn","templateEditeBtn","templateEdite","templateWarBtn","deleteGuild","confirm","promise","dataType","when","done","joinGuild","method","headers","body","JSON","stringify","leaveGuild","response","editGuild","warGuild","FormWar","submit","e","preventDefault","date_start","currentTarget","find","val","time_start","date_end","time_end","color","boost","is","prize","Guilds","guildView","NewGuild","new_guild","fail","resp","responseText","CurrentUser","Page","get","col","form","guilds_view","page"],"mappings":"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","sourcesContent":["/*\n** -------------------------------------------------------\n** VIEWS of all guilds: (App.Views.)\n**   - Guilds\n**\n** VIEWS of a single guild: (App.Views.)\n**   - AllGuildViews:\n**        - GuildListEl\n**        - GuildCard\n**        - GuildCardBtn\n**        - GuildMemberList\n// ** -------------------------------------------------------\n*/\n\n// const TOKEN = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {},\n\t\tRouter: {}\n\t};\n\n\tApp.Views.AllGuildViews = Backbone.View.extend({\n\t\tinitialize: function (data) {\n\t\t\tthis.newGuildListEl(data);\n\t\t\tthis.newGuildCard(data);\n\t\t\tthis.guild_id = data.model.id;\n\t\t\tthis.guild = data.model;\n\t\t},\n\t\tnewGuildListEl: function (data) {\n\t\t\tthis.GuildListEl = new App.Views.GuildListEl({ model: data.model, view: this });\n\t\t},\n\t\tnewGuildCard: function (data) {\n\t\t\tthis.GuildCard = new App.Views.GuildCard({ model: data.model, view: this });\n\t\t},\n\t\tnewGuildCardBtn: function (data) {\n\t\t\tthis.GuildCardBtn = new App.Views.GuildCardBtn({ model: data.model, view: this });\n\t\t},\n\t\tnewGuildMemberList: function (data) {\n\t\t\tif (!this.MemberCol)\n\t\t\t\tthis.MemberCol = new App.Collections.GuildMember({ guild: data.model.id })\n\t\t\tthis.GuildMemberList = new App.Views.GuildMembers({ collection: this.MemberCol, view: this })\n\t\t},\n\t\tnewGuildOfficerList: function (data) {\n\t\t\tif (!this.MemberCol)\n\t\t\t\tthis.MemberCol = new App.Collections.GuildMember({ guild: data.model.id })\n\t\t\tthis.GuildOfficerList = new App.Views.GuildOfficers({ collection: this.MemberCol, view: this })\n\t\t},\n\t\tnewGuildWarList: function (data) {\n\t\t\tthis.WarCol = new App.Collections.GuildWar({ guild: data.model.id })\n\t\t\tthis.GuildWarList = new App.Views.GuildWars({ collection: this.WarCol, view: this, guild: data.model.id })\n\t\t}\n\t})\n\n\t// ------------------------------------\n\t// WAR      MODEL and COLLECTION\n\t// ------------------------------------\n\tApp.Models.GuildWar = Backbone.Model.extend({\n\t\turlRoot: \"/wars/guild_wars/\",\n\t});\n\n\tApp.Collections.GuildWar = Backbone.Collection.extend({\n\t\tmodel: App.Models.GuildWar,\n\t\turl: \"/wars/guild_wars/\",\n\t\tinitialize: function (data) {\n\t\t\tthis.url += data.guild\n\t\t\tthis.fetch();\n\t\t}\n\t});\n\n\t// ------------------------------------\n\t// GUILD      MODEL and COLLECTION\n\t// ------------------------------------\n\tApp.Models.Guild = Backbone.Model.extend({\n\t\turlRoot: \"/guilds\",\n\t\tinitialize: function (curr_guild) {\n\t\t\tthis.id = curr_guild.id;\n\t\t\tthis.name = curr_guild.name;\n\t\t\tthis.logo = curr_guild.logo;\n\t\t\tthis.anagram = curr_guild.anagram;\n\t\t\tthis.score = curr_guild.score;\n\t\t\tthis.owner_id = curr_guild.owner_id;\n\t\t\tthis.created_at = curr_guild.created_at;\n\t\t\tthis.updated_at = curr_guild.updated_at;\n\t\t\tthis.rating = curr_guild.rating;\n\t\t}\n\t});\n\n\tApp.Collections.Guild = Backbone.Collection.extend({\n\t\tmodel: App.Models.Guild,\n\t\turl: \"/guilds\",\n\t\tinitialize: function () {\n\t\t\tthis.fetch();\n\t\t}\n\t});\n\t\n\n\t// -----------------------------------------\n\t// GUILD_MEMBERS     MODEL and COLLECTION\n\t// -----------------------------------------\n\tApp.Models.GuildMember = Backbone.Model.extend({\n\t\turlRoot: \"/get_guild_users\",\n\t\tinitialize: function (user) {\n\t\t\tthis.nickname = user.nickname;\n\t\t\tthis.avatar = user.avatar;\n\t\t\tthis.is_officer = user.is_officer;\n\t\t}\n\t})\n\n\tApp.Collections.GuildMember = Backbone.Collection.extend({\n\t\tmodel: App.Models.GuildMember,\n\t\turl: \"/get_guild_users\",\n\t\tinitialize: function (data) {\n\t\t\tthis.url += ('/' + data.guild)\n\t\t\tthis.fetch();\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD_MEMBERS          COLLECTION VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildMembers = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.view = data.view;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('sync', this.render, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(\"\")\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildContent').html(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (user) {\n\t\t\tif (user.nickname) {\n\t\t\t\tvar userView = new App.Views.GuildMember({ model: user });\n\t\t\t\tthis.$el.append(userView.render().el);\n\t\t\t\tif ((curr_user.attributes.is_admin == true || curr_user.attributes.is_moderator == true)\n\t\t\t\t\t|| (curr_user.attributes.is_officer && this.view.guild_id == curr_user.attributes.guild_id)\n\t\t\t\t\t|| curr_user.attributes.id == this.view.guild.owner_id) {\n\t\t\t\t\tvar userViewBtn = new App.Views.GuildMemberBtn({ model: user, view: this.view, parent: this});\n\t\t\t\t\tthis.$el.append(userViewBtn.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\t// -----------------------------------------\n\t// GUILD_WARS         COLLECTION VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildWars = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildWarListHeaderTemplate\").html()),\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.view = data.view;\n\t\t\tthis.guild_id = data.guild\n\n\t\t\tthis.collection.on('sync', this.render, this);\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template())\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildContent').html(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (war) {\n\t\t\t// Обычному члену гильдии показываются только принятые войны\n\t\t\tif (war.attributes.is_accepted == true || curr_user.attributes.id == this.view.guild.owner_id ||\n\t\t\t\t(curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id)) {\n\t\t\t\tvar warView = new App.Views.GuildWar({ model: war.attributes, guild_id: this.guild_id });\n\t\t\t\tthis.$el.append(warView.render().el);\n\n\t\t\t\tif (war.attributes.is_accepted == false &&\n\t\t\t\t\t(curr_user.attributes.id == this.view.guild.owner_id ||\n\t\t\t\t\t\t(curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id))) {\n\t\t\t\t\tvar warViewBtn = new App.Views.GuildWarBtn({ model: war, view: this.view, parent: this, warView: warView });\n\t\t\t\t\tthis.$el.append(warViewBtn.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\t// -----------------------------------------\n\t// GUILD_WARS          MODEL VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildWar = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item',\n\t\ttemplateList: _.template($(\"#GuildWarListTemplate\").html()),\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model\n\t\t\tthis.guild_id = data.guild_id\n\t\t},\n\t\trender: function () {\n\t\t\t// this.model.start_date = new Date(this.model.start).toUTCString()\n\t\t\tthis.model.start_date = new Date(this.model.start)\n\t\t\tthis.model.end_date = new Date(this.model.end)\n\t\t\tthis.model.addon_type = ''\n\t\t\tif (this.model.addons.addon3 == true)\n\t\t\t\tthis.model.addon_type = 'boost '\n\t\t\tif (this.model.addons.addon1 == true)\n\t\t\t\tthis.model.addon_type += 'disco'\n\t\t\telse if (this.model.addons.addon2 == true)\n\t\t\t\tthis.model.addon_type += 'epilepsy'\n\t\t\tif (this.model.addon_type == '')\n\t\t\t\tthis.model.addon_type = 'none'\n\t\t\t\n\t\t\t// console.log(this.model.start_date.day)\n\t\t\tif (this.model.guild1.id != this.guild_id)\n\t\t\t\tthis.model.enemy = this.model.guild1\n\t\t\telse\n\t\t\t\tthis.model.enemy = this.model.guild2\n\t\t\tthis.$el.attr({ 'href': (\"/wars/\" + this.model.id) });\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\n\t\t\treturn this;\n\t\t}\n\t})\n\n\tApp.Views.GuildWarBtn = Backbone.View.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'list-group-item',\n\n\t\ttemplate_accept:\t_.template($(\"#AcceptWarBtnTemplate\").html()),\n\t\ttemplate_decline:\t_.template($(\"#DeclineWarBtnTemplate\").html()),\n\t\ttemplate_vaiting:\t_.template($(\"#VaitingWarBtnTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model\n\t\t\tthis.view = data.view\n\t\t\tthis.parent = data.parent\n\t\t\tthis.warView = data.warView\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t\tthis.model.on('sync', this.render, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #AcceptWarBtn':\t'acceptWar',\n\t\t\t'click #DeclineWarBtn':\t'declineWar',\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(\"\")\n\t\t\tthis.$el.attr({ 'style': 'text-align: center;' });\n\n\t\t\tif (curr_user.attributes.id == this.view.guild.owner_id)\n\t\t\t\tvar role = 'owner'\n\t\t\telse if (curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id)\n\t\t\t\tvar role = 'officer'\n\n\t\t\tif (role == 'owner' || role == 'officer') {\n\t\t\t\tif (this.model.attributes.is_accepted == false && this.model.attributes.guild1.id == this.view.guild_id)\n\t\t\t\t\tthis.$el.append(this.template_vaiting);\n\t\t\t\telse {\n\t\t\t\t\tthis.$el.append(this.template_accept);\n\t\t\t\t\tthis.$el.append(this.template_decline);\n\t\t\t\t}\n\t\t\t\t// this.$el.append(this.template_accept);\n\t\t\t\t// this.$el.append(this.template_decline);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tdeclineWar: function () {\n\t\t\tfetch(\"/wars/decline/\" + this.model.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(_.bind((res) => {\n\t\t\t\tif (res.error)\n\t\t\t\t\talert(res.error)\n\t\t\t\telse {\n\t\t\t\t\talert('You successfully declined a war!')\n\t\t\t\t\tthis.$el.remove();\n\t\t\t\t\tthis.warView.$el.remove()\n\t\t\t\t}\n\t\t\t}, this))\n\t\t},\n\t\tacceptWar: function () {\n\t\t\tfetch(\"/wars/accept/\" + this.model.id)\n\t\t\t.then(res => res.json())\n\t\t\t.then(_.bind((res) => {\n\t\t\t\tif (res.error)\n\t\t\t\t\talert(res.error)\n\t\t\t\telse {\n\t\t\t\t\talert('You successfully accepted a war!')\n\t\t\t\t\tthis.$el.remove()\n\t\t\t\t\t// this.parent.render()\n\t\t\t\t}\n\t\t\t}, this))\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t}\n\t})\n\n\t// -----------------------------------------\n\t// GUILD_OFFICERS         COLLECTION VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildOfficers = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.view = data.view;\n\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.collection.on('sync', this.render, this);\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(\"\")\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildContent').html(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (user) {\n\t\t\tif (user.nickname && user.is_officer) {\n\t\t\t\tvar userView = new App.Views.GuildMember({ model: user });\n\t\t\t\tthis.$el.append(userView.render().el);\n\t\t\t\tif ((curr_user.attributes.is_admin == true || curr_user.attributes.is_moderator == true)\n\t\t\t\t\t|| curr_user.attributes.id == this.view.guild.owner_id) {\n\t\t\t\t\tvar userViewBtn = new App.Views.GuildMemberBtn({ model: user, view: this.view, parent: this});\n\t\t\t\t\tthis.$el.append(userViewBtn.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD_MEMBERS          MODEL VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildMember = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item',\n\t\ttemplateList: _.template($(\"#GuildMemberListTemplate\").html()),\n\n\t\tinitialize: function () {\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({ 'href': (\"/profile/\" + this.model.id) });\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t}\n\t})\n\n\tApp.Views.GuildMemberBtn = Backbone.View.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'list-group-item',\n\n\t\ttemplate_exit:\t\t_.template($(\"#AdminExitMemberBtnTemplate\").html()),\n\t\ttemplate_officer:\t_.template($(\"#AdminDoOfficerBtnTemplate\").html()),\n\t\ttemplate_unofficer: _.template($(\"#AdminUndoOfficerBtnTemplate\").html()),\n\t\ttemplate_owner:\t\t_.template($(\"#AdminDoOwnerBtnTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model\n\t\t\tthis.view = data.view\n\t\t\tthis.parent = data.parent\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t\tthis.model.on('sync', this.render, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #AdminExitMember':\t'exitMember',\n\t\t\t'click #AdminDoOfficer':\t'doOfficer',\n\t\t\t'click #AdminUndoOfficer':\t'undoOfficer',\n\t\t\t'click #AdminDoOwner':\t\t'doOwner'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(\"\")\n\t\t\tthis.$el.attr({ 'style': 'text-align: center;' });\n\n\t\t\tif ((curr_user.attributes.is_admin == true || curr_user.attributes.is_moderator == true) ||\n\t\t\t\tcurr_user.attributes.id == this.view.guild.owner_id)\n\t\t\t\tvar role = 'owner-admin'\n\t\t\telse if (curr_user.attributes.is_officer == true && curr_user.attributes.guild_id == this.view.guild_id)\n\t\t\t\tvar role = 'officer'\n\n\t\t\tif ((role == 'owner-admin'\n\t\t\t\t|| (role == 'officer' && this.model.is_officer == false && this.model.id != this.model.attributes.guild.owner_id))\n\t\t\t\t&& this.model.id != curr_user.attributes.id) {\n\t\t\t\tvar template_exit = this.template_exit(this.model);\n\t\t\t\tthis.$el.append(template_exit);\n\t\t\t}\n\n\t\t\tif (this.model.is_officer != true) {\n\t\t\t\tvar template_officer = this.template_officer(this.model);\n\t\t\t\tthis.$el.append(template_officer);\n\t\t\t}\n\t\t\telse if (role == 'owner-admin'\n\t\t\t\t\t|| (role == 'officer' && this.model.id == curr_user.attributes.id)) {\n\t\t\t\tvar template_unofficer = this.template_unofficer(this.model);\n\t\t\t\tthis.$el.append(template_unofficer);\n\t\t\t}\n\n\t\t\tif (this.model.id != this.model.attributes.guild.owner_id && role == 'owner-admin') {\n\t\t\t\tvar template_owner = this.template_owner(this.model);\n\t\t\t\tthis.$el.append(template_owner);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\texitMember: function () {\n\t\t\tfetch(\"/guilds/exit_user/\" + this.model.id)\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(res => {\n\t\t\t\talert('Success! User ' + this.model.nickname + ' removed from guild!')\n\t\t\t\tif (res != 0) {\n\t\t\t\t\tthis.view.GuildCard.render()\n\t\t\t\t\tthis.parent.collection.fetch()\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this.parent.el).html(\"\")\n\t\t\t\t\tthis.view.GuildCard.model.destroy()\n\t\t\t\t}\n\t\t\t}, this))\n\t\t\t.catch(() => alert(\"You are not able to do that\"))\n\t\t},\n\t\tundoOfficer: function () {\n\t\t\tfetch(\"/guilds/undo_officer/\" + this.model.id)\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(res => {\n\t\t\t\talert('Success! User ' + this.model.nickname + ' is not an officer anymore!')\n\t\t\t\tcurr_user.fetch()\n\t\t\t\tthis.model.is_officer = false\n\t\t\t\tthis.model.save()\n\t\t\t\t// this.view.GuildCard.render()\n\t\t\t\tthis.render()\n\t\t\t\t// window.location.reload()\n\t\t\t}, this))\n\t\t\t.catch(() => alert(\"You are not able to do that\"))\n\t\t},\n\t\tdoOfficer: function () {\n\t\t\tfetch(\"/guilds/do_officer/\" + this.model.id)\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(res => {\n\t\t\t\talert('Success! User ' + this.model.nickname + ' became an officer!')\n\t\t\t\tcurr_user.fetch()\n\t\t\t\tthis.model.is_officer = true\n\t\t\t\tthis.model.save()\n\t\t\t\t// this.view.GuildCard.render()\n\t\t\t\tthis.render()\n\t\t\t\t// window.location.reload()\n\t\t\t}, this))\n\t\t\t.catch(() => alert(\"You are not able to do that\"))\n\t\t},\n\t\tdoOwner: function () {\n\t\t\tfetch(\"/guilds/do_owner/\" + this.model.id)\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(res => {\n\t\t\t\talert('Success! User ' + this.model.nickname + ' became an owner!')\n\t\t\t\tcurr_user.fetch()\n\t\t\t\tthis.model.attributes.guild.owner_id = this.model.id\n\t\t\t\tthis.view.guild.owner_id = this.model.id\n\t\t\t\tthis.model.save()\n\t\t\t\tthis.view.GuildCard.render()\n\t\t\t\tthis.parent.collection.fetch()\n\t\t\t\t// this.view.MemberCol.fetch()\n\t\t\t\tthis.render()\n\t\t\t\t// window.location.reload()\n\t\t\t}, this))\n\t\t\t.catch(() => alert(\"You are not able to do that\"))\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          MODEL LIST VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildListEl = Backbone.View.extend({\n\t\ttagName: 'a',\n\t\tclassName: 'list-group-item list-group-item-action',\n\t\ttemplateList: _.template($(\"#GuildListElTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.view = data.view;\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildNameList' : 'showCard'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.attr({'data-bs-toggle': \"list\"});\n\t\t\tthis.$el.css({ \"padding\": \"0px\" })\n\t\t\tif (curr_user.attributes.guild_id == this.model.id)\n\t\t\t\tthis.$el.attr({ 'id': \"usersguild\" });\n\t\t\tvar template = this.templateList(this.model);\n\t\t\tthis.$el.append(template);\n\n\t\t\treturn this;\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\tshowCard: function () {\n\t\t\t$('#GuildContent').html(\"\");\n\t\t\tthis.view.GuildCard.render();\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          MODEL CARD VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildCard = Backbone.View.extend({\n\t\ttemplateCard: _.template($(\"#GuildCardTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.view = data.view;\n\n\t\t\tthis.model.on('destroy', this.remove, this);\n\t\t\tthis.model.on('change', this.render, this);\n\t\t},\n\t\tevents: {\n\t\t\t'click #GuildCardMembers': \t'renderMemberList',\n\t\t\t'click #GuildCardOfficers': 'renderOfficerList',\n\t\t\t'click #GuildCardWars':\t\t'renderWarList',\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.$el.remove();\n\t\t},\n\t\trender: function () {\n\t\t\tfetch(\"/get_owner_nick/\" + this.model.id)\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(owner => this.renderCard(owner), this))\n\t\t\treturn this;\n\t\t},\n\t\trenderCard: function (owner) {\n\t\t\twindow.current_guild_id = this.model.id;\n\t\t\tthis.model.owner_nickname = owner.nickname;\n\t\t\tvar template = this.templateCard(this.model);\n\t\t\tthis.$el.html(template);\n\t\t\t$('#GuildCard').html(this.el);\n\t\t\tthis.renderButtons();\n\t\t},\n\t\trenderButtons: function () {\n\t\t\tthis.view.newGuildCardBtn({ model: this.model });\n\t\t\tthis.view.GuildCardBtn.render();\n\t\t},\n\t\trenderMemberList: function () {\n\t\t\tif (!this.view.GuildMemberList) {\n\t\t\t\tthis.view.newGuildMemberList({ model: this.model })\n\t\t\t\tthis.view.GuildMemberList.collection.fetch()\n\t\t\t\t\t.then(() => this.view.GuildMemberList.render())\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.view.GuildMemberList.collection.fetch()\n\t\t\t\t.then(() => this.view.GuildMemberList.render())\n\t\t\t}\n\t\t},\n\t\trenderOfficerList: function () {\n\t\t\tif (!this.view.GuildOfficerList) {\n\t\t\t\tthis.view.newGuildOfficerList({ model: this.model })\n\t\t\t\tthis.view.GuildOfficerList.collection.fetch()\n\t\t\t\t\t.then(() => this.view.GuildOfficerList.render())\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.view.GuildOfficerList.collection.fetch()\n\t\t\t\t.then(() => this.view.GuildOfficerList.render())\n\t\t\t}\n\t\t},\n\t\trenderWarList: function () {\n\t\t\tif (!this.view.GuildWarList)\n\t\t\t\tthis.view.newGuildWarList({ model: this.model })\n\t\t\telse\n\t\t\t\tthis.view.GuildWarList.collection.fetch()\n\t\t\t\t.then(() => this.view.GuildWarList.render())\n\t\t}\n\t})\n\n\n\t// -----------------------------------------\n\t// GUILD          MODEL CARD BUTTON VIEW\n\t// -----------------------------------------\n\tApp.Views.GuildCardBtn = Backbone.View.extend({\n\n\t\ttemplateDeleteBtn: _.template($(\"#GuildDelBtnTemplate\").html()),\n\t\ttemplateJoinBtn:   _.template($(\"#GuildJoinBtnTemplate\").html()),\n\t\ttemplateLeaveBtn:  _.template($(\"#GuildLeaveBtnTemplate\").html()),\n\t\ttemplateEditeBtn:  _.template($(\"#GuildEditBtnTemplate\").html()),\n\t\ttemplateEdite:     _.template($(\"#GuildEditTemplate\").html()),\n\t\ttemplateWarBtn:    _.template($(\"#GuildWarBtnTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.model = data.model;\n\t\t\tthis.view = data.view;\n\t\t},\n\t\trender: function () {\n\t\t\tif (curr_user.attributes.id == this.model.owner_id) {\n\t\t\t\tthis.$el.html(this.templateEditeBtn)\n\t\t\t\tthis.$el.append(this.templateLeaveBtn)\n\t\t\t\tthis.$el.append(this.templateDeleteBtn)\n\t\t\t}\n\t\t\telse if (!curr_user.attributes.guild_id && (curr_user.is_admin || curr_user.is_moderator))\n\t\t\t\tthis.$el.html(this.templateJoinBtn)\n\t\t\telse if (curr_user.attributes.guild_id == this.model.id)\n\t\t\t\tthis.$el.html(this.templateLeaveBtn)\n\t\t\telse if (curr_user.attributes.guild_id != this.model.id &&\n\t\t\t\t\t(curr_user.attributes.is_officer ||\n\t\t\t\t\t\t(curr_user.attributes.guild && curr_user.attributes.guild.owner_id == curr_user.attributes.id)))\n\t\t\t\tthis.$el.html(this.templateWarBtn)\n\t\t\telse\n\t\t\t\tthis.$el.html(\"\")\n\t\t\t$('#GuildCardBtn').html(this.el);\n\t\t},\n\t\tevents: {\n\t\t\t'click #DelGuildBtn':   'deleteGuild',\n\t\t\t'click #JoinGuildBtn':  'joinGuild',\n\t\t\t'click #LeaveGuildBtn': 'leaveGuild',\n\t\t\t'click #EditGuildBtn':  'editGuild',\n\t\t\t'click #WarGuildBtn':   'warGuild',\n\t\t},\n\t\tdeleteGuild: function () {\n\t\t\t// alert(\"DELETE\");\n\t\t\tif (confirm('Are you sure you want to DELETE the guild?') == false)\n\t\t\t\treturn;\n\n\t\t\tvar promise = this.model.destroy([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function () {\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" })\n\t\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\t}, this)\n\t\t\t);\n\t\t\tcurr_user.fetch()\n\t\t\t// curr_user.attributes.guild_id = null\n\t\t},\n\t\tjoinGuild: function () {\n\t\t\tfetch(\"/guilds/join\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t// .then(res => res.error ? Promise.reject(res) : res.json())\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind(() => {\n\t\t\t\talert('You joined guild ' + this.model.name + '!');\n\t\t\t\tcurr_user.attributes.guild_id = this.model.id;\n\t\t\t\tthis.render();\n\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\tthis.view.GuildListEl.$el.attr({ 'id': \"usersguild\" });\n\t\t\t\tcurr_user.fetch()\n\t\t\t}, this))\n\t\t\treturn this;\n\t\t},\n\t\tleaveGuild: function () {\n\t\t\tfetch(\"/guilds/exit\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(this.model)\n\t\t\t})\n\t\t\t.then(res => res.ok ? res.json() : Promise.reject(res))\n\t\t\t.then(_.bind((response) => {\n\t\t\t\talert('You left guild ' + this.model.name + '!');\n\t\t\t\tcurr_user.attributes.guild_id = null;\n\t\t\t\tif (response == 0)\n\t\t\t\t\tthis.model.destroy();\n\t\t\t\telse {\n\t\t\t\t\tthis.model.owner_id = response.id;\n\t\t\t\t\tthis.render();\n\t\t\t\t\tthis.view.GuildCard.render();\n\t\t\t\t\tthis.view.GuildListEl.$el.attr({ 'id': \"\" });\n\t\t\t\t}\n\t\t\t\t$('#GuildForm').css({ \"display\": \"block\" });\n\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\tcurr_user.fetch()\n\t\t\t}, this))\n\t\t\treturn this;\n\t\t},\n\t\teditGuild: function () {\n\t\t\tthis.$el.html(this.templateEdite);\n\t\t\t$('#GuildContent').html(this.el);\n\t\t},\n\t\twarGuild: function () {\n\t\t\twarView = new App.Views.FormWar({ guild2: this.model.name })\n\t\t\twarView.render()\n\t\t}\n\t})\n\n\n\tApp.Views.FormWar = Backbone.View.extend({\n\n\t\ttemplate: _.template($(\"#WarCreateTemplate\").html()),\n\n\t\tinitialize: function (data) {\n\t\t\tthis.guild2 = data.guild2\n\t\t\tthis.$el.html(this.template())\n\t\t\t$(\"#GuildContent\").html(this.el)\n\t\t},\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet war = {\n\t\t\t\tguild2:\tthis.guild2,\n\t\t\t\tdate_start: $(e.currentTarget).find('input[id=formWarDateStart]').val(),\n\t\t\t\ttime_start: $(e.currentTarget).find('input[id=formWarTimeStart]').val(),\n\t\t\t\tdate_end:\t$(e.currentTarget).find('input[id=formWarDateEnd]').val(),\n\t\t\t\ttime_end:\t$(e.currentTarget).find('input[id=formWarTimeEnd]').val(),\n\t\t\t\tcolor:\t\t$(e.currentTarget).find('input[name=\"radioColor\"]:checked').val(),\n\t\t\t\tboost:\t\t$('#AddonBoost').is(':checked') ? $('#AddonBoost').val() : '',\n\t\t\t\tprize:\t\t$(e.currentTarget).find('input[id=formPrize]').val(),\n\t\t\t}\n\t\t\tif (war.prize == '')\n\t\t\t\twar.prize = 0\n\t\t\tfetch(\"/wars\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(war)\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(_.bind((res) => {\n\t\t\t\t\tif (res.error)\n\t\t\t\t\t\talert(res.error)\n\t\t\t\t\telse\n\t\t\t\t\t\talert('You successfully sent an invitation to a war!')\n\t\t\t\t}, this))\n\t\t},\n\t})\n\n\t// -----------------------------------------\n\t// GUILD          COLLECTION VIEW\n\t// -----------------------------------------\n\tApp.Views.Guilds = Backbone.View.extend({\n\t\tclassName: 'list-group',\n\t\tinitialize: function () {\n\t\t\tthis.collection.on('add', this.addOne, this);\n\t\t\tthis.collection.on('change', this.addOne, this);\n\t\t\tthis.render();\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this);\n\t\t\t$('#GuildList').html(this.el);\n\t\t\treturn this;\n\t\t},\n\t\taddOne: function (guild) {\n\t\t\tvar guildView = new App.Views.AllGuildViews({ model: guild });\n\t\t\tthis.$el.append(guildView.GuildListEl.render().el);\n\t\t}\n\t});\n\n\n\t// -----------------------------------------\n\t// FORM         CREATING GUILD FORM VIEW\n\t// -----------------------------------------\n\tApp.Views.NewGuild = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#GuildFormTemplate\").html()),\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template) \n\t\t\t$('#GuildForm').html(this.el);\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tlet guild = {\n\t\t\t\tname: $(e.currentTarget).find('input[id=guildFormName]').val(),\n\t\t\t\tanagram: $(e.currentTarget).find('input[id=guildFormAnagram]').val()\n\t\t\t}\n\t\t\tnew_guild = new App.Models.Guild(guild);\n\n\t\t\tvar promise = new_guild.save([], {\n\t\t\t\tdataType: \"text\"\n\t\t\t})\n\n\t\t\t$.when(promise).done(\n\t\t\t\t_.bind(function (data) {\n    \t\t\t\talert('success');\n\t\t\t\t\tthis.collection.fetch()\n\t\t\t\t\t$('#GuildForm').css({ \"display\": \"none\" });\n\t\t\t\t\t$('#GuildCard').html(\"\");\n\t\t\t\t\t$('#GuildContent').html(\"\");\n\t\t\t\t\tcurr_user.attributes.guild_id = new_guild.id\n\t\t\t\t}, this)\n\t\t\t);\n\n\t\t\t$.when(promise).fail(function (resp) {\n\t\t\t\talert(resp.responseText);\n\t\t\t});\n\t\t},\n\n\t});\n\n\tApp.Models.CurrentUser = Backbone.Model.extend({\n\t\turl: \"/get_curr_user\",\n\t\tinitialize: function () {\n\t\t\tthis.fetch()\n\t\t}\n\t})\n\n\tApp.Views.Page = Backbone.View.extend({\n\t\tinitialize: function (data) {\n\t\t\tthis.curr_user = data.curr_user\n\t\t\tthis.curr_user.on('sync', this.render(), this)\n\t\t},\n\t\trender: function () {\n\t\t\twindow.curr_user = this.curr_user\n\t\t\tif (!this.curr_user.get(\"is_banned\")) {\n\t\t\t\tcol = new App.Collections.Guild();\n\t\t\t\tform = new App.Views.NewGuild({ collection: col });\n\t\t\t\tform.render();\n\t\t\t\tguilds_view = new App.Views.Guilds({ collection: col });\n\t\t\t}\n\t\t\telse\n\t\t\t\t$(\".content\").html(\"<h3>You account was blocked by administrator</h3>\")\n\t\t}\n\t})\n\n\t// -----------------------------------------\n\t// MAIN\n\t// -----------------------------------------\n\tcurr_user = new App.Models.CurrentUser()\n\tpage = new App.Views.Page({ curr_user: curr_user })\n}());\n"]},"metadata":{},"sourceType":"module"}