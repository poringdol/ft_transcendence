{"ast":null,"code":"var _require = require(\"underscore\"),\n    result = _require.result;\n\n$(function () {\n  window.App = {\n    Models: {},\n    Views: {},\n    Collections: {}\n  }; // -----------------------------------------\n  //  WARS       MODEL and COLLECTION\n  // -----------------------------------------\n\n  App.Models.War = Backbone.Model.extend({\n    urlRoot: \"/wars.json\",\n    initialize: function initialize() {}\n  });\n  App.Collections.War = Backbone.Collection.extend({\n    model: App.Models.War,\n    url: \"/wars.json\",\n    initialize: function initialize() {\n      this.fetch();\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                             WARS TABLE\n  // ---------------------------------------------------------------------------------------------------------------------------\n  // -----------------------------------------\n  //  VIEW OF ONE TABLE\n  // -----------------------------------------\n\n  App.Views.TableWars = Backbone.View.extend({\n    template: _.template($(\"#WarsTableTemplate\").html()),\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.type = data.type;\n      this.curr_user = data.curr_user;\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      this.$el.html(this.template({\n        type: this.type\n      }));\n      $(\"#\" + this.type + \"Wars\").html(this.el);\n      wars = new App.Views.Wars({\n        collection: this.collection,\n        type: this.type,\n        curr_user: this.curr_user\n      });\n      wars.render();\n      return this;\n    }\n  }); // -----------------------------------------\n  //  VIEW OF INNER OF ONE TABLE\n  // -----------------------------------------\n\n  App.Views.Wars = Backbone.View.extend({\n    tagName: 'tbody',\n    initialize: function initialize(data) {\n      this.collection = data.collection;\n      this.type = data.type;\n      this.curr_user = data.curr_user;\n    },\n    render: function render() {\n      this.collection.each(this.addOne, this);\n      $(\"#\" + this.type + \"WarsTable\").append(this.el);\n      return this;\n    },\n    addOne: function addOne(war) {\n      if (this.type == 'History') {\n        if (war.get('is_end') == true) {\n          var row = new App.Views.War({\n            model: war\n          });\n          this.$el.append(row.render().el);\n        }\n      } else if (this.type == 'Current') {\n        if (war.get('is_accepted') == true && war.get('is_inprogress') == true && war.get('is_end') == false) {\n          var row = new App.Views.War({\n            model: war\n          });\n          this.$el.append(row.render().el);\n        }\n      } else if (this.type == 'Planned') {\n        if (war.get('is_inprogress') == false && war.get('is_end') == false && (war.get('is_accepted') == true || this.curr_user.guild_id == war.get(\"guild2\").id && (this.curr_user.is_officer || this.curr_user.is_owner))) {\n          var row = new App.Views.War({\n            model: war\n          });\n          this.$el.append(row.render().el);\n        }\n      }\n    }\n  }); // -----------------------------------------\n  //  VIEW OF ONE ROW\n  // -----------------------------------------\n\n  App.Views.War = Backbone.View.extend({\n    template: _.template($(\"#WarsRowTemplate\").html()),\n    tagName: 'tr',\n    events: {\n      'click #AcceptWarBtn': 'acceptWar',\n      'click #DeclineWarBtn': 'declineWar'\n    },\n    render: function render() {\n      this.model.attributes.start_date = new Date(this.model.attributes.start);\n      this.model.attributes.end_date = new Date(this.model.attributes.end);\n      this.model.attributes.addon_type = '';\n      if (this.model.attributes.addons.addon3 == true) this.model.attributes.addon_type = 'boost ';\n      if (this.model.attributes.addons.addon1 == true) this.model.attributes.addon_type += 'disco';else if (this.model.attributes.addons.addon2 == true) this.model.attributes.addon_type += 'epilepsy';\n      if (this.model.attributes.addon_type == '') this.model.attributes.addon_type = 'none';\n      this.$el.html(this.template(this.model.attributes));\n\n      if (this.model.get.get('is_accepted') == false && this.curr_user.guild_id == war.get(\"guild2\").id && (this.curr_user.is_officer || this.curr_user.is_owner)) {\n        $(\"#AcceptWarBtn\").css({\n          'display': 'block'\n        });\n        $(\"#DeclineWarBtn\").css({\n          'display': 'block'\n        });\n      }\n\n      return this;\n    },\n    declineWar: function declineWar(war) {\n      var _this = this;\n\n      fetch(\"/wars/decline/\" + this.model.get(\"id\")).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else {\n          alert('You successfully declined a war!');\n\n          _this.$el.remove();\n\n          _this.warView.$el.remove();\n        }\n      }, this));\n    },\n    acceptWar: function acceptWar(war) {\n      var _this2 = this;\n\n      fetch(\"/wars/accept/\" + this.model.get(\"id\")).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else {\n          alert('You successfully accepted a war!');\n\n          _this2.$el.remove(); // this.parent.render()\n\n        }\n      }, this));\n    }\n  });\n  /*\n  ** Выпадающий список со всеми пользователями для формы создания матча\n  */\n\n  App.Models.AllGuilds = Backbone.Model.extend({\n    urlRoot: \"/guilds_list\"\n  });\n  App.Collections.AllGuilds = Backbone.Collection.extend({\n    url: \"/guilds_list\",\n    model: App.Models.AllGuilds,\n    initialize: function initialize() {\n      this.fetch();\n    }\n  });\n  App.Views.AllGuilds = Backbone.View.extend({\n    initialize: function initialize() {\n      this.collection.on('sync', this.render, this);\n    },\n    render: function render() {\n      $('#formGuild2Name').css('color', 'rgba(0, 0, 0, 0.55)');\n      $('#formGuild2Name').append(\"<option value='' disabled selected>Guildname of your opponent</option>\");\n      this.collection.each(function (it) {\n        var name = it.get(\"name\");\n        $('#formGuild2Name').append(\"<option value='\".concat(name, \"'>\").concat(name, \"</option>\"));\n      });\n      return this;\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                           WARS CREATION FORM\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  App.Views.FormWar = Backbone.View.extend({\n    template: _.template($(\"#WarCreateTemplate\").html()),\n    initialize: function initialize() {\n      this.$el.html(this.template());\n      $(\"#WarCreationForm\").html(this.el);\n    },\n    events: {\n      'submit': 'submit'\n    },\n    submit: function submit(e) {\n      e.preventDefault();\n      console.log('here');\n      var war = {\n        guild2: $(e.currentTarget).find('select[id=formGuild2Name]').val(),\n        date_start: $(e.currentTarget).find('input[id=formWarDateStart]').val(),\n        time_start: $(e.currentTarget).find('input[id=formWarTimeStart]').val(),\n        date_end: $(e.currentTarget).find('input[id=formWarDateEnd]').val(),\n        time_end: $(e.currentTarget).find('input[id=formWarTimeEnd]').val(),\n        color: $(e.currentTarget).find('input[name=\"radioColor\"]:checked').val(),\n        boost: $('#AddonBoost').is(':checked') ? $('#AddonBoost').val() : '',\n        prize: $(e.currentTarget).find('input[id=formPrize]').val(),\n        max_ananswered: $(e.currentTarget).find('input[id=formMaxUnanswered]').val()\n      };\n      if (war.prize == '') war.prize = 0;\n      fetch(\"/wars\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(war)\n      }).then(function (res) {\n        return res.json();\n      }).then(_.bind(function (res) {\n        if (res.error) alert(res.error);else alert('You successfully sent an invitation to a war!');\n      }, this));\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                           WARS CREATION FORM\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  App.Models.CurrentUser = Backbone.Model.extend({\n    url: \"/get_curr_user\",\n    initialize: function initialize() {\n      var _this3 = this;\n\n      this.fetch({\n        success: function success() {\n          var col = new App.Collections.War();\n          new App.Views.FormWar();\n          currentTable = new App.Views.TableWars({\n            collection: col,\n            type: 'Current',\n            curr_user: _this3.attributes\n          });\n          plannedTable = new App.Views.TableWars({\n            collection: col,\n            type: 'Planned',\n            curr_user: _this3.attributes\n          });\n          historyTable = new App.Views.TableWars({\n            collection: col,\n            type: 'History',\n            curr_user: _this3.attributes\n          });\n          var guild_list = new App.Collections.AllGuilds();\n          new App.Views.AllGuilds({\n            collection: guild_list\n          });\n          $(\"#WarsTableRefresh\").on(\"click\", function () {\n            col.fetch();\n          });\n        }\n      });\n    }\n  }); // ---------------------------------------------------------------------------------------------------------------------------\n  //                                            MAIN\n  // ---------------------------------------------------------------------------------------------------------------------------\n\n  curr_user = new App.Models.CurrentUser();\n}());","map":{"version":3,"sources":["/pingpong/app/javascript/packs/wars.js"],"names":["require","result","$","window","App","Models","Views","Collections","War","Backbone","Model","extend","urlRoot","initialize","Collection","model","url","fetch","TableWars","View","template","_","html","data","collection","type","curr_user","on","render","$el","el","wars","Wars","tagName","each","addOne","append","war","get","row","guild_id","id","is_officer","is_owner","events","attributes","start_date","Date","start","end_date","end","addon_type","addons","addon3","addon1","addon2","css","declineWar","then","res","json","bind","error","alert","remove","warView","acceptWar","AllGuilds","it","name","FormWar","submit","e","preventDefault","console","log","guild2","currentTarget","find","val","date_start","time_start","date_end","time_end","color","boost","is","prize","max_ananswered","method","headers","body","JSON","stringify","CurrentUser","success","col","currentTable","plannedTable","historyTable","guild_list"],"mappings":"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","sourcesContent":["const { result } = require(\"underscore\");\n\n$(function () {\n\twindow.App = {\n\t\tModels: {},\n\t\tViews: {},\n\t\tCollections: {}\n\t};\n\n\n// -----------------------------------------\n//  WARS       MODEL and COLLECTION\n// -----------------------------------------\n\tApp.Models.War = Backbone.Model.extend({\n\t\turlRoot: \"/wars.json\",\n\t\tinitialize: function () {\n\t\t}\n\t});\n\n\tApp.Collections.War = Backbone.Collection.extend({\n\t\tmodel: App.Models.War,\n\t\turl: \"/wars.json\",\n\t\tinitialize: function () {\n\t\t\tthis.fetch()\n\t\t}\n\t});\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                             WARS TABLE\n// ---------------------------------------------------------------------------------------------------------------------------\n\n\t// -----------------------------------------\n\t//  VIEW OF ONE TABLE\n\t// -----------------------------------------\n\tApp.Views.TableWars = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#WarsTableTemplate\").html()),\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection\n\t\t\tthis.type = data.type\n\t\t\tthis.curr_user = data.curr_user\n\n\t\t\tthis.collection.on('sync', this.render, this)\n\t\t},\n\t\trender: function () {\n\t\t\tthis.$el.html(this.template({ type: this.type }))\n\t\t\t$(\"#\" + this.type + \"Wars\").html(this.el)\n\t\t\twars = new App.Views.Wars({ collection: this.collection, type: this.type, curr_user: this.curr_user })\n\t\t\twars.render()\n\t\t\treturn this\n\t\t},\n\t})\n\t\n\t\n\t// -----------------------------------------\n\t//  VIEW OF INNER OF ONE TABLE\n\t// -----------------------------------------\n\tApp.Views.Wars = Backbone.View.extend({\n\t\ttagName: 'tbody',\n\t\tinitialize: function (data) {\n\t\t\tthis.collection = data.collection\n\t\t\tthis.type = data.type\n\t\t\tthis.curr_user = data.curr_user\n\t\t},\n\t\trender: function () {\n\t\t\tthis.collection.each(this.addOne, this)\n\t\t\t$(\"#\" + this.type + \"WarsTable\").append(this.el)\n\t\n\t\t\treturn this\n\t\t},\n\t\taddOne: function (war) {\n\t\t\tif (this.type == 'History') {\n\t\t\t\tif (war.get('is_end') == true) {\n\t\t\t\t\tvar row = new App.Views.War({ model: war });\n\t\t\t\t\tthis.$el.append(row.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.type == 'Current') {\n\t\t\t\tif (war.get('is_accepted') == true && war.get('is_inprogress') == true && war.get('is_end') == false) {\n\t\t\t\t\tvar row = new App.Views.War({ model: war });\n\t\t\t\t\tthis.$el.append(row.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.type == 'Planned') {\n\t\t\t\tif (war.get('is_inprogress') == false && war.get('is_end') == false && (war.get('is_accepted') == true\n\t\t\t\t\t|| (this.curr_user.guild_id == war.get(\"guild2\").id && (this.curr_user.is_officer || this.curr_user.is_owner))))\n\t\t\t\t{\n\t\t\t\t\tvar row = new App.Views.War({ model: war });\n\t\t\t\t\tthis.$el.append(row.render().el);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\n\t// -----------------------------------------\n\t//  VIEW OF ONE ROW\n\t// -----------------------------------------\n\tApp.Views.War = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#WarsRowTemplate\").html()),\n\t\ttagName: 'tr',\n\t\tevents: {\n\t\t\t'click #AcceptWarBtn':\t'acceptWar',\n\t\t\t'click #DeclineWarBtn':\t'declineWar',\n\t\t},\n\t\trender: function () {\n\t\t\tthis.model.attributes.start_date = new Date(this.model.attributes.start)\n\t\t\tthis.model.attributes.end_date = new Date(this.model.attributes.end)\n\t\t\tthis.model.attributes.addon_type = ''\n\t\t\tif (this.model.attributes.addons.addon3 == true)\n\t\t\t\tthis.model.attributes.addon_type = 'boost '\n\t\t\tif (this.model.attributes.addons.addon1 == true)\n\t\t\t\tthis.model.attributes.addon_type += 'disco'\n\t\t\telse if (this.model.attributes.addons.addon2 == true)\n\t\t\t\tthis.model.attributes.addon_type += 'epilepsy'\n\t\t\tif (this.model.attributes.addon_type == '')\n\t\t\t\tthis.model.attributes.addon_type = 'none'\n\t\t\tthis.$el.html(this.template(this.model.attributes))\n\n\t\t\tif (this.model.get.get('is_accepted') == false &&\n\t\t\t\tthis.curr_user.guild_id == war.get(\"guild2\").id &&\n\t\t\t\t(this.curr_user.is_officer || this.curr_user.is_owner))\n\t\t\t{\n\t\t\t\t$(\"#AcceptWarBtn\").css({'display': 'block'});\n\t\t\t\t$(\"#DeclineWarBtn\").css({'display': 'block'});\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tdeclineWar: function (war) {\n\t\t\tfetch(\"/wars/decline/\" + this.model.get(\"id\"))\n\t\t\t.then(res => res.json())\n\t\t\t.then(_.bind((res) => {\n\t\t\t\tif (res.error)\n\t\t\t\t\talert(res.error)\n\t\t\t\telse {\n\t\t\t\t\talert('You successfully declined a war!')\n\t\t\t\t\tthis.$el.remove();\n\t\t\t\t\tthis.warView.$el.remove()\n\t\t\t\t}\n\t\t\t}, this))\n\t\t},\n\t\tacceptWar: function (war) {\n\t\t\tfetch(\"/wars/accept/\" + this.model.get(\"id\"))\n\t\t\t.then(res => res.json())\n\t\t\t.then(_.bind((res) => {\n\t\t\t\tif (res.error)\n\t\t\t\t\talert(res.error)\n\t\t\t\telse {\n\t\t\t\t\talert('You successfully accepted a war!')\n\t\t\t\t\tthis.$el.remove()\n\t\t\t\t\t// this.parent.render()\n\t\t\t\t}\n\t\t\t}, this))\n\t\t},\n\t});\n\n/*\n** Выпадающий список со всеми пользователями для формы создания матча\n*/\n\tApp.Models.AllGuilds = Backbone.Model.extend({ urlRoot: \"/guilds_list\" })\n\tApp.Collections.AllGuilds = Backbone.Collection.extend({\n\t\turl: \"/guilds_list\",\n\t\tmodel: App.Models.AllGuilds,\n\t\tinitialize: function() { this.fetch(); },\n\t});\n\n\tApp.Views.AllGuilds = Backbone.View.extend({\n\t\tinitialize: function() {\n\t\t\tthis.collection.on('sync', this.render, this)\n\t\t},\n        render: function () {\n\t\t\t$('#formGuild2Name').css('color', 'rgba(0, 0, 0, 0.55)');\n\t\t\t$('#formGuild2Name').append(`<option value='' disabled selected>Guildname of your opponent</option>`);\n            this.collection.each((it) => {\n\t\t\t\tvar name = it.get(\"name\");\n\t\t\t\t$('#formGuild2Name').append(`<option value='${name}'>${name}</option>`);\n\t\t\t});\n            return this;\n        }\n    });\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                           WARS CREATION FORM\n// ---------------------------------------------------------------------------------------------------------------------------\n\n\tApp.Views.FormWar = Backbone.View.extend({\n\t\ttemplate: _.template($(\"#WarCreateTemplate\").html()),\n\t\tinitialize: function () {\n\t\t\tthis.$el.html(this.template())\n\t\t\t$(\"#WarCreationForm\").html(this.el)\n\t\t},\n\t\tevents: {\n\t\t\t'submit': 'submit'\n\t\t},\n\t\tsubmit: function (e) {\n\t\t\te.preventDefault();\n\t\t\tconsole.log('here')\n\t\t\tlet war = {\n\t\t\t\tguild2: \t\t$(e.currentTarget).find('select[id=formGuild2Name]').val(),\n\t\t\t\tdate_start: \t$(e.currentTarget).find('input[id=formWarDateStart]').val(),\n\t\t\t\ttime_start: \t$(e.currentTarget).find('input[id=formWarTimeStart]').val(),\n\t\t\t\tdate_end: \t\t$(e.currentTarget).find('input[id=formWarDateEnd]').val(),\n\t\t\t\ttime_end: \t\t$(e.currentTarget).find('input[id=formWarTimeEnd]').val(),\n\t\t\t\tcolor:\t\t\t$(e.currentTarget).find('input[name=\"radioColor\"]:checked').val(),\n\t\t\t\tboost:\t\t\t$('#AddonBoost').is(':checked') ? $('#AddonBoost').val() : '',\n\t\t\t\tprize: \t\t\t$(e.currentTarget).find('input[id=formPrize]').val(),\n\t\t\t\tmax_ananswered: $(e.currentTarget).find('input[id=formMaxUnanswered]').val(),\n\t\t\t}\n\t\t\tif (war.prize == '')\n\t\t\t\twar.prize = 0\n\t\t\tfetch(\"/wars\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(war)\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(_.bind((res) => {\n\t\t\t\t\tif (res.error)\n\t\t\t\t\t\talert(res.error)\n\t\t\t\t\telse\n\t\t\t\t\t\talert('You successfully sent an invitation to a war!')\n\t\t\t\t}, this))\n\t\t},\n\t})\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                           WARS CREATION FORM\n// ---------------------------------------------------------------------------------------------------------------------------\n\tApp.Models.CurrentUser = Backbone.Model.extend({\n\t\turl: \"/get_curr_user\",\n\t\tinitialize: function () {\n\t\t\tthis.fetch({\n\t\t\t\tsuccess: () => {\n\t\t\t\t\tvar col = new App.Collections.War()\n\t\t\t\t\tnew App.Views.FormWar()\n\t\t\t\t\tcurrentTable = new App.Views.TableWars({ collection: col, type: 'Current', curr_user: this.attributes })\n\t\t\t\t\tplannedTable = new App.Views.TableWars({ collection: col, type: 'Planned', curr_user: this.attributes })\n\t\t\t\t\thistoryTable = new App.Views.TableWars({ collection: col, type: 'History', curr_user: this.attributes })\n\t\t\t\t\t\n\t\t\t\t\tvar guild_list = new App.Collections.AllGuilds()\n\t\t\t\t\tnew App.Views.AllGuilds({ collection: guild_list });\n\t\t\t\t\t$(\"#WarsTableRefresh\").on(\"click\", function() { col.fetch(); })\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n\n// ---------------------------------------------------------------------------------------------------------------------------\n//                                            MAIN\n// ---------------------------------------------------------------------------------------------------------------------------\n\n\tcurr_user = new App.Models.CurrentUser()\n}());\n"]},"metadata":{},"sourceType":"module"}